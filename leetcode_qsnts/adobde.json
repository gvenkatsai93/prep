{
    "name": "Adobe",
    "slug": "adobe",
    "questions": [
        {
            "status": "ac",
            "questionId": "1",
            "questionFrontendId": "1",
            "title": "Two Sum",
            "titleSlug": "two-sum",
            "acRate": "52.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2",
            "questionFrontendId": "2",
            "title": "Add Two Numbers",
            "titleSlug": "add-two-numbers",
            "acRate": "42.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "3",
            "questionFrontendId": "3",
            "title": "Longest Substring Without Repeating Characters",
            "titleSlug": "longest-substring-without-repeating-characters",
            "acRate": "34.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "4",
            "questionFrontendId": "4",
            "title": "Median of Two Sorted Arrays",
            "titleSlug": "median-of-two-sorted-arrays",
            "acRate": "39.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "5",
            "questionFrontendId": "5",
            "title": "Longest Palindromic Substring",
            "titleSlug": "longest-palindromic-substring",
            "acRate": "33.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "6",
            "questionFrontendId": "6",
            "title": "Zigzag Conversion",
            "titleSlug": "zigzag-conversion",
            "acRate": "47.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "7",
            "questionFrontendId": "7",
            "title": "Reverse Integer",
            "titleSlug": "reverse-integer",
            "acRate": "28.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "8",
            "questionFrontendId": "8",
            "title": "String to Integer (atoi)",
            "titleSlug": "string-to-integer-atoi",
            "acRate": "17.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "9",
            "questionFrontendId": "9",
            "title": "Palindrome Number",
            "titleSlug": "palindrome-number",
            "acRate": "55.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "10",
            "questionFrontendId": "10",
            "title": "Regular Expression Matching",
            "titleSlug": "regular-expression-matching",
            "acRate": "28.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "11",
            "questionFrontendId": "11",
            "title": "Container With Most Water",
            "titleSlug": "container-with-most-water",
            "acRate": "54.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "12",
            "questionFrontendId": "12",
            "title": "Integer to Roman",
            "titleSlug": "integer-to-roman",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "13",
            "questionFrontendId": "13",
            "title": "Roman to Integer",
            "titleSlug": "roman-to-integer",
            "acRate": "60.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "14",
            "questionFrontendId": "14",
            "title": "Longest Common Prefix",
            "titleSlug": "longest-common-prefix",
            "acRate": "42.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "15",
            "questionFrontendId": "15",
            "title": "3Sum",
            "titleSlug": "3sum",
            "acRate": "34.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "16",
            "questionFrontendId": "16",
            "title": "3Sum Closest",
            "titleSlug": "3sum-closest",
            "acRate": "45.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "17",
            "questionFrontendId": "17",
            "title": "Letter Combinations of a Phone Number",
            "titleSlug": "letter-combinations-of-a-phone-number",
            "acRate": "60.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "18",
            "questionFrontendId": "18",
            "title": "4Sum",
            "titleSlug": "4sum",
            "acRate": "36.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "19",
            "questionFrontendId": "19",
            "title": "Remove Nth Node From End of List",
            "titleSlug": "remove-nth-node-from-end-of-list",
            "acRate": "44.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "20",
            "questionFrontendId": "20",
            "title": "Valid Parentheses",
            "titleSlug": "valid-parentheses",
            "acRate": "40.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "21",
            "questionFrontendId": "21",
            "title": "Merge Two Sorted Lists",
            "titleSlug": "merge-two-sorted-lists",
            "acRate": "64.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "22",
            "questionFrontendId": "22",
            "title": "Generate Parentheses",
            "titleSlug": "generate-parentheses",
            "acRate": "74.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "23",
            "questionFrontendId": "23",
            "title": "Merge k Sorted Lists",
            "titleSlug": "merge-k-sorted-lists",
            "acRate": "52.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "24",
            "questionFrontendId": "24",
            "title": "Swap Nodes in Pairs",
            "titleSlug": "swap-nodes-in-pairs",
            "acRate": "64.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "25",
            "questionFrontendId": "25",
            "title": "Reverse Nodes in k-Group",
            "titleSlug": "reverse-nodes-in-k-group",
            "acRate": "58.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "26",
            "questionFrontendId": "26",
            "title": "Remove Duplicates from Sorted Array",
            "titleSlug": "remove-duplicates-from-sorted-array",
            "acRate": "55.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "27",
            "questionFrontendId": "27",
            "title": "Remove Element",
            "titleSlug": "remove-element",
            "acRate": "56.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "28",
            "questionFrontendId": "28",
            "title": "Find the Index of the First Occurrence in a String",
            "titleSlug": "find-the-index-of-the-first-occurrence-in-a-string",
            "acRate": "41.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "29",
            "questionFrontendId": "29",
            "title": "Divide Two Integers",
            "titleSlug": "divide-two-integers",
            "acRate": "17.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "30",
            "questionFrontendId": "30",
            "title": "Substring with Concatenation of All Words",
            "titleSlug": "substring-with-concatenation-of-all-words",
            "acRate": "32.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "31",
            "questionFrontendId": "31",
            "title": "Next Permutation",
            "titleSlug": "next-permutation",
            "acRate": "39.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "32",
            "questionFrontendId": "32",
            "title": "Longest Valid Parentheses",
            "titleSlug": "longest-valid-parentheses",
            "acRate": "33.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "33",
            "questionFrontendId": "33",
            "title": "Search in Rotated Sorted Array",
            "titleSlug": "search-in-rotated-sorted-array",
            "acRate": "40.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "34",
            "questionFrontendId": "34",
            "title": "Find First and Last Position of Element in Sorted Array",
            "titleSlug": "find-first-and-last-position-of-element-in-sorted-array",
            "acRate": "44.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "35",
            "questionFrontendId": "35",
            "title": "Search Insert Position",
            "titleSlug": "search-insert-position",
            "acRate": "45.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "36",
            "questionFrontendId": "36",
            "title": "Valid Sudoku",
            "titleSlug": "valid-sudoku",
            "acRate": "59.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "37",
            "questionFrontendId": "37",
            "title": "Sudoku Solver",
            "titleSlug": "sudoku-solver",
            "acRate": "60.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "38",
            "questionFrontendId": "38",
            "title": "Count and Say",
            "titleSlug": "count-and-say",
            "acRate": "54.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "39",
            "questionFrontendId": "39",
            "title": "Combination Sum",
            "titleSlug": "combination-sum",
            "acRate": "71.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "40",
            "questionFrontendId": "40",
            "title": "Combination Sum II",
            "titleSlug": "combination-sum-ii",
            "acRate": "54.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "41",
            "questionFrontendId": "41",
            "title": "First Missing Positive",
            "titleSlug": "first-missing-positive",
            "acRate": "37.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "42",
            "questionFrontendId": "42",
            "title": "Trapping Rain Water",
            "titleSlug": "trapping-rain-water",
            "acRate": "60.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "44",
            "questionFrontendId": "44",
            "title": "Wildcard Matching",
            "titleSlug": "wildcard-matching",
            "acRate": "27.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "45",
            "questionFrontendId": "45",
            "title": "Jump Game II",
            "titleSlug": "jump-game-ii",
            "acRate": "40.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "46",
            "questionFrontendId": "46",
            "title": "Permutations",
            "titleSlug": "permutations",
            "acRate": "78.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "48",
            "questionFrontendId": "48",
            "title": "Rotate Image",
            "titleSlug": "rotate-image",
            "acRate": "73.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "49",
            "questionFrontendId": "49",
            "title": "Group Anagrams",
            "titleSlug": "group-anagrams",
            "acRate": "68.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "50",
            "questionFrontendId": "50",
            "title": "Pow(x, n)",
            "titleSlug": "powx-n",
            "acRate": "34.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "51",
            "questionFrontendId": "51",
            "title": "N-Queens",
            "titleSlug": "n-queens",
            "acRate": "67.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "52",
            "questionFrontendId": "52",
            "title": "N-Queens II",
            "titleSlug": "n-queens-ii",
            "acRate": "73.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "53",
            "questionFrontendId": "53",
            "title": "Maximum Subarray",
            "titleSlug": "maximum-subarray",
            "acRate": "50.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "54",
            "questionFrontendId": "54",
            "title": "Spiral Matrix",
            "titleSlug": "spiral-matrix",
            "acRate": "48.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "55",
            "questionFrontendId": "55",
            "title": "Jump Game",
            "titleSlug": "jump-game",
            "acRate": "38.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "56",
            "questionFrontendId": "56",
            "title": "Merge Intervals",
            "titleSlug": "merge-intervals",
            "acRate": "47.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "57",
            "questionFrontendId": "57",
            "title": "Insert Interval",
            "titleSlug": "insert-interval",
            "acRate": "40.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "58",
            "questionFrontendId": "58",
            "title": "Length of Last Word",
            "titleSlug": "length-of-last-word",
            "acRate": "49.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "60",
            "questionFrontendId": "60",
            "title": "Permutation Sequence",
            "titleSlug": "permutation-sequence",
            "acRate": "46.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "61",
            "questionFrontendId": "61",
            "title": "Rotate List",
            "titleSlug": "rotate-list",
            "acRate": "37.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "62",
            "questionFrontendId": "62",
            "title": "Unique Paths",
            "titleSlug": "unique-paths",
            "acRate": "64.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "66",
            "questionFrontendId": "66",
            "title": "Plus One",
            "titleSlug": "plus-one",
            "acRate": "45.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "67",
            "questionFrontendId": "67",
            "title": "Add Binary",
            "titleSlug": "add-binary",
            "acRate": "53.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "68",
            "questionFrontendId": "68",
            "title": "Text Justification",
            "titleSlug": "text-justification",
            "acRate": "42.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "69",
            "questionFrontendId": "69",
            "title": "Sqrt(x)",
            "titleSlug": "sqrtx",
            "acRate": "38.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "70",
            "questionFrontendId": "70",
            "title": "Climbing Stairs",
            "titleSlug": "climbing-stairs",
            "acRate": "52.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "72",
            "questionFrontendId": "72",
            "title": "Edit Distance",
            "titleSlug": "edit-distance",
            "acRate": "56.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "73",
            "questionFrontendId": "73",
            "title": "Set Matrix Zeroes",
            "titleSlug": "set-matrix-zeroes",
            "acRate": "55.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "74",
            "questionFrontendId": "74",
            "title": "Search a 2D Matrix",
            "titleSlug": "search-a-2d-matrix",
            "acRate": "49.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "75",
            "questionFrontendId": "75",
            "title": "Sort Colors",
            "titleSlug": "sort-colors",
            "acRate": "61.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "76",
            "questionFrontendId": "76",
            "title": "Minimum Window Substring",
            "titleSlug": "minimum-window-substring",
            "acRate": "42.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "77",
            "questionFrontendId": "77",
            "title": "Combinations",
            "titleSlug": "combinations",
            "acRate": "70.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "78",
            "questionFrontendId": "78",
            "title": "Subsets",
            "titleSlug": "subsets",
            "acRate": "77.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "79",
            "questionFrontendId": "79",
            "title": "Word Search",
            "titleSlug": "word-search",
            "acRate": "41.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "80",
            "questionFrontendId": "80",
            "title": "Remove Duplicates from Sorted Array II",
            "titleSlug": "remove-duplicates-from-sorted-array-ii",
            "acRate": "57.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "81",
            "questionFrontendId": "81",
            "title": "Search in Rotated Sorted Array II",
            "titleSlug": "search-in-rotated-sorted-array-ii",
            "acRate": "37.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "82",
            "questionFrontendId": "82",
            "title": "Remove Duplicates from Sorted List II",
            "titleSlug": "remove-duplicates-from-sorted-list-ii",
            "acRate": "47.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "83",
            "questionFrontendId": "83",
            "title": "Remove Duplicates from Sorted List",
            "titleSlug": "remove-duplicates-from-sorted-list",
            "acRate": "52.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "84",
            "questionFrontendId": "84",
            "title": "Largest Rectangle in Histogram",
            "titleSlug": "largest-rectangle-in-histogram",
            "acRate": "44.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "85",
            "questionFrontendId": "85",
            "title": "Maximal Rectangle",
            "titleSlug": "maximal-rectangle",
            "acRate": "46.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "86",
            "questionFrontendId": "86",
            "title": "Partition List",
            "titleSlug": "partition-list",
            "acRate": "55.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "87",
            "questionFrontendId": "87",
            "title": "Scramble String",
            "titleSlug": "scramble-string",
            "acRate": "39.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "88",
            "questionFrontendId": "88",
            "title": "Merge Sorted Array",
            "titleSlug": "merge-sorted-array",
            "acRate": "49.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "89",
            "questionFrontendId": "89",
            "title": "Gray Code",
            "titleSlug": "gray-code",
            "acRate": "58.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "90",
            "questionFrontendId": "90",
            "title": "Subsets II",
            "titleSlug": "subsets-ii",
            "acRate": "57.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "92",
            "questionFrontendId": "92",
            "title": "Reverse Linked List II",
            "titleSlug": "reverse-linked-list-ii",
            "acRate": "47.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "94",
            "questionFrontendId": "94",
            "title": "Binary Tree Inorder Traversal",
            "titleSlug": "binary-tree-inorder-traversal",
            "acRate": "75.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "95",
            "questionFrontendId": "95",
            "title": "Unique Binary Search Trees II",
            "titleSlug": "unique-binary-search-trees-ii",
            "acRate": "57.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "97",
            "questionFrontendId": "97",
            "title": "Interleaving String",
            "titleSlug": "interleaving-string",
            "acRate": "39.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "98",
            "questionFrontendId": "98",
            "title": "Validate Binary Search Tree",
            "titleSlug": "validate-binary-search-tree",
            "acRate": "32.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "100",
            "questionFrontendId": "100",
            "title": "Same Tree",
            "titleSlug": "same-tree",
            "acRate": "61.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "101",
            "questionFrontendId": "101",
            "title": "Symmetric Tree",
            "titleSlug": "symmetric-tree",
            "acRate": "56.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "103",
            "questionFrontendId": "103",
            "title": "Binary Tree Zigzag Level Order Traversal",
            "titleSlug": "binary-tree-zigzag-level-order-traversal",
            "acRate": "58.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "104",
            "questionFrontendId": "104",
            "title": "Maximum Depth of Binary Tree",
            "titleSlug": "maximum-depth-of-binary-tree",
            "acRate": "75.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "105",
            "questionFrontendId": "105",
            "title": "Construct Binary Tree from Preorder and Inorder Traversal",
            "titleSlug": "construct-binary-tree-from-preorder-and-inorder-traversal",
            "acRate": "63.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "108",
            "questionFrontendId": "108",
            "title": "Convert Sorted Array to Binary Search Tree",
            "titleSlug": "convert-sorted-array-to-binary-search-tree",
            "acRate": "71.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "109",
            "questionFrontendId": "109",
            "title": "Convert Sorted List to Binary Search Tree",
            "titleSlug": "convert-sorted-list-to-binary-search-tree",
            "acRate": "61.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "110",
            "questionFrontendId": "110",
            "title": "Balanced Binary Tree",
            "titleSlug": "balanced-binary-tree",
            "acRate": "51.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "111",
            "questionFrontendId": "111",
            "title": "Minimum Depth of Binary Tree",
            "titleSlug": "minimum-depth-of-binary-tree",
            "acRate": "47.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "112",
            "questionFrontendId": "112",
            "title": "Path Sum",
            "titleSlug": "path-sum",
            "acRate": "50.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "113",
            "questionFrontendId": "113",
            "title": "Path Sum II",
            "titleSlug": "path-sum-ii",
            "acRate": "58.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "114",
            "questionFrontendId": "114",
            "title": "Flatten Binary Tree to Linked List",
            "titleSlug": "flatten-binary-tree-to-linked-list",
            "acRate": "64.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "116",
            "questionFrontendId": "116",
            "title": "Populating Next Right Pointers in Each Node",
            "titleSlug": "populating-next-right-pointers-in-each-node",
            "acRate": "62.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "117",
            "questionFrontendId": "117",
            "title": "Populating Next Right Pointers in Each Node II",
            "titleSlug": "populating-next-right-pointers-in-each-node-ii",
            "acRate": "52.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "118",
            "questionFrontendId": "118",
            "title": "Pascal's Triangle",
            "titleSlug": "pascals-triangle",
            "acRate": "73.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "119",
            "questionFrontendId": "119",
            "title": "Pascal's Triangle II",
            "titleSlug": "pascals-triangle-ii",
            "acRate": "63.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "120",
            "questionFrontendId": "120",
            "title": "Triangle",
            "titleSlug": "triangle",
            "acRate": "56.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "121",
            "questionFrontendId": "121",
            "title": "Best Time to Buy and Sell Stock",
            "titleSlug": "best-time-to-buy-and-sell-stock",
            "acRate": "53.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "122",
            "questionFrontendId": "122",
            "title": "Best Time to Buy and Sell Stock II",
            "titleSlug": "best-time-to-buy-and-sell-stock-ii",
            "acRate": "66.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "123",
            "questionFrontendId": "123",
            "title": "Best Time to Buy and Sell Stock III",
            "titleSlug": "best-time-to-buy-and-sell-stock-iii",
            "acRate": "47.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "124",
            "questionFrontendId": "124",
            "title": "Binary Tree Maximum Path Sum",
            "titleSlug": "binary-tree-maximum-path-sum",
            "acRate": "39.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "125",
            "questionFrontendId": "125",
            "title": "Valid Palindrome",
            "titleSlug": "valid-palindrome",
            "acRate": "47.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "126",
            "questionFrontendId": "126",
            "title": "Word Ladder II",
            "titleSlug": "word-ladder-ii",
            "acRate": "27.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "127",
            "questionFrontendId": "127",
            "title": "Word Ladder",
            "titleSlug": "word-ladder",
            "acRate": "38.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "128",
            "questionFrontendId": "128",
            "title": "Longest Consecutive Sequence",
            "titleSlug": "longest-consecutive-sequence",
            "acRate": "47.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "129",
            "questionFrontendId": "129",
            "title": "Sum Root to Leaf Numbers",
            "titleSlug": "sum-root-to-leaf-numbers",
            "acRate": "63.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "130",
            "questionFrontendId": "130",
            "title": "Surrounded Regions",
            "titleSlug": "surrounded-regions",
            "acRate": "39.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "131",
            "questionFrontendId": "131",
            "title": "Palindrome Partitioning",
            "titleSlug": "palindrome-partitioning",
            "acRate": "67.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "133",
            "questionFrontendId": "133",
            "title": "Clone Graph",
            "titleSlug": "clone-graph",
            "acRate": "56.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "134",
            "questionFrontendId": "134",
            "title": "Gas Station",
            "titleSlug": "gas-station",
            "acRate": "45.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "135",
            "questionFrontendId": "135",
            "title": "Candy",
            "titleSlug": "candy",
            "acRate": "43.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "136",
            "questionFrontendId": "136",
            "title": "Single Number",
            "titleSlug": "single-number",
            "acRate": "72.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "137",
            "questionFrontendId": "137",
            "title": "Single Number II",
            "titleSlug": "single-number-ii",
            "acRate": "62.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "138",
            "questionFrontendId": "138",
            "title": "Copy List with Random Pointer",
            "titleSlug": "copy-list-with-random-pointer",
            "acRate": "55.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "139",
            "questionFrontendId": "139",
            "title": "Word Break",
            "titleSlug": "word-break",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "141",
            "questionFrontendId": "141",
            "title": "Linked List Cycle",
            "titleSlug": "linked-list-cycle",
            "acRate": "49.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "142",
            "questionFrontendId": "142",
            "title": "Linked List Cycle II",
            "titleSlug": "linked-list-cycle-ii",
            "acRate": "50.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "143",
            "questionFrontendId": "143",
            "title": "Reorder List",
            "titleSlug": "reorder-list",
            "acRate": "56.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "146",
            "questionFrontendId": "146",
            "title": "LRU Cache",
            "titleSlug": "lru-cache",
            "acRate": "42.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "148",
            "questionFrontendId": "148",
            "title": "Sort List",
            "titleSlug": "sort-list",
            "acRate": "57.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "151",
            "questionFrontendId": "151",
            "title": "Reverse Words in a String",
            "titleSlug": "reverse-words-in-a-string",
            "acRate": "40.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "152",
            "questionFrontendId": "152",
            "title": "Maximum Product Subarray",
            "titleSlug": "maximum-product-subarray",
            "acRate": "35.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "153",
            "questionFrontendId": "153",
            "title": "Find Minimum in Rotated Sorted Array",
            "titleSlug": "find-minimum-in-rotated-sorted-array",
            "acRate": "50.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "154",
            "questionFrontendId": "154",
            "title": "Find Minimum in Rotated Sorted Array II",
            "titleSlug": "find-minimum-in-rotated-sorted-array-ii",
            "acRate": "43.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "155",
            "questionFrontendId": "155",
            "title": "Min Stack",
            "titleSlug": "min-stack",
            "acRate": "53.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "160",
            "questionFrontendId": "160",
            "title": "Intersection of Two Linked Lists",
            "titleSlug": "intersection-of-two-linked-lists",
            "acRate": "57.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "162",
            "questionFrontendId": "162",
            "title": "Find Peak Element",
            "titleSlug": "find-peak-element",
            "acRate": "45.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "164",
            "questionFrontendId": "164",
            "title": "Maximum Gap",
            "titleSlug": "maximum-gap",
            "acRate": "45.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Radix Sort",
                    "slug": "radix-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "165",
            "questionFrontendId": "165",
            "title": "Compare Version Numbers",
            "titleSlug": "compare-version-numbers",
            "acRate": "36.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "167",
            "questionFrontendId": "167",
            "title": "Two Sum II - Input Array Is Sorted",
            "titleSlug": "two-sum-ii-input-array-is-sorted",
            "acRate": "61.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "169",
            "questionFrontendId": "169",
            "title": "Majority Element",
            "titleSlug": "majority-element",
            "acRate": "64.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "173",
            "questionFrontendId": "173",
            "title": "Binary Search Tree Iterator",
            "titleSlug": "binary-search-tree-iterator",
            "acRate": "71.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "174",
            "questionFrontendId": "174",
            "title": "Dungeon Game",
            "titleSlug": "dungeon-game",
            "acRate": "38.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "175",
            "questionFrontendId": "175",
            "title": "Combine Two Tables",
            "titleSlug": "combine-two-tables",
            "acRate": "75.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "176",
            "questionFrontendId": "176",
            "title": "Second Highest Salary",
            "titleSlug": "second-highest-salary",
            "acRate": "39.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "177",
            "questionFrontendId": "177",
            "title": "Nth Highest Salary",
            "titleSlug": "nth-highest-salary",
            "acRate": "38.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "178",
            "questionFrontendId": "178",
            "title": "Rank Scores",
            "titleSlug": "rank-scores",
            "acRate": "61.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "179",
            "questionFrontendId": "179",
            "title": "Largest Number",
            "titleSlug": "largest-number",
            "acRate": "35.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "180",
            "questionFrontendId": "180",
            "title": "Consecutive Numbers",
            "titleSlug": "consecutive-numbers",
            "acRate": "47.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "183",
            "questionFrontendId": "183",
            "title": "Customers Who Never Order",
            "titleSlug": "customers-who-never-order",
            "acRate": "68.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "184",
            "questionFrontendId": "184",
            "title": "Department Highest Salary",
            "titleSlug": "department-highest-salary",
            "acRate": "51.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "187",
            "questionFrontendId": "187",
            "title": "Repeated DNA Sequences",
            "titleSlug": "repeated-dna-sequences",
            "acRate": "48.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "188",
            "questionFrontendId": "188",
            "title": "Best Time to Buy and Sell Stock IV",
            "titleSlug": "best-time-to-buy-and-sell-stock-iv",
            "acRate": "42.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "189",
            "questionFrontendId": "189",
            "title": "Rotate Array",
            "titleSlug": "rotate-array",
            "acRate": "40.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "191",
            "questionFrontendId": "191",
            "title": "Number of 1 Bits",
            "titleSlug": "number-of-1-bits",
            "acRate": "70.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "195",
            "questionFrontendId": "195",
            "title": "Tenth Line",
            "titleSlug": "tenth-line",
            "acRate": "33.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Shell",
                    "slug": "shell"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "197",
            "questionFrontendId": "197",
            "title": "Rising Temperature",
            "titleSlug": "rising-temperature",
            "acRate": "46.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "198",
            "questionFrontendId": "198",
            "title": "House Robber",
            "titleSlug": "house-robber",
            "acRate": "50.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "199",
            "questionFrontendId": "199",
            "title": "Binary Tree Right Side View",
            "titleSlug": "binary-tree-right-side-view",
            "acRate": "62.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "200",
            "questionFrontendId": "200",
            "title": "Number of Islands",
            "titleSlug": "number-of-islands",
            "acRate": "58.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "202",
            "questionFrontendId": "202",
            "title": "Happy Number",
            "titleSlug": "happy-number",
            "acRate": "55.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "203",
            "questionFrontendId": "203",
            "title": "Remove Linked List Elements",
            "titleSlug": "remove-linked-list-elements",
            "acRate": "48.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "204",
            "questionFrontendId": "204",
            "title": "Count Primes",
            "titleSlug": "count-primes",
            "acRate": "33.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "205",
            "questionFrontendId": "205",
            "title": "Isomorphic Strings",
            "titleSlug": "isomorphic-strings",
            "acRate": "43.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "206",
            "questionFrontendId": "206",
            "title": "Reverse Linked List",
            "titleSlug": "reverse-linked-list",
            "acRate": "75.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "207",
            "questionFrontendId": "207",
            "title": "Course Schedule",
            "titleSlug": "course-schedule",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "209",
            "questionFrontendId": "209",
            "title": "Minimum Size Subarray Sum",
            "titleSlug": "minimum-size-subarray-sum",
            "acRate": "46.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "213",
            "questionFrontendId": "213",
            "title": "House Robber II",
            "titleSlug": "house-robber-ii",
            "acRate": "41.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "215",
            "questionFrontendId": "215",
            "title": "Kth Largest Element in an Array",
            "titleSlug": "kth-largest-element-in-an-array",
            "acRate": "66.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "216",
            "questionFrontendId": "216",
            "title": "Combination Sum III",
            "titleSlug": "combination-sum-iii",
            "acRate": "69.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "217",
            "questionFrontendId": "217",
            "title": "Contains Duplicate",
            "titleSlug": "contains-duplicate",
            "acRate": "61.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "219",
            "questionFrontendId": "219",
            "title": "Contains Duplicate II",
            "titleSlug": "contains-duplicate-ii",
            "acRate": "44.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "220",
            "questionFrontendId": "220",
            "title": "Contains Duplicate III",
            "titleSlug": "contains-duplicate-iii",
            "acRate": "22.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "221",
            "questionFrontendId": "221",
            "title": "Maximal Square",
            "titleSlug": "maximal-square",
            "acRate": "46.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "225",
            "questionFrontendId": "225",
            "title": "Implement Stack using Queues",
            "titleSlug": "implement-stack-using-queues",
            "acRate": "63.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "226",
            "questionFrontendId": "226",
            "title": "Invert Binary Tree",
            "titleSlug": "invert-binary-tree",
            "acRate": "76.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "227",
            "questionFrontendId": "227",
            "title": "Basic Calculator II",
            "titleSlug": "basic-calculator-ii",
            "acRate": "43.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "229",
            "questionFrontendId": "229",
            "title": "Majority Element II",
            "titleSlug": "majority-element-ii",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "230",
            "questionFrontendId": "230",
            "title": "Kth Smallest Element in a BST",
            "titleSlug": "kth-smallest-element-in-a-bst",
            "acRate": "72.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "231",
            "questionFrontendId": "231",
            "title": "Power of Two",
            "titleSlug": "power-of-two",
            "acRate": "47.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "234",
            "questionFrontendId": "234",
            "title": "Palindrome Linked List",
            "titleSlug": "palindrome-linked-list",
            "acRate": "51.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "235",
            "questionFrontendId": "235",
            "title": "Lowest Common Ancestor of a Binary Search Tree",
            "titleSlug": "lowest-common-ancestor-of-a-binary-search-tree",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "236",
            "questionFrontendId": "236",
            "title": "Lowest Common Ancestor of a Binary Tree",
            "titleSlug": "lowest-common-ancestor-of-a-binary-tree",
            "acRate": "61.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "237",
            "questionFrontendId": "237",
            "title": "Delete Node in a Linked List",
            "titleSlug": "delete-node-in-a-linked-list",
            "acRate": "78.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "238",
            "questionFrontendId": "238",
            "title": "Product of Array Except Self",
            "titleSlug": "product-of-array-except-self",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "239",
            "questionFrontendId": "239",
            "title": "Sliding Window Maximum",
            "titleSlug": "sliding-window-maximum",
            "acRate": "46.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "240",
            "questionFrontendId": "240",
            "title": "Search a 2D Matrix II",
            "titleSlug": "search-a-2d-matrix-ii",
            "acRate": "52.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "241",
            "questionFrontendId": "241",
            "title": "Different Ways to Add Parentheses",
            "titleSlug": "different-ways-to-add-parentheses",
            "acRate": "65.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "242",
            "questionFrontendId": "242",
            "title": "Valid Anagram",
            "titleSlug": "valid-anagram",
            "acRate": "64.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "258",
            "questionFrontendId": "258",
            "title": "Add Digits",
            "titleSlug": "add-digits",
            "acRate": "66.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "260",
            "questionFrontendId": "260",
            "title": "Single Number III",
            "titleSlug": "single-number-iii",
            "acRate": "68.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "262",
            "questionFrontendId": "262",
            "title": "Trips and Users",
            "titleSlug": "trips-and-users",
            "acRate": "36.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "263",
            "questionFrontendId": "263",
            "title": "Ugly Number",
            "titleSlug": "ugly-number",
            "acRate": "42.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "264",
            "questionFrontendId": "264",
            "title": "Ugly Number II",
            "titleSlug": "ugly-number-ii",
            "acRate": "46.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "268",
            "questionFrontendId": "268",
            "title": "Missing Number",
            "titleSlug": "missing-number",
            "acRate": "66.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "274",
            "questionFrontendId": "274",
            "title": "H-Index",
            "titleSlug": "h-index",
            "acRate": "38.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting Sort",
                    "slug": "counting-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "278",
            "questionFrontendId": "278",
            "title": "First Bad Version",
            "titleSlug": "first-bad-version",
            "acRate": "44.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "279",
            "questionFrontendId": "279",
            "title": "Perfect Squares",
            "titleSlug": "perfect-squares",
            "acRate": "54.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "283",
            "questionFrontendId": "283",
            "title": "Move Zeroes",
            "titleSlug": "move-zeroes",
            "acRate": "61.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "285",
            "questionFrontendId": "285",
            "title": "Inorder Successor in BST",
            "titleSlug": "inorder-successor-in-bst",
            "acRate": "49.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "287",
            "questionFrontendId": "287",
            "title": "Find the Duplicate Number",
            "titleSlug": "find-the-duplicate-number",
            "acRate": "59.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "289",
            "questionFrontendId": "289",
            "title": "Game of Life",
            "titleSlug": "game-of-life",
            "acRate": "68.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "290",
            "questionFrontendId": "290",
            "title": "Word Pattern",
            "titleSlug": "word-pattern",
            "acRate": "41.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "292",
            "questionFrontendId": "292",
            "title": "Nim Game",
            "titleSlug": "nim-game",
            "acRate": "56.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Brainteaser",
                    "slug": "brainteaser"
                },
                {
                    "name": "Game Theory",
                    "slug": "game-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "295",
            "questionFrontendId": "295",
            "title": "Find Median from Data Stream",
            "titleSlug": "find-median-from-data-stream",
            "acRate": "51.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "297",
            "questionFrontendId": "297",
            "title": "Serialize and Deserialize Binary Tree",
            "titleSlug": "serialize-and-deserialize-binary-tree",
            "acRate": "56.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "299",
            "questionFrontendId": "299",
            "title": "Bulls and Cows",
            "titleSlug": "bulls-and-cows",
            "acRate": "50.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "300",
            "questionFrontendId": "300",
            "title": "Longest Increasing Subsequence",
            "titleSlug": "longest-increasing-subsequence",
            "acRate": "55.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "301",
            "questionFrontendId": "301",
            "title": "Remove Invalid Parentheses",
            "titleSlug": "remove-invalid-parentheses",
            "acRate": "48.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "303",
            "questionFrontendId": "303",
            "title": "Range Sum Query - Immutable",
            "titleSlug": "range-sum-query-immutable",
            "acRate": "62.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "309",
            "questionFrontendId": "309",
            "title": "Best Time to Buy and Sell Stock with Cooldown",
            "titleSlug": "best-time-to-buy-and-sell-stock-with-cooldown",
            "acRate": "57.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "310",
            "questionFrontendId": "310",
            "title": "Minimum Height Trees",
            "titleSlug": "minimum-height-trees",
            "acRate": "38.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "312",
            "questionFrontendId": "312",
            "title": "Burst Balloons",
            "titleSlug": "burst-balloons",
            "acRate": "58.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "315",
            "questionFrontendId": "315",
            "title": "Count of Smaller Numbers After Self",
            "titleSlug": "count-of-smaller-numbers-after-self",
            "acRate": "42.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "316",
            "questionFrontendId": "316",
            "title": "Remove Duplicate Letters",
            "titleSlug": "remove-duplicate-letters",
            "acRate": "49.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "318",
            "questionFrontendId": "318",
            "title": "Maximum Product of Word Lengths",
            "titleSlug": "maximum-product-of-word-lengths",
            "acRate": "59.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "319",
            "questionFrontendId": "319",
            "title": "Bulb Switcher",
            "titleSlug": "bulb-switcher",
            "acRate": "52.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Brainteaser",
                    "slug": "brainteaser"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "322",
            "questionFrontendId": "322",
            "title": "Coin Change",
            "titleSlug": "coin-change",
            "acRate": "43.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "324",
            "questionFrontendId": "324",
            "title": "Wiggle Sort II",
            "titleSlug": "wiggle-sort-ii",
            "acRate": "34.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "327",
            "questionFrontendId": "327",
            "title": "Count of Range Sum",
            "titleSlug": "count-of-range-sum",
            "acRate": "35.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "328",
            "questionFrontendId": "328",
            "title": "Odd Even Linked List",
            "titleSlug": "odd-even-linked-list",
            "acRate": "61.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "334",
            "questionFrontendId": "334",
            "title": "Increasing Triplet Subsequence",
            "titleSlug": "increasing-triplet-subsequence",
            "acRate": "40.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "337",
            "questionFrontendId": "337",
            "title": "House Robber III",
            "titleSlug": "house-robber-iii",
            "acRate": "54.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "338",
            "questionFrontendId": "338",
            "title": "Counting Bits",
            "titleSlug": "counting-bits",
            "acRate": "78.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "341",
            "questionFrontendId": "341",
            "title": "Flatten Nested List Iterator",
            "titleSlug": "flatten-nested-list-iterator",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "342",
            "questionFrontendId": "342",
            "title": "Power of Four",
            "titleSlug": "power-of-four",
            "acRate": "47.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "344",
            "questionFrontendId": "344",
            "title": "Reverse String",
            "titleSlug": "reverse-string",
            "acRate": "77.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "345",
            "questionFrontendId": "345",
            "title": "Reverse Vowels of a String",
            "titleSlug": "reverse-vowels-of-a-string",
            "acRate": "52.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "347",
            "questionFrontendId": "347",
            "title": "Top K Frequent Elements",
            "titleSlug": "top-k-frequent-elements",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "349",
            "questionFrontendId": "349",
            "title": "Intersection of Two Arrays",
            "titleSlug": "intersection-of-two-arrays",
            "acRate": "72.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "350",
            "questionFrontendId": "350",
            "title": "Intersection of Two Arrays II",
            "titleSlug": "intersection-of-two-arrays-ii",
            "acRate": "56.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "354",
            "questionFrontendId": "354",
            "title": "Russian Doll Envelopes",
            "titleSlug": "russian-doll-envelopes",
            "acRate": "37.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "356",
            "questionFrontendId": "356",
            "title": "Line Reflection",
            "titleSlug": "line-reflection",
            "acRate": "35.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "366",
            "questionFrontendId": "366",
            "title": "Find Leaves of Binary Tree",
            "titleSlug": "find-leaves-of-binary-tree",
            "acRate": "80.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "367",
            "questionFrontendId": "367",
            "title": "Valid Perfect Square",
            "titleSlug": "valid-perfect-square",
            "acRate": "43.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "368",
            "questionFrontendId": "368",
            "title": "Largest Divisible Subset",
            "titleSlug": "largest-divisible-subset",
            "acRate": "45.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "371",
            "questionFrontendId": "371",
            "title": "Sum of Two Integers",
            "titleSlug": "sum-of-two-integers",
            "acRate": "51.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "373",
            "questionFrontendId": "373",
            "title": "Find K Pairs with Smallest Sums",
            "titleSlug": "find-k-pairs-with-smallest-sums",
            "acRate": "40.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "374",
            "questionFrontendId": "374",
            "title": "Guess Number Higher or Lower",
            "titleSlug": "guess-number-higher-or-lower",
            "acRate": "53.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "377",
            "questionFrontendId": "377",
            "title": "Combination Sum IV",
            "titleSlug": "combination-sum-iv",
            "acRate": "54.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "378",
            "questionFrontendId": "378",
            "title": "Kth Smallest Element in a Sorted Matrix",
            "titleSlug": "kth-smallest-element-in-a-sorted-matrix",
            "acRate": "62.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "380",
            "questionFrontendId": "380",
            "title": "Insert Delete GetRandom O(1)",
            "titleSlug": "insert-delete-getrandom-o1",
            "acRate": "54.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "383",
            "questionFrontendId": "383",
            "title": "Ransom Note",
            "titleSlug": "ransom-note",
            "acRate": "60.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "387",
            "questionFrontendId": "387",
            "title": "First Unique Character in a String",
            "titleSlug": "first-unique-character-in-a-string",
            "acRate": "62.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "392",
            "questionFrontendId": "392",
            "title": "Is Subsequence",
            "titleSlug": "is-subsequence",
            "acRate": "47.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "394",
            "questionFrontendId": "394",
            "title": "Decode String",
            "titleSlug": "decode-string",
            "acRate": "59.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "395",
            "questionFrontendId": "395",
            "title": "Longest Substring with At Least K Repeating Characters",
            "titleSlug": "longest-substring-with-at-least-k-repeating-characters",
            "acRate": "44.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "399",
            "questionFrontendId": "399",
            "title": "Evaluate Division",
            "titleSlug": "evaluate-division",
            "acRate": "61.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "402",
            "questionFrontendId": "402",
            "title": "Remove K Digits",
            "titleSlug": "remove-k-digits",
            "acRate": "31.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "403",
            "questionFrontendId": "403",
            "title": "Frog Jump",
            "titleSlug": "frog-jump",
            "acRate": "46.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "405",
            "questionFrontendId": "405",
            "title": "Convert a Number to Hexadecimal",
            "titleSlug": "convert-a-number-to-hexadecimal",
            "acRate": "48.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "410",
            "questionFrontendId": "410",
            "title": "Split Array Largest Sum",
            "titleSlug": "split-array-largest-sum",
            "acRate": "55.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "412",
            "questionFrontendId": "412",
            "title": "Fizz Buzz",
            "titleSlug": "fizz-buzz",
            "acRate": "71.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "413",
            "questionFrontendId": "413",
            "title": "Arithmetic Slices",
            "titleSlug": "arithmetic-slices",
            "acRate": "65.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "414",
            "questionFrontendId": "414",
            "title": "Third Maximum Number",
            "titleSlug": "third-maximum-number",
            "acRate": "34.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "415",
            "questionFrontendId": "415",
            "title": "Add Strings",
            "titleSlug": "add-strings",
            "acRate": "51.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "417",
            "questionFrontendId": "417",
            "title": "Pacific Atlantic Water Flow",
            "titleSlug": "pacific-atlantic-water-flow",
            "acRate": "55.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "424",
            "questionFrontendId": "424",
            "title": "Longest Repeating Character Replacement",
            "titleSlug": "longest-repeating-character-replacement",
            "acRate": "53.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "437",
            "questionFrontendId": "437",
            "title": "Path Sum III",
            "titleSlug": "path-sum-iii",
            "acRate": "46.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "438",
            "questionFrontendId": "438",
            "title": "Find All Anagrams in a String",
            "titleSlug": "find-all-anagrams-in-a-string",
            "acRate": "50.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "441",
            "questionFrontendId": "441",
            "title": "Arranging Coins",
            "titleSlug": "arranging-coins",
            "acRate": "46.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "442",
            "questionFrontendId": "442",
            "title": "Find All Duplicates in an Array",
            "titleSlug": "find-all-duplicates-in-an-array",
            "acRate": "73.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "443",
            "questionFrontendId": "443",
            "title": "String Compression",
            "titleSlug": "string-compression",
            "acRate": "54.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "446",
            "questionFrontendId": "446",
            "title": "Arithmetic Slices II - Subsequence",
            "titleSlug": "arithmetic-slices-ii-subsequence",
            "acRate": "54.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "450",
            "questionFrontendId": "450",
            "title": "Delete Node in a BST",
            "titleSlug": "delete-node-in-a-bst",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "451",
            "questionFrontendId": "451",
            "title": "Sort Characters By Frequency",
            "titleSlug": "sort-characters-by-frequency",
            "acRate": "72.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "453",
            "questionFrontendId": "453",
            "title": "Minimum Moves to Equal Array Elements",
            "titleSlug": "minimum-moves-to-equal-array-elements",
            "acRate": "56.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "454",
            "questionFrontendId": "454",
            "title": "4Sum II",
            "titleSlug": "4sum-ii",
            "acRate": "57.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "455",
            "questionFrontendId": "455",
            "title": "Assign Cookies",
            "titleSlug": "assign-cookies",
            "acRate": "52.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "456",
            "questionFrontendId": "456",
            "title": "132 Pattern",
            "titleSlug": "132-pattern",
            "acRate": "33.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "458",
            "questionFrontendId": "458",
            "title": "Poor Pigs",
            "titleSlug": "poor-pigs",
            "acRate": "59.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "459",
            "questionFrontendId": "459",
            "title": "Repeated Substring Pattern",
            "titleSlug": "repeated-substring-pattern",
            "acRate": "46.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "460",
            "questionFrontendId": "460",
            "title": "LFU Cache",
            "titleSlug": "lfu-cache",
            "acRate": "44.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "462",
            "questionFrontendId": "462",
            "title": "Minimum Moves to Equal Array Elements II",
            "titleSlug": "minimum-moves-to-equal-array-elements-ii",
            "acRate": "60.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "473",
            "questionFrontendId": "473",
            "title": "Matchsticks to Square",
            "titleSlug": "matchsticks-to-square",
            "acRate": "40.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "474",
            "questionFrontendId": "474",
            "title": "Ones and Zeroes",
            "titleSlug": "ones-and-zeroes",
            "acRate": "47.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "485",
            "questionFrontendId": "485",
            "title": "Max Consecutive Ones",
            "titleSlug": "max-consecutive-ones",
            "acRate": "58.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "486",
            "questionFrontendId": "486",
            "title": "Predict the Winner",
            "titleSlug": "predict-the-winner",
            "acRate": "55.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Game Theory",
                    "slug": "game-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "493",
            "questionFrontendId": "493",
            "title": "Reverse Pairs",
            "titleSlug": "reverse-pairs",
            "acRate": "30.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "494",
            "questionFrontendId": "494",
            "title": "Target Sum",
            "titleSlug": "target-sum",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "496",
            "questionFrontendId": "496",
            "title": "Next Greater Element I",
            "titleSlug": "next-greater-element-i",
            "acRate": "72.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "501",
            "questionFrontendId": "501",
            "title": "Find Mode in Binary Search Tree",
            "titleSlug": "find-mode-in-binary-search-tree",
            "acRate": "55.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "503",
            "questionFrontendId": "503",
            "title": "Next Greater Element II",
            "titleSlug": "next-greater-element-ii",
            "acRate": "63.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "506",
            "questionFrontendId": "506",
            "title": "Relative Ranks",
            "titleSlug": "relative-ranks",
            "acRate": "63.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "513",
            "questionFrontendId": "513",
            "title": "Find Bottom Left Tree Value",
            "titleSlug": "find-bottom-left-tree-value",
            "acRate": "71.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "515",
            "questionFrontendId": "515",
            "title": "Find Largest Value in Each Tree Row",
            "titleSlug": "find-largest-value-in-each-tree-row",
            "acRate": "65.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "518",
            "questionFrontendId": "518",
            "title": "Coin Change II",
            "titleSlug": "coin-change-ii",
            "acRate": "63.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "523",
            "questionFrontendId": "523",
            "title": "Continuous Subarray Sum",
            "titleSlug": "continuous-subarray-sum",
            "acRate": "28.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "525",
            "questionFrontendId": "525",
            "title": "Contiguous Array",
            "titleSlug": "contiguous-array",
            "acRate": "46.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "528",
            "questionFrontendId": "1721",
            "title": "Swapping Nodes in a Linked List",
            "titleSlug": "swapping-nodes-in-a-linked-list",
            "acRate": "68.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "532",
            "questionFrontendId": "532",
            "title": "K-diff Pairs in an Array",
            "titleSlug": "k-diff-pairs-in-an-array",
            "acRate": "42.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "535",
            "questionFrontendId": "535",
            "title": "Encode and Decode TinyURL",
            "titleSlug": "encode-and-decode-tinyurl",
            "acRate": "86.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "538",
            "questionFrontendId": "538",
            "title": "Convert BST to Greater Tree",
            "titleSlug": "convert-bst-to-greater-tree",
            "acRate": "68.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "540",
            "questionFrontendId": "540",
            "title": "Single Element in a Sorted Array",
            "titleSlug": "single-element-in-a-sorted-array",
            "acRate": "59.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "541",
            "questionFrontendId": "541",
            "title": "Reverse String II",
            "titleSlug": "reverse-string-ii",
            "acRate": "50.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "542",
            "questionFrontendId": "542",
            "title": "01 Matrix",
            "titleSlug": "01-matrix",
            "acRate": "48.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "543",
            "questionFrontendId": "543",
            "title": "Diameter of Binary Tree",
            "titleSlug": "diameter-of-binary-tree",
            "acRate": "59.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "556",
            "questionFrontendId": "556",
            "title": "Next Greater Element III",
            "titleSlug": "next-greater-element-iii",
            "acRate": "33.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "560",
            "questionFrontendId": "560",
            "title": "Subarray Sum Equals K",
            "titleSlug": "subarray-sum-equals-k",
            "acRate": "43.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "561",
            "questionFrontendId": "561",
            "title": "Array Partition",
            "titleSlug": "array-partition",
            "acRate": "78.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting Sort",
                    "slug": "counting-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "567",
            "questionFrontendId": "567",
            "title": "Permutation in String",
            "titleSlug": "permutation-in-string",
            "acRate": "44.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "572",
            "questionFrontendId": "572",
            "title": "Subtree of Another Tree",
            "titleSlug": "subtree-of-another-tree",
            "acRate": "47.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "576",
            "questionFrontendId": "576",
            "title": "Out of Boundary Paths",
            "titleSlug": "out-of-boundary-paths",
            "acRate": "48.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "584",
            "questionFrontendId": "584",
            "title": "Find Customer Referee",
            "titleSlug": "find-customer-referee",
            "acRate": "69.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "586",
            "questionFrontendId": "586",
            "title": "Customer Placing the Largest Number of Orders",
            "titleSlug": "customer-placing-the-largest-number-of-orders",
            "acRate": "64.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "594",
            "questionFrontendId": "594",
            "title": "Longest Harmonious Subsequence",
            "titleSlug": "longest-harmonious-subsequence",
            "acRate": "54.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "595",
            "questionFrontendId": "595",
            "title": "Big Countries",
            "titleSlug": "big-countries",
            "acRate": "68.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "605",
            "questionFrontendId": "605",
            "title": "Can Place Flowers",
            "titleSlug": "can-place-flowers",
            "acRate": "29.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "606",
            "questionFrontendId": "606",
            "title": "Construct String from Binary Tree",
            "titleSlug": "construct-string-from-binary-tree",
            "acRate": "69.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "617",
            "questionFrontendId": "617",
            "title": "Merge Two Binary Trees",
            "titleSlug": "merge-two-binary-trees",
            "acRate": "78.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "621",
            "questionFrontendId": "621",
            "title": "Task Scheduler",
            "titleSlug": "task-scheduler",
            "acRate": "58.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "628",
            "questionFrontendId": "628",
            "title": "Maximum Product of Three Numbers",
            "titleSlug": "maximum-product-of-three-numbers",
            "acRate": "45.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "632",
            "questionFrontendId": "632",
            "title": "Smallest Range Covering Elements from K Lists",
            "titleSlug": "smallest-range-covering-elements-from-k-lists",
            "acRate": "62.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "637",
            "questionFrontendId": "637",
            "title": "Average of Levels in Binary Tree",
            "titleSlug": "average-of-levels-in-binary-tree",
            "acRate": "72.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "643",
            "questionFrontendId": "643",
            "title": "Maximum Average Subarray I",
            "titleSlug": "maximum-average-subarray-i",
            "acRate": "43.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "647",
            "questionFrontendId": "647",
            "title": "Palindromic Substrings",
            "titleSlug": "palindromic-substrings",
            "acRate": "69.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "653",
            "questionFrontendId": "653",
            "title": "Two Sum IV - Input is a BST",
            "titleSlug": "two-sum-iv-input-is-a-bst",
            "acRate": "61.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "658",
            "questionFrontendId": "658",
            "title": "Find K Closest Elements",
            "titleSlug": "find-k-closest-elements",
            "acRate": "47.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "662",
            "questionFrontendId": "662",
            "title": "Maximum Width of Binary Tree",
            "titleSlug": "maximum-width-of-binary-tree",
            "acRate": "42.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "680",
            "questionFrontendId": "680",
            "title": "Valid Palindrome II",
            "titleSlug": "valid-palindrome-ii",
            "acRate": "40.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "692",
            "questionFrontendId": "692",
            "title": "Top K Frequent Words",
            "titleSlug": "top-k-frequent-words",
            "acRate": "57.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "698",
            "questionFrontendId": "698",
            "title": "Partition to K Equal Sum Subsets",
            "titleSlug": "partition-to-k-equal-sum-subsets",
            "acRate": "38.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "714",
            "questionFrontendId": "714",
            "title": "Best Time to Buy and Sell Stock with Transaction Fee",
            "titleSlug": "best-time-to-buy-and-sell-stock-with-transaction-fee",
            "acRate": "68.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "718",
            "questionFrontendId": "718",
            "title": "Maximum Length of Repeated Subarray",
            "titleSlug": "maximum-length-of-repeated-subarray",
            "acRate": "51.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "724",
            "questionFrontendId": "724",
            "title": "Find Pivot Index",
            "titleSlug": "find-pivot-index",
            "acRate": "57.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "725",
            "questionFrontendId": "725",
            "title": "Split Linked List in Parts",
            "titleSlug": "split-linked-list-in-parts",
            "acRate": "63.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "733",
            "questionFrontendId": "733",
            "title": "Flood Fill",
            "titleSlug": "flood-fill",
            "acRate": "63.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "735",
            "questionFrontendId": "735",
            "title": "Asteroid Collision",
            "titleSlug": "asteroid-collision",
            "acRate": "44.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "739",
            "questionFrontendId": "739",
            "title": "Daily Temperatures",
            "titleSlug": "daily-temperatures",
            "acRate": "66.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "740",
            "questionFrontendId": "740",
            "title": "Delete and Earn",
            "titleSlug": "delete-and-earn",
            "acRate": "56.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "744",
            "questionFrontendId": "743",
            "title": "Network Delay Time",
            "titleSlug": "network-delay-time",
            "acRate": "53.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "747",
            "questionFrontendId": "746",
            "title": "Min Cost Climbing Stairs",
            "titleSlug": "min-cost-climbing-stairs",
            "acRate": "65.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "764",
            "questionFrontendId": "429",
            "title": "N-ary Tree Level Order Traversal",
            "titleSlug": "n-ary-tree-level-order-traversal",
            "acRate": "70.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "768",
            "questionFrontendId": "763",
            "title": "Partition Labels",
            "titleSlug": "partition-labels",
            "acRate": "79.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "778",
            "questionFrontendId": "767",
            "title": "Reorganize String",
            "titleSlug": "reorganize-string",
            "acRate": "54.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "779",
            "questionFrontendId": "768",
            "title": "Max Chunks To Make Sorted II",
            "titleSlug": "max-chunks-to-make-sorted-ii",
            "acRate": "53.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "781",
            "questionFrontendId": "770",
            "title": "Basic Calculator IV",
            "titleSlug": "basic-calculator-iv",
            "acRate": "55.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "782",
            "questionFrontendId": "771",
            "title": "Jewels and Stones",
            "titleSlug": "jewels-and-stones",
            "acRate": "88.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "783",
            "questionFrontendId": "700",
            "title": "Search in a Binary Search Tree",
            "titleSlug": "search-in-a-binary-search-tree",
            "acRate": "79.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "789",
            "questionFrontendId": "703",
            "title": "Kth Largest Element in a Stream",
            "titleSlug": "kth-largest-element-in-a-stream",
            "acRate": "56.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "792",
            "questionFrontendId": "704",
            "title": "Binary Search",
            "titleSlug": "binary-search",
            "acRate": "57.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "795",
            "questionFrontendId": "779",
            "title": "K-th Symbol in Grammar",
            "titleSlug": "k-th-symbol-in-grammar",
            "acRate": "46.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "803",
            "questionFrontendId": "787",
            "title": "Cheapest Flights Within K Stops",
            "titleSlug": "cheapest-flights-within-k-stops",
            "acRate": "39.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "806",
            "questionFrontendId": "790",
            "title": "Domino and Tromino Tiling",
            "titleSlug": "domino-and-tromino-tiling",
            "acRate": "50.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "808",
            "questionFrontendId": "792",
            "title": "Number of Matching Subsequences",
            "titleSlug": "number-of-matching-subsequences",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "809",
            "questionFrontendId": "793",
            "title": "Preimage Size of Factorial Zeroes Function",
            "titleSlug": "preimage-size-of-factorial-zeroes-function",
            "acRate": "44.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "811",
            "questionFrontendId": "795",
            "title": "Number of Subarrays with Bounded Maximum",
            "titleSlug": "number-of-subarrays-with-bounded-maximum",
            "acRate": "53.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "812",
            "questionFrontendId": "796",
            "title": "Rotate String",
            "titleSlug": "rotate-string",
            "acRate": "57.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "813",
            "questionFrontendId": "797",
            "title": "All Paths From Source to Target",
            "titleSlug": "all-paths-from-source-to-target",
            "acRate": "82.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "815",
            "questionFrontendId": "799",
            "title": "Champagne Tower",
            "titleSlug": "champagne-tower",
            "acRate": "58.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "820",
            "questionFrontendId": "802",
            "title": "Find Eventual Safe States",
            "titleSlug": "find-eventual-safe-states",
            "acRate": "62.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "826",
            "questionFrontendId": "808",
            "title": "Soup Servings",
            "titleSlug": "soup-servings",
            "acRate": "54.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Probability and Statistics",
                    "slug": "probability-and-statistics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "843",
            "questionFrontendId": "823",
            "title": "Binary Trees With Factors",
            "titleSlug": "binary-trees-with-factors",
            "acRate": "52.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "854",
            "questionFrontendId": "827",
            "title": "Making A Large Island",
            "titleSlug": "making-a-large-island",
            "acRate": "46.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "866",
            "questionFrontendId": "836",
            "title": "Rectangle Overlap",
            "titleSlug": "rectangle-overlap",
            "acRate": "44.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "882",
            "questionFrontendId": "852",
            "title": "Peak Index in a Mountain Array",
            "titleSlug": "peak-index-in-a-mountain-array",
            "acRate": "68.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "888",
            "questionFrontendId": "858",
            "title": "Mirror Reflection",
            "titleSlug": "mirror-reflection",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "892",
            "questionFrontendId": "862",
            "title": "Shortest Subarray with Sum at Least K",
            "titleSlug": "shortest-subarray-with-sum-at-least-k",
            "acRate": "26.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "893",
            "questionFrontendId": "863",
            "title": "All Nodes Distance K in Binary Tree",
            "titleSlug": "all-nodes-distance-k-in-binary-tree",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "898",
            "questionFrontendId": "867",
            "title": "Transpose Matrix",
            "titleSlug": "transpose-matrix",
            "acRate": "71.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "900",
            "questionFrontendId": "869",
            "title": "Reordered Power of 2",
            "titleSlug": "reordered-power-of-2",
            "acRate": "62.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "907",
            "questionFrontendId": "875",
            "title": "Koko Eating Bananas",
            "titleSlug": "koko-eating-bananas",
            "acRate": "49.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "908",
            "questionFrontendId": "876",
            "title": "Middle of the Linked List",
            "titleSlug": "middle-of-the-linked-list",
            "acRate": "77.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "924",
            "questionFrontendId": "888",
            "title": "Fair Candy Swap",
            "titleSlug": "fair-candy-swap",
            "acRate": "61.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "926",
            "questionFrontendId": "890",
            "title": "Find and Replace Pattern",
            "titleSlug": "find-and-replace-pattern",
            "acRate": "76.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "930",
            "questionFrontendId": "894",
            "title": "All Possible Full Binary Trees",
            "titleSlug": "all-possible-full-binary-trees",
            "acRate": "82.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "931",
            "questionFrontendId": "895",
            "title": "Maximum Frequency Stack",
            "titleSlug": "maximum-frequency-stack",
            "acRate": "66.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "932",
            "questionFrontendId": "896",
            "title": "Monotonic Array",
            "titleSlug": "monotonic-array",
            "acRate": "61.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "933",
            "questionFrontendId": "897",
            "title": "Increasing Order Search Tree",
            "titleSlug": "increasing-order-search-tree",
            "acRate": "78.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "937",
            "questionFrontendId": "901",
            "title": "Online Stock Span",
            "titleSlug": "online-stock-span",
            "acRate": "65.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "944",
            "questionFrontendId": "908",
            "title": "Smallest Range I",
            "titleSlug": "smallest-range-i",
            "acRate": "69.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "946",
            "questionFrontendId": "910",
            "title": "Smallest Range II",
            "titleSlug": "smallest-range-ii",
            "acRate": "36.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "948",
            "questionFrontendId": "912",
            "title": "Sort an Array",
            "titleSlug": "sort-an-array",
            "acRate": "56.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Radix Sort",
                    "slug": "radix-sort"
                },
                {
                    "name": "Counting Sort",
                    "slug": "counting-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "952",
            "questionFrontendId": "916",
            "title": "Word Subsets",
            "titleSlug": "word-subsets",
            "acRate": "52.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "954",
            "questionFrontendId": "918",
            "title": "Maximum Sum Circular Subarray",
            "titleSlug": "maximum-sum-circular-subarray",
            "acRate": "44.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "959",
            "questionFrontendId": "923",
            "title": "3Sum With Multiplicity",
            "titleSlug": "3sum-with-multiplicity",
            "acRate": "45.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "960",
            "questionFrontendId": "924",
            "title": "Minimize Malware Spread",
            "titleSlug": "minimize-malware-spread",
            "acRate": "42.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "971",
            "questionFrontendId": "934",
            "title": "Shortest Bridge",
            "titleSlug": "shortest-bridge",
            "acRate": "57.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "975",
            "questionFrontendId": "938",
            "title": "Range Sum of BST",
            "titleSlug": "range-sum-of-bst",
            "acRate": "86.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "977",
            "questionFrontendId": "940",
            "title": "Distinct Subsequences II",
            "titleSlug": "distinct-subsequences-ii",
            "acRate": "43.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "983",
            "questionFrontendId": "946",
            "title": "Validate Stack Sequences",
            "titleSlug": "validate-stack-sequences",
            "acRate": "69.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "998",
            "questionFrontendId": "958",
            "title": "Check Completeness of a Binary Tree",
            "titleSlug": "check-completeness-of-a-binary-tree",
            "acRate": "56.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1007",
            "questionFrontendId": "967",
            "title": "Numbers With Same Consecutive Differences",
            "titleSlug": "numbers-with-same-consecutive-differences",
            "acRate": "57.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1013",
            "questionFrontendId": "509",
            "title": "Fibonacci Number",
            "titleSlug": "fibonacci-number",
            "acRate": "70.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1014",
            "questionFrontendId": "973",
            "title": "K Closest Points to Origin",
            "titleSlug": "k-closest-points-to-origin",
            "acRate": "66.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1017",
            "questionFrontendId": "975",
            "title": "Odd Even Jump",
            "titleSlug": "odd-even-jump",
            "acRate": "39.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1018",
            "questionFrontendId": "976",
            "title": "Largest Perimeter Triangle",
            "titleSlug": "largest-perimeter-triangle",
            "acRate": "55.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1021",
            "questionFrontendId": "979",
            "title": "Distribute Coins in Binary Tree",
            "titleSlug": "distribute-coins-in-binary-tree",
            "acRate": "72.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1022",
            "questionFrontendId": "980",
            "title": "Unique Paths III",
            "titleSlug": "unique-paths-iii",
            "acRate": "81.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1025",
            "questionFrontendId": "983",
            "title": "Minimum Cost For Tickets",
            "titleSlug": "minimum-cost-for-tickets",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1029",
            "questionFrontendId": "987",
            "title": "Vertical Order Traversal of a Binary Tree",
            "titleSlug": "vertical-order-traversal-of-a-binary-tree",
            "acRate": "47.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1034",
            "questionFrontendId": "992",
            "title": "Subarrays with K Different Integers",
            "titleSlug": "subarrays-with-k-different-integers",
            "acRate": "56.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1035",
            "questionFrontendId": "993",
            "title": "Cousins in Binary Tree",
            "titleSlug": "cousins-in-binary-tree",
            "acRate": "55.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1036",
            "questionFrontendId": "994",
            "title": "Rotting Oranges",
            "titleSlug": "rotting-oranges",
            "acRate": "53.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1039",
            "questionFrontendId": "997",
            "title": "Find the Town Judge",
            "titleSlug": "find-the-town-judge",
            "acRate": "49.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1045",
            "questionFrontendId": "1003",
            "title": "Check If Word Is Valid After Substitutions",
            "titleSlug": "check-if-word-is-valid-after-substitutions",
            "acRate": "59.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1046",
            "questionFrontendId": "1004",
            "title": "Max Consecutive Ones III",
            "titleSlug": "max-consecutive-ones-iii",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1054",
            "questionFrontendId": "1009",
            "title": "Complement of Base 10 Integer",
            "titleSlug": "complement-of-base-10-integer",
            "acRate": "60.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1056",
            "questionFrontendId": "1011",
            "title": "Capacity To Ship Packages Within D Days",
            "titleSlug": "capacity-to-ship-packages-within-d-days",
            "acRate": "69.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "1062",
            "questionFrontendId": "1013",
            "title": "Partition Array Into Three Parts With Equal Sum",
            "titleSlug": "partition-array-into-three-parts-with-equal-sum",
            "acRate": "42.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1073",
            "questionFrontendId": "1020",
            "title": "Number of Enclaves",
            "titleSlug": "number-of-enclaves",
            "acRate": "68.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1078",
            "questionFrontendId": "1021",
            "title": "Remove Outermost Parentheses",
            "titleSlug": "remove-outermost-parentheses",
            "acRate": "82.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1086",
            "questionFrontendId": "1025",
            "title": "Divisor Game",
            "titleSlug": "divisor-game",
            "acRate": "68.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Brainteaser",
                    "slug": "brainteaser"
                },
                {
                    "name": "Game Theory",
                    "slug": "game-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1087",
            "questionFrontendId": "1027",
            "title": "Longest Arithmetic Subsequence",
            "titleSlug": "longest-arithmetic-subsequence",
            "acRate": "49.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1111",
            "questionFrontendId": "1039",
            "title": "Minimum Score Triangulation of Polygon",
            "titleSlug": "minimum-score-triangulation-of-polygon",
            "acRate": "58.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1119",
            "questionFrontendId": "1041",
            "title": "Robot Bounded In Circle",
            "titleSlug": "robot-bounded-in-circle",
            "acRate": "55.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1121",
            "questionFrontendId": "1043",
            "title": "Partition Array for Maximum Sum",
            "titleSlug": "partition-array-for-maximum-sum",
            "acRate": "76.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1127",
            "questionFrontendId": "1046",
            "title": "Last Stone Weight",
            "titleSlug": "last-stone-weight",
            "acRate": "65.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1128",
            "questionFrontendId": "1047",
            "title": "Remove All Adjacent Duplicates In String",
            "titleSlug": "remove-all-adjacent-duplicates-in-string",
            "acRate": "69.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1129",
            "questionFrontendId": "1048",
            "title": "Longest String Chain",
            "titleSlug": "longest-string-chain",
            "acRate": "61.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1135",
            "questionFrontendId": "1045",
            "title": "Customers Who Bought All Products",
            "titleSlug": "customers-who-bought-all-products",
            "acRate": "61.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1142",
            "questionFrontendId": "1197",
            "title": "Minimum Knight Moves",
            "titleSlug": "minimum-knight-moves",
            "acRate": "40.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1146",
            "questionFrontendId": "1071",
            "title": "Greatest Common Divisor of Strings",
            "titleSlug": "greatest-common-divisor-of-strings",
            "acRate": "51.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1153",
            "questionFrontendId": "1068",
            "title": "Product Sales Analysis I",
            "titleSlug": "product-sales-analysis-i",
            "acRate": "81.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1165",
            "questionFrontendId": "1229",
            "title": "Meeting Scheduler",
            "titleSlug": "meeting-scheduler",
            "acRate": "55.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1171",
            "questionFrontendId": "1091",
            "title": "Shortest Path in Binary Matrix",
            "titleSlug": "shortest-path-in-binary-matrix",
            "acRate": "47.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1179",
            "questionFrontendId": "511",
            "title": "Game Play Analysis I",
            "titleSlug": "game-play-analysis-i",
            "acRate": "74.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1182",
            "questionFrontendId": "550",
            "title": "Game Play Analysis IV",
            "titleSlug": "game-play-analysis-iv",
            "acRate": "36.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1205",
            "questionFrontendId": "1108",
            "title": "Defanging an IP Address",
            "titleSlug": "defanging-an-ip-address",
            "acRate": "88.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1212",
            "questionFrontendId": "1291",
            "title": "Sequential Digits",
            "titleSlug": "sequential-digits",
            "acRate": "65.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1221",
            "questionFrontendId": "1287",
            "title": "Element Appearing More Than 25% In Sorted Array",
            "titleSlug": "element-appearing-more-than-25-in-sorted-array",
            "acRate": "61.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1228",
            "questionFrontendId": "1130",
            "title": "Minimum Cost Tree From Leaf Values",
            "titleSlug": "minimum-cost-tree-from-leaf-values",
            "acRate": "67.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1231",
            "questionFrontendId": "1299",
            "title": "Replace Elements with Greatest Element on Right Side",
            "titleSlug": "replace-elements-with-greatest-element-on-right-side",
            "acRate": "71.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1236",
            "questionFrontendId": "1137",
            "title": "N-th Tribonacci Number",
            "titleSlug": "n-th-tribonacci-number",
            "acRate": "63.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1247",
            "questionFrontendId": "1144",
            "title": "Decrease Elements To Make Array Zigzag",
            "titleSlug": "decrease-elements-to-make-array-zigzag",
            "acRate": "47.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1250",
            "questionFrontendId": "1143",
            "title": "Longest Common Subsequence",
            "titleSlug": "longest-common-subsequence",
            "acRate": "57.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1258",
            "questionFrontendId": "1148",
            "title": "Article Views I",
            "titleSlug": "article-views-i",
            "acRate": "74.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "1296",
            "questionFrontendId": "1483",
            "title": "Kth Ancestor of a Tree Node",
            "titleSlug": "kth-ancestor-of-a-tree-node",
            "acRate": "34.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1298",
            "questionFrontendId": "1190",
            "title": "Reverse Substrings Between Each Pair of Parentheses",
            "titleSlug": "reverse-substrings-between-each-pair-of-parentheses",
            "acRate": "66.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1299",
            "questionFrontendId": "1191",
            "title": "K-Concatenation Maximum Sum",
            "titleSlug": "k-concatenation-maximum-sum",
            "acRate": "23.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1300",
            "questionFrontendId": "1192",
            "title": "Critical Connections in a Network",
            "titleSlug": "critical-connections-in-a-network",
            "acRate": "55.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Biconnected Component",
                    "slug": "biconnected-component"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1313",
            "questionFrontendId": "1916",
            "title": "Count Ways to Build Rooms in an Ant Colony",
            "titleSlug": "count-ways-to-build-rooms-in-an-ant-colony",
            "acRate": "48.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1317",
            "questionFrontendId": "1193",
            "title": "Monthly Transactions I",
            "titleSlug": "monthly-transactions-i",
            "acRate": "58.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1319",
            "questionFrontendId": "1207",
            "title": "Unique Number of Occurrences",
            "titleSlug": "unique-number-of-occurrences",
            "acRate": "77.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1329",
            "questionFrontendId": "1217",
            "title": "Minimum Cost to Move Chips to The Same Position",
            "titleSlug": "minimum-cost-to-move-chips-to-the-same-position",
            "acRate": "71.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1352",
            "questionFrontendId": "1235",
            "title": "Maximum Profit in Job Scheduling",
            "titleSlug": "maximum-profit-in-job-scheduling",
            "acRate": "54.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1360",
            "questionFrontendId": "1239",
            "title": "Maximum Length of a Concatenated String with Unique Characters",
            "titleSlug": "maximum-length-of-a-concatenated-string-with-unique-characters",
            "acRate": "54.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1370",
            "questionFrontendId": "1248",
            "title": "Count Number of Nice Subarrays",
            "titleSlug": "count-number-of-nice-subarrays",
            "acRate": "64.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1371",
            "questionFrontendId": "1249",
            "title": "Minimum Remove to Make Valid Parentheses",
            "titleSlug": "minimum-remove-to-make-valid-parentheses",
            "acRate": "67.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1380",
            "questionFrontendId": "1254",
            "title": "Number of Closed Islands",
            "titleSlug": "number-of-closed-islands",
            "acRate": "66.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1390",
            "questionFrontendId": "1251",
            "title": "Average Selling Price",
            "titleSlug": "average-selling-price",
            "acRate": "43.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1392",
            "questionFrontendId": "2215",
            "title": "Find the Difference of Two Arrays",
            "titleSlug": "find-the-difference-of-two-arrays",
            "acRate": "78.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1397",
            "questionFrontendId": "1268",
            "title": "Search Suggestions System",
            "titleSlug": "search-suggestions-system",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1405",
            "questionFrontendId": "1270",
            "title": "All People Report to the Given Manager",
            "titleSlug": "all-people-report-to-the-given-manager",
            "acRate": "85.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1406",
            "questionFrontendId": "1281",
            "title": "Subtract the Product and Sum of Digits of an Integer",
            "titleSlug": "subtract-the-product-and-sum-of-digits-of-an-integer",
            "acRate": "86.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1407",
            "questionFrontendId": "1282",
            "title": "Group the People Given the Group Size They Belong To",
            "titleSlug": "group-the-people-given-the-group-size-they-belong-to",
            "acRate": "87.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1421",
            "questionFrontendId": "1295",
            "title": "Find Numbers with Even Number of Digits",
            "titleSlug": "find-numbers-with-even-number-of-digits",
            "acRate": "77.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1427",
            "questionFrontendId": "1305",
            "title": "All Elements in Two Binary Search Trees",
            "titleSlug": "all-elements-in-two-binary-search-trees",
            "acRate": "79.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1437",
            "questionFrontendId": "1312",
            "title": "Minimum Insertion Steps to Make a String Palindrome",
            "titleSlug": "minimum-insertion-steps-to-make-a-string-palindrome",
            "acRate": "70.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1457",
            "questionFrontendId": "1335",
            "title": "Minimum Difficulty of a Job Schedule",
            "titleSlug": "minimum-difficulty-of-a-job-schedule",
            "acRate": "59.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1460",
            "questionFrontendId": "1358",
            "title": "Number of Substrings Containing All Three Characters",
            "titleSlug": "number-of-substrings-containing-all-three-characters",
            "acRate": "66.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1464",
            "questionFrontendId": "1338",
            "title": "Reduce Array Size to The Half",
            "titleSlug": "reduce-array-size-to-the-half",
            "acRate": "69.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1469",
            "questionFrontendId": "1347",
            "title": "Minimum Number of Steps to Make Two Strings Anagram",
            "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram",
            "acRate": "82.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1484",
            "questionFrontendId": "1367",
            "title": "Linked List in Binary Tree",
            "titleSlug": "linked-list-in-binary-tree",
            "acRate": "43.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1488",
            "questionFrontendId": "1387",
            "title": "Sort Integers by The Power Value",
            "titleSlug": "sort-integers-by-the-power-value",
            "acRate": "69.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1500",
            "questionFrontendId": "1399",
            "title": "Count Largest Group",
            "titleSlug": "count-largest-group",
            "acRate": "66.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1509",
            "questionFrontendId": "1378",
            "title": "Replace Employee ID With The Unique Identifier",
            "titleSlug": "replace-employee-id-with-the-unique-identifier",
            "acRate": "82.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1528",
            "questionFrontendId": "1431",
            "title": "Kids With the Greatest Number of Candies",
            "titleSlug": "kids-with-the-greatest-number-of-candies",
            "acRate": "87.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1537",
            "questionFrontendId": "1422",
            "title": "Maximum Score After Splitting a String",
            "titleSlug": "maximum-score-after-splitting-a-string",
            "acRate": "62.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1538",
            "questionFrontendId": "1423",
            "title": "Maximum Points You Can Obtain from Cards",
            "titleSlug": "maximum-points-you-can-obtain-from-cards",
            "acRate": "52.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1552",
            "questionFrontendId": "1441",
            "title": "Build an Array With Stack Operations",
            "titleSlug": "build-an-array-with-stack-operations",
            "acRate": "79.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1580",
            "questionFrontendId": "1470",
            "title": "Shuffle the Array",
            "titleSlug": "shuffle-the-array",
            "acRate": "88.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1586",
            "questionFrontendId": "1493",
            "title": "Longest Subarray of 1's After Deleting One Element",
            "titleSlug": "longest-subarray-of-1s-after-deleting-one-element",
            "acRate": "67.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1603",
            "questionFrontendId": "1480",
            "title": "Running Sum of 1d Array",
            "titleSlug": "running-sum-of-1d-array",
            "acRate": "86.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1605",
            "questionFrontendId": "1482",
            "title": "Minimum Number of Days to Make m Bouquets",
            "titleSlug": "minimum-number-of-days-to-make-m-bouquets",
            "acRate": "51.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1621",
            "questionFrontendId": "1498",
            "title": "Number of Subsequences That Satisfy the Given Sum Condition",
            "titleSlug": "number-of-subsequences-that-satisfy-the-given-sum-condition",
            "acRate": "43.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1625",
            "questionFrontendId": "1484",
            "title": "Group Sold Products By The Date",
            "titleSlug": "group-sold-products-by-the-date",
            "acRate": "76.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1630",
            "questionFrontendId": "1523",
            "title": "Count Odd Numbers in an Interval Range",
            "titleSlug": "count-odd-numbers-in-an-interval-range",
            "acRate": "49.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1635",
            "questionFrontendId": "1512",
            "title": "Number of Good Pairs",
            "titleSlug": "number-of-good-pairs",
            "acRate": "88.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1637",
            "questionFrontendId": "1531",
            "title": "String Compression II",
            "titleSlug": "string-compression-ii",
            "acRate": "52.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1646",
            "questionFrontendId": "1539",
            "title": "Kth Missing Positive Number",
            "titleSlug": "kth-missing-positive-number",
            "acRate": "59.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1657",
            "questionFrontendId": "1535",
            "title": "Find the Winner of an Array Game",
            "titleSlug": "find-the-winner-of-an-array-game",
            "acRate": "57.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1661",
            "questionFrontendId": "1557",
            "title": "Minimum Number of Vertices to Reach All Nodes",
            "titleSlug": "minimum-number-of-vertices-to-reach-all-nodes",
            "acRate": "81.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1669",
            "questionFrontendId": "1547",
            "title": "Minimum Cost to Cut a Stick",
            "titleSlug": "minimum-cost-to-cut-a-stick",
            "acRate": "61.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1677",
            "questionFrontendId": "1572",
            "title": "Matrix Diagonal Sum",
            "titleSlug": "matrix-diagonal-sum",
            "acRate": "82.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1690",
            "questionFrontendId": "1567",
            "title": "Maximum Length of Subarray With Positive Product",
            "titleSlug": "maximum-length-of-subarray-with-positive-product",
            "acRate": "44.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1693",
            "questionFrontendId": "1588",
            "title": "Sum of All Odd Length Subarrays",
            "titleSlug": "sum-of-all-odd-length-subarrays",
            "acRate": "83.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1706",
            "questionFrontendId": "1584",
            "title": "Min Cost to Connect All Points",
            "titleSlug": "min-cost-to-connect-all-points",
            "acRate": "66.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Minimum Spanning Tree",
                    "slug": "minimum-spanning-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1713",
            "questionFrontendId": "1570",
            "title": "Dot Product of Two Sparse Vectors",
            "titleSlug": "dot-product-of-two-sparse-vectors",
            "acRate": "89.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1724",
            "questionFrontendId": "1581",
            "title": "Customer Who Visited but Did Not Make Any Transactions",
            "titleSlug": "customer-who-visited-but-did-not-make-any-transactions",
            "acRate": "69.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1731",
            "questionFrontendId": "1609",
            "title": "Even Odd Tree",
            "titleSlug": "even-odd-tree",
            "acRate": "65.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1738",
            "questionFrontendId": "1615",
            "title": "Maximal Network Rank",
            "titleSlug": "maximal-network-rank",
            "acRate": "65.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1752",
            "questionFrontendId": "1630",
            "title": "Arithmetic Subarrays",
            "titleSlug": "arithmetic-subarrays",
            "acRate": "83.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1756",
            "questionFrontendId": "1653",
            "title": "Minimum Deletions to Make String Balanced",
            "titleSlug": "minimum-deletions-to-make-string-balanced",
            "acRate": "58.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1771",
            "questionFrontendId": "1648",
            "title": "Sell Diminishing-Valued Colored Balls",
            "titleSlug": "sell-diminishing-valued-colored-balls",
            "acRate": "30.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1776",
            "questionFrontendId": "1658",
            "title": "Minimum Operations to Reduce X to Zero",
            "titleSlug": "minimum-operations-to-reduce-x-to-zero",
            "acRate": "39.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1777",
            "questionFrontendId": "1657",
            "title": "Determine if Two Strings Are Close",
            "titleSlug": "determine-if-two-strings-are-close",
            "acRate": "55.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1782",
            "questionFrontendId": "1663",
            "title": "Smallest String With A Given Numeric Value",
            "titleSlug": "smallest-string-with-a-given-numeric-value",
            "acRate": "66.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1787",
            "questionFrontendId": "1685",
            "title": "Sum of Absolute Differences in a Sorted Array",
            "titleSlug": "sum-of-absolute-differences-in-a-sorted-array",
            "acRate": "68.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1791",
            "questionFrontendId": "1672",
            "title": "Richest Customer Wealth",
            "titleSlug": "richest-customer-wealth",
            "acRate": "87.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1801",
            "questionFrontendId": "1661",
            "title": "Average Time of Process per Machine",
            "titleSlug": "average-time-of-process-per-machine",
            "acRate": "66.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1807",
            "questionFrontendId": "1689",
            "title": "Partitioning Into Minimum Number Of Deci-Binary Numbers",
            "titleSlug": "partitioning-into-minimum-number-of-deci-binary-numbers",
            "acRate": "88.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1811",
            "questionFrontendId": "1667",
            "title": "Fix Names in a Table",
            "titleSlug": "fix-names-in-a-table",
            "acRate": "62.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1813",
            "questionFrontendId": "1695",
            "title": "Maximum Erasure Value",
            "titleSlug": "maximum-erasure-value",
            "acRate": "58.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1817",
            "questionFrontendId": "1716",
            "title": "Calculate Money in Leetcode Bank",
            "titleSlug": "calculate-money-in-leetcode-bank",
            "acRate": "78.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1824",
            "questionFrontendId": "1705",
            "title": "Maximum Number of Eaten Apples",
            "titleSlug": "maximum-number-of-eaten-apples",
            "acRate": "38.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1825",
            "questionFrontendId": "1723",
            "title": "Find Minimum Time to Finish All Jobs",
            "titleSlug": "find-minimum-time-to-finish-all-jobs",
            "acRate": "42.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1829",
            "questionFrontendId": "1710",
            "title": "Maximum Units on a Truck",
            "titleSlug": "maximum-units-on-a-truck",
            "acRate": "73.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1833",
            "questionFrontendId": "1732",
            "title": "Find the Highest Altitude",
            "titleSlug": "find-the-highest-altitude",
            "acRate": "82.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1878",
            "questionFrontendId": "1752",
            "title": "Check if Array Is Sorted and Rotated",
            "titleSlug": "check-if-array-is-sorted-and-rotated",
            "acRate": "50.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1884",
            "questionFrontendId": "1758",
            "title": "Minimum Changes To Make Alternating Binary String",
            "titleSlug": "minimum-changes-to-make-alternating-binary-string",
            "acRate": "64.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1892",
            "questionFrontendId": "1741",
            "title": "Find Total Time Spent by Each Employee",
            "titleSlug": "find-total-time-spent-by-each-employee",
            "acRate": "87.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1894",
            "questionFrontendId": "1768",
            "title": "Merge Strings Alternately",
            "titleSlug": "merge-strings-alternately",
            "acRate": "79.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1908",
            "questionFrontendId": "1757",
            "title": "Recyclable and Low Fat Products",
            "titleSlug": "recyclable-and-low-fat-products",
            "acRate": "89.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1929",
            "questionFrontendId": "1802",
            "title": "Maximum Value at a Given Index in a Bounded Array",
            "titleSlug": "maximum-value-at-a-given-index-in-a-bounded-array",
            "acRate": "39.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1960",
            "questionFrontendId": "1832",
            "title": "Check if the Sentence Is Pangram",
            "titleSlug": "check-if-the-sentence-is-pangram",
            "acRate": "83.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1986",
            "questionFrontendId": "1857",
            "title": "Largest Color Value in a Directed Graph",
            "titleSlug": "largest-color-value-in-a-directed-graph",
            "acRate": "50.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1987",
            "questionFrontendId": "1876",
            "title": "Substrings of Size Three with Distinct Characters",
            "titleSlug": "substrings-of-size-three-with-distinct-characters",
            "acRate": "72.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1988",
            "questionFrontendId": "1877",
            "title": "Minimize Maximum Pair Sum in Array",
            "titleSlug": "minimize-maximum-pair-sum-in-array",
            "acRate": "81.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2015",
            "questionFrontendId": "1886",
            "title": "Determine Whether Matrix Can Be Obtained By Rotation",
            "titleSlug": "determine-whether-matrix-can-be-obtained-by-rotation",
            "acRate": "56.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2032",
            "questionFrontendId": "1903",
            "title": "Largest Odd Number in String",
            "titleSlug": "largest-odd-number-in-string",
            "acRate": "63.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2048",
            "questionFrontendId": "1920",
            "title": "Build Array from Permutation",
            "titleSlug": "build-array-from-permutation",
            "acRate": "89.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2058",
            "questionFrontendId": "1929",
            "title": "Concatenation of Array",
            "titleSlug": "concatenation-of-array",
            "acRate": "89.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2059",
            "questionFrontendId": "1930",
            "title": "Unique Length-3 Palindromic Subsequences",
            "titleSlug": "unique-length-3-palindromic-subsequences",
            "acRate": "66.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2110",
            "questionFrontendId": "1965",
            "title": "Employees With Missing Information",
            "titleSlug": "employees-with-missing-information",
            "acRate": "72.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2117",
            "questionFrontendId": "2007",
            "title": "Find Original Array From Doubled Array",
            "titleSlug": "find-original-array-from-doubled-array",
            "acRate": "40.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2119",
            "questionFrontendId": "2009",
            "title": "Minimum Number of Operations to Make Array Continuous",
            "titleSlug": "minimum-number-of-operations-to-make-array-continuous",
            "acRate": "53.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2127",
            "questionFrontendId": "1978",
            "title": "Employees Whose Manager Left the Company",
            "titleSlug": "employees-whose-manager-left-the-company",
            "acRate": "47.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2148",
            "questionFrontendId": "2037",
            "title": "Minimum Number of Moves to Seat Everyone",
            "titleSlug": "minimum-number-of-moves-to-seat-everyone",
            "acRate": "81.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "2162",
            "questionFrontendId": "2035",
            "title": "Partition Array Into Two Arrays to Minimize Sum Difference",
            "titleSlug": "partition-array-into-two-arrays-to-minimize-sum-difference",
            "acRate": "20.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2165",
            "questionFrontendId": "2055",
            "title": "Plates Between Candles",
            "titleSlug": "plates-between-candles",
            "acRate": "44.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2211",
            "questionFrontendId": "2090",
            "title": "K Radius Subarray Averages",
            "titleSlug": "k-radius-subarray-averages",
            "acRate": "46.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2213",
            "questionFrontendId": "2092",
            "title": "Find All People With Secret",
            "titleSlug": "find-all-people-with-secret",
            "acRate": "46.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2216",
            "questionFrontendId": "2095",
            "title": "Delete the Middle Node of a Linked List",
            "titleSlug": "delete-the-middle-node-of-a-linked-list",
            "acRate": "58.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2263",
            "questionFrontendId": "2141",
            "title": "Maximum Running Time of N Computers",
            "titleSlug": "maximum-running-time-of-n-computers",
            "acRate": "50.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2264",
            "questionFrontendId": "2160",
            "title": "Minimum Sum of Four Digit Number After Splitting Digits",
            "titleSlug": "minimum-sum-of-four-digit-number-after-splitting-digits",
            "acRate": "86.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2271",
            "questionFrontendId": "2149",
            "title": "Rearrange Array Elements by Sign",
            "titleSlug": "rearrange-array-elements-by-sign",
            "acRate": "83.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2282",
            "questionFrontendId": "2143",
            "title": "Choose Numbers From Two Arrays in Range",
            "titleSlug": "choose-numbers-from-two-arrays-in-range",
            "acRate": "50.2%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2284",
            "questionFrontendId": "2165",
            "title": "Smallest Value of the Rearranged Number",
            "titleSlug": "smallest-value-of-the-rearranged-number",
            "acRate": "51.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2338",
            "questionFrontendId": "2260",
            "title": "Minimum Consecutive Cards to Pick Up",
            "titleSlug": "minimum-consecutive-cards-to-pick-up",
            "acRate": "51.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2356",
            "questionFrontendId": "2275",
            "title": "Largest Combination With Bitwise AND Greater Than Zero",
            "titleSlug": "largest-combination-with-bitwise-and-greater-than-zero",
            "acRate": "72.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2383",
            "questionFrontendId": "2235",
            "title": "Add Two Integers",
            "titleSlug": "add-two-integers",
            "acRate": "87.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2409",
            "questionFrontendId": "2328",
            "title": "Number of Increasing Paths in a Grid",
            "titleSlug": "number-of-increasing-paths-in-a-grid",
            "acRate": "58.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2428",
            "questionFrontendId": "2352",
            "title": "Equal Row and Column Pairs",
            "titleSlug": "equal-row-and-column-pairs",
            "acRate": "70.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2457",
            "questionFrontendId": "2376",
            "title": "Count Special Integers",
            "titleSlug": "count-special-integers",
            "acRate": "38.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2461",
            "questionFrontendId": "2385",
            "title": "Amount of Time for Binary Tree to Be Infected",
            "titleSlug": "amount-of-time-for-binary-tree-to-be-infected",
            "acRate": "63.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2469",
            "questionFrontendId": "2389",
            "title": "Longest Subsequence With Limited Sum",
            "titleSlug": "longest-subsequence-with-limited-sum",
            "acRate": "71.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2471",
            "questionFrontendId": "2391",
            "title": "Minimum Amount of Time to Collect Garbage",
            "titleSlug": "minimum-amount-of-time-to-collect-garbage",
            "acRate": "85.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2475",
            "questionFrontendId": "2384",
            "title": "Largest Palindromic Number",
            "titleSlug": "largest-palindromic-number",
            "acRate": "33.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2487",
            "questionFrontendId": "2405",
            "title": "Optimal Partition of String",
            "titleSlug": "optimal-partition-of-string",
            "acRate": "78.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2488",
            "questionFrontendId": "2406",
            "title": "Divide Intervals Into Minimum Number of Groups",
            "titleSlug": "divide-intervals-into-minimum-number-of-groups",
            "acRate": "46.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2491",
            "questionFrontendId": "2413",
            "title": "Smallest Even Multiple",
            "titleSlug": "smallest-even-multiple",
            "acRate": "87.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2502",
            "questionFrontendId": "2418",
            "title": "Sort the People",
            "titleSlug": "sort-the-people",
            "acRate": "79.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2509",
            "questionFrontendId": "2429",
            "title": "Minimize XOR",
            "titleSlug": "minimize-xor",
            "acRate": "43.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2565",
            "questionFrontendId": "2422",
            "title": "Merge Operations to Turn Array Into a Palindrome",
            "titleSlug": "merge-operations-to-turn-array-into-a-palindrome",
            "acRate": "69.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2636",
            "questionFrontendId": "2542",
            "title": "Maximum Subsequence Score",
            "titleSlug": "maximum-subsequence-score",
            "acRate": "53.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2724",
            "questionFrontendId": "2610",
            "title": "Convert an Array Into a 2D Array With Conditions",
            "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
            "acRate": "87.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2732",
            "questionFrontendId": "2620",
            "title": "Counter",
            "titleSlug": "counter",
            "acRate": "80.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2733",
            "questionFrontendId": "2621",
            "title": "Sleep",
            "titleSlug": "sleep",
            "acRate": "86.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2734",
            "questionFrontendId": "2619",
            "title": "Array Prototype Last",
            "titleSlug": "array-prototype-last",
            "acRate": "72.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2739",
            "questionFrontendId": "2646",
            "title": "Minimize the Total Price of the Trips",
            "titleSlug": "minimize-the-total-price-of-the-trips",
            "acRate": "44.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2747",
            "questionFrontendId": "2635",
            "title": "Apply Transform Over Each Element in Array",
            "titleSlug": "apply-transform-over-each-element-in-array",
            "acRate": "85.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2764",
            "questionFrontendId": "2658",
            "title": "Maximum Number of Fish in a Grid",
            "titleSlug": "maximum-number-of-fish-in-a-grid",
            "acRate": "59.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2808",
            "questionFrontendId": "2742",
            "title": "Painting the Walls",
            "titleSlug": "painting-the-walls",
            "acRate": "51.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2809",
            "questionFrontendId": "2667",
            "title": "Create Hello World Function",
            "titleSlug": "create-hello-world-function",
            "acRate": "80.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2813",
            "questionFrontendId": "2704",
            "title": "To Be Or Not To Be",
            "titleSlug": "to-be-or-not-to-be",
            "acRate": "61.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2821",
            "questionFrontendId": "2715",
            "title": "Timeout Cancellation",
            "titleSlug": "timeout-cancellation",
            "acRate": "88.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2849",
            "questionFrontendId": "2763",
            "title": "Sum of Imbalance Numbers of All Subarrays",
            "titleSlug": "sum-of-imbalance-numbers-of-all-subarrays",
            "acRate": "45.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2864",
            "questionFrontendId": "2727",
            "title": "Is Object Empty",
            "titleSlug": "is-object-empty",
            "acRate": "78.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2868",
            "questionFrontendId": "2762",
            "title": "Continuous Subarrays",
            "titleSlug": "continuous-subarrays",
            "acRate": "40.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2876",
            "questionFrontendId": "2798",
            "title": "Number of Employees Who Met the Target",
            "titleSlug": "number-of-employees-who-met-the-target",
            "acRate": "87.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3062",
            "questionFrontendId": "2877",
            "title": "Create a DataFrame from List",
            "titleSlug": "create-a-dataframe-from-list",
            "acRate": "80.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3093",
            "questionFrontendId": "2859",
            "title": "Sum of Values at Indices With K Set Bits",
            "titleSlug": "sum-of-values-at-indices-with-k-set-bits",
            "acRate": "86.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3177",
            "questionFrontendId": "2892",
            "title": "Minimizing Array After Replacing Pairs With Their Product",
            "titleSlug": "minimizing-array-after-replacing-pairs-with-their-product",
            "acRate": "40.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3213",
            "questionFrontendId": "2962",
            "title": "Count Subarrays Where Max Element Appears at Least K Times",
            "titleSlug": "count-subarrays-where-max-element-appears-at-least-k-times",
            "acRate": "45.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3251",
            "questionFrontendId": "3000",
            "title": "Maximum Area of Longest Diagonal Rectangle",
            "titleSlug": "maximum-area-of-longest-diagonal-rectangle",
            "acRate": "35.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        }
    ],
    "frequencies": "{\"120\": [0, 1, 2, 18, 0, 0, 0.06887402901251127, 1.9132985634665525, 3], \"4\": [12, 19, 42, 270, 0.31591744682247913, 0.6582309154537175, 1.6863507210920246, 4.991583502866517, 1], \"17\": [4, 7, 10, 61, 0.0604185235984549, 0.1745713470410199, 0.32876872638027677, 2.739822416721676, 1], \"42\": [8, 17, 27, 135, 0.2002297505731169, 0.6936666161183305, 1.2599123715289964, 4.160878190873217, 1], \"1\": [38, 78, 166, 1962, 0.5651530062741874, 1.3116366867500797, 2.0557091245201544, 5.40629625201209, 1], \"21\": [5, 11, 24, 179, 0.06465539915879236, 0.28010602468380874, 0.9317201093068863, 4.4483749053931865, 1], \"7\": [9, 14, 28, 259, 0.23760797180577634, 0.5001730596497833, 1.2798294831190111, 5.129821085915041, 1], \"148\": [0, 2, 3, 31, 0, 0.05278269957791911, 0.11506932978478719, 2.6406047187054473, 2], \"10\": [0, 1, 3, 47, 0, 0, 0.06412452816953867, 2.8480787148907627, 3], \"2\": [10, 21, 44, 476, 0.21811018862178536, 0.7298759934418709, 1.7160638695370831, 5.268058668963565, 1], \"88\": [13, 18, 23, 109, 0.20211552143139105, 0.3572711876213075, 0.5312907221032914, 2.8182103134471657, 1], \"6\": [3, 4, 8, 68, 0.06963369175880078, 0.12062798778861472, 0.41397579777607296, 3.6389347775976795, 1], \"12\": [3, 5, 9, 55, 0.04715383735719155, 0.12585717118464645, 0.360850762416352, 2.8465673558640936, 1], \"8\": [4, 5, 10, 61, 0.08403892710469892, 0.12838116664820678, 0.4369283775639494, 3.0628786925377995, 1], \"121\": [6, 15, 35, 191, 0.04309979962372266, 0.24315245468045843, 0.9157522947970972, 3.8205771381393347, 1], \"617\": [1, 1, 2, 25, 0, 0, 0.12026486639314354, 3.0429999039335693, 3], \"811\": [0, 0, 0, 4, 0, 0, 0, 1.6506808709681495, 4], \"175\": [1, 1, 3, 69, 0, 0, 0.07350246199292652, 3.7220109353501725, 3], \"13\": [2, 18, 70, 279, 0.007846254455110375, 0.4935043580382333, 1.9424940395257975, 4.8533459198179925, 1], \"155\": [1, 2, 4, 39, 0, 0.025807883955872597, 0.09946079353063801, 2.392533329656985, 2], \"85\": [1, 1, 2, 28, 0, 0, 0.09352605801082346, 3.006458851292634, 3], \"37\": [2, 2, 7, 37, 0.05667238709891086, 0.05667238709891086, 0.538996500732687, 3.0424378007375097, 1], \"56\": [4, 9, 27, 129, 0.05139216886648019, 0.23663161018170556, 1.2245894009300269, 4.022640607824693, 1], \"117\": [0, 0, 2, 9, 0, 0, 0.07008120825318372, 0.9042401934985516, 3], \"146\": [6, 10, 16, 101, 0.16200585212178242, 0.3977821933244195, 0.8112015792746274, 3.9285635192459964, 1], \"647\": [0, 2, 5, 15, 0, 0.04814407445796121, 0.2686990844985702, 1.3282288848299997, 2], \"20\": [12, 17, 37, 152, 0.1658966771265543, 0.30906828967140065, 0.9989904040865503, 3.3996088189770175, 1], \"54\": [5, 11, 17, 81, 0.1673904263895277, 0.6322947631207573, 1.1334690043727318, 3.8881543972761743, 1], \"44\": [2, 5, 7, 34, 0.05189231600351913, 0.2873491275510859, 0.5022671334404725, 2.79684279888348, 1], \"371\": [1, 1, 3, 25, 0, 0, 0.21459649073575138, 2.8691674394699467, 3], \"78\": [2, 3, 6, 50, 0.017513582492708304, 0.03898284849714847, 0.1475667107409061, 2.488433990305969, 1], \"200\": [2, 5, 14, 74, 0.01451404288425404, 0.08743769935669461, 0.5402140827654913, 3.0452183804058377, 1], \"11\": [7, 11, 24, 160, 0.08757154879029228, 0.2037562281296837, 0.7303616297595688, 3.888031865090003, 1], \"118\": [1, 6, 15, 70, 0, 0.16744349276777545, 0.760450862456052, 3.2507669181074337, 2], \"119\": [2, 2, 2, 12, 0.07579383936953364, 0.07579383936953364, 0.07579383936953364, 1.3440770366239985, 1], \"84\": [2, 7, 18, 59, 0.04246922710911266, 0.42621719449659357, 1.5072057833969859, 3.657256701265136, 1], \"3\": [9, 16, 35, 269, 0.09586331774732165, 0.27609489157360956, 0.9248738386003544, 4.496567692381364, 1], \"142\": [1, 2, 2, 24, 0, 0.040821994520255124, 0.040821994520255124, 1.9459101490553132, 2], \"15\": [12, 24, 39, 222, 0.2033722469417143, 0.6429660729696333, 1.218510316928162, 4.346152114207705, 1], \"105\": [3, 3, 7, 40, 0.08709563363542255, 0.08709563363542255, 0.4024271310880877, 2.8436270231592027, 1], \"79\": [0, 1, 6, 43, 0, 0, 0.19075061411165967, 2.4675848888894225, 3], \"14\": [13, 22, 35, 197, 0.3638421350524408, 0.8139551526225512, 1.4305485270300298, 4.609825171188564, 1], \"19\": [3, 3, 9, 54, 0.03891541624967355, 0.03891541624967355, 0.30538164955118186, 2.6288008294480694, 1], \"16\": [1, 5, 15, 55, 0, 0.1670540846631662, 0.9694005571881035, 3.1354942159291497, 2], \"53\": [3, 11, 26, 194, 0.01900395029764534, 0.22947604872871075, 0.8924312830848814, 4.38433415285263, 1], \"300\": [2, 3, 7, 44, 0.019950786419348727, 0.04434223954350788, 0.22062148188149988, 2.3751986060707715, 1], \"268\": [4, 4, 8, 47, 0.048479653376687165, 0.048479653376687165, 0.18123434693303753, 2.0615472135025374, 1], \"94\": [4, 6, 11, 46, 0.08452758931834498, 0.18103443700607286, 0.5110461066243417, 2.5388287900302675, 1], \"199\": [1, 2, 5, 30, 0, 0.023853247807663402, 0.14052258817385616, 1.8612082147943934, 2], \"9\": [11, 17, 24, 133, 0.20840506159972816, 0.44046397657189024, 0.7433770985797438, 3.5517414121437763, 1], \"347\": [2, 6, 9, 41, 0.011614532420693054, 0.09997219291013618, 0.21233771443317775, 1.776554899504203, 1], \"26\": [2, 9, 15, 101, 0.007207238404949222, 0.1366909529148911, 0.34136852265605677, 2.967675055847289, 1], \"125\": [7, 9, 17, 61, 0.0862755417835068, 0.1388500663271059, 0.4262119851023888, 2.059569033310181, 1], \"392\": [2, 2, 5, 28, 0.014378392927714884, 0.014378392927714884, 0.08664925495054676, 1.345087607578514, 1], \"27\": [6, 13, 16, 72, 0.0753968022143459, 0.3130800925768331, 0.4426869819323695, 2.507721054956172, 1], \"782\": [0, 1, 3, 36, 0, 0, 0.08384797247787562, 2.609683849642381, 3], \"5\": [8, 18, 30, 191, 0.14064383994762122, 0.5678739167088147, 1.1390000218506238, 4.453881964798146, 1], \"141\": [3, 3, 7, 50, 0.030677252247047038, 0.030677252247047038, 0.15666938624805468, 2.267321924367275, 1], \"747\": [2, 2, 5, 27, 0.04141378555075714, 0.04141378555075714, 0.23449536545869876, 2.164027499095802, 1], \"135\": [3, 4, 7, 21, 0.09421188205526226, 0.16180517318779045, 0.43039864907704867, 1.764873637336411, 1], \"22\": [4, 9, 18, 108, 0.05805039128849884, 0.26434500315529863, 0.7931327991563416, 3.7970870523182354, 1], \"60\": [2, 2, 6, 24, 0.08052638362008792, 0.08052638362008792, 0.5623075796011341, 2.5707380856377813, 1], \"315\": [0, 0, 2, 23, 0, 0, 0.22695792338968046, 3.5465744720353665, 3], \"206\": [5, 9, 16, 126, 0.07085115360026614, 0.21340465185234309, 0.5606641159484037, 3.8633693958113686, 1], \"18\": [2, 5, 6, 63, 0.035122135027826476, 0.20164511697652365, 0.27893075439887455, 3.5964672159896147, 1], \"167\": [2, 3, 8, 41, 0.01330249080560885, 0.02968555710593203, 0.19413632106679257, 1.8912608718354216, 1], \"83\": [2, 2, 6, 31, 0.027455396452354876, 0.027455396452354876, 0.2235610007045341, 2.03960129079325, 1], \"32\": [2, 3, 4, 45, 0.03344793406754009, 0.07374347424554926, 0.1275612256380188, 2.902486288363931, 1], \"41\": [1, 2, 8, 76, 0, 0.0246926125903715, 0.33647223662121295, 3.6136169696133895, 2], \"111\": [1, 1, 2, 18, 0, 0, 0.04896939169926028, 1.6224024420627259, 3], \"378\": [1, 1, 3, 20, 0, 0, 0.16340610980141893, 2.184876019099465, 3], \"113\": [0, 0, 2, 12, 0, 0, 0.05675281659244948, 1.1321082430962919, 3], \"237\": [1, 1, 3, 41, 0, 0, 0.09844007281325252, 3.011696124543005, 3], \"66\": [7, 7, 14, 55, 0.16803022668319867, 0.16803022668319867, 0.5492129915643591, 2.5092531123826585, 1], \"496\": [1, 2, 6, 26, 0, 0.05495888428075748, 0.4110989258264204, 2.3559384109678936, 2], \"262\": [0, 1, 2, 10, 0, 0, 0.15355773584309076, 1.6388758517139523, 3], \"234\": [1, 6, 11, 66, 0, 0.24019196781599295, 0.6484211448113087, 3.521959050354652, 2], \"174\": [0, 0, 3, 18, 0, 0, 0.4964368863138911, 3.18398856586776, 3], \"501\": [0, 0, 2, 8, 0, 0, 0.1720973230180951, 1.387467381782254, 3], \"67\": [2, 4, 6, 40, 0.028072018778686394, 0.10784852120640745, 0.22811338759955102, 2.516720218477693, 1], \"28\": [1, 2, 4, 41, 0, 0.013042245516450255, 0.051178420707445875, 1.8743990898013234, 2], \"287\": [2, 8, 15, 60, 0.018622512098001826, 0.2629424662760252, 0.7214094276212732, 2.8857663488769885, 1], \"139\": [0, 3, 9, 55, 0, 0.04976150955906385, 0.3778771515893354, 2.898589349539906, 2], \"138\": [3, 3, 6, 32, 0.06528786549635204, 0.06528786549635204, 0.23891064873643067, 2.160579255658215, 1], \"75\": [4, 9, 11, 51, 0.04883484792019348, 0.2258299615763031, 0.32098131578214556, 2.212195536494236, 1], \"180\": [1, 2, 4, 13, 0, 0.07020425867324853, 0.2553466918088445, 1.404312866622569, 2], \"122\": [1, 4, 7, 47, 0, 0.0633875522784949, 0.1826623303532244, 2.3060555466150316, 2], \"322\": [4, 8, 16, 86, 0.06543625837210434, 0.23940952577458774, 0.7333265341421512, 3.473812874845934, 1], \"213\": [1, 2, 5, 14, 0, 0.0383188643021366, 0.21844503053265557, 1.0695481557241984, 2], \"153\": [2, 3, 3, 29, 0.0147767742300973, 0.03294587869130832, 0.03294587869130832, 1.4182494718850724, 1], \"48\": [5, 8, 21, 81, 0.10036495046594894, 0.23922968906583414, 1.0516363561631004, 3.3571384063956518, 1], \"31\": [9, 15, 26, 108, 0.30194025307883704, 0.6826483964617257, 1.3716091657074583, 3.946563169509565, 1], \"415\": [0, 0, 3, 25, 0, 0, 0.10247866928293739, 2.1393605965439773, 3], \"80\": [6, 6, 7, 24, 0.1246424452072766, 0.1246424452072766, 0.1660892444963738, 1.1390802382209562, 1], \"61\": [2, 3, 5, 30, 0.039530838756635246, 0.08684335212155404, 0.22475515520855127, 2.309816944520541, 1], \"189\": [4, 8, 11, 57, 0.03421330062605349, 0.1303448984732597, 0.23366016956582186, 2.0878625870706937, 1], \"108\": [0, 1, 3, 25, 0, 0, 0.09256346432426747, 2.045744338921352, 3], \"70\": [7, 11, 23, 105, 0.14750243013725944, 0.3310826403384103, 0.9991090943182815, 3.6044272388572884, 1], \"349\": [1, 4, 7, 36, 0, 0.13176927763112334, 0.3586096908266592, 2.518377748894864, 2], \"892\": [0, 0, 2, 11, 0, 0, 0.3856624808119847, 2.7236147176433216, 3], \"219\": [2, 5, 9, 37, 0.03427927748029735, 0.19717724212759113, 0.5342628502667055, 2.559974222821423, 1], \"227\": [2, 4, 7, 18, 0.04535924939893056, 0.17026150009995664, 0.4500849859392163, 1.5599746679686328, 1], \"187\": [1, 1, 2, 7, 0, 0, 0.17284281283941086, 1.1973471293537987, 3], \"114\": [1, 2, 3, 16, 0, 0.04049136135473691, 0.08890352514166767, 1.293254329850105, 2], \"34\": [4, 10, 16, 54, 0.0548270222760379, 0.3017600385278265, 0.6427618737453158, 2.422252774820601, 1], \"24\": [1, 3, 11, 42, 0, 0.09362342046209744, 0.8413603429437724, 3.0074948830878743, 2], \"23\": [2, 5, 9, 78, 0.017921626617355583, 0.1070769441021734, 0.31202178019045945, 3.3500626991042077, 1], \"312\": [0, 0, 4, 35, 0, 0, 0.623188591953035, 4.20791453115918, 3], \"136\": [6, 8, 13, 76, 0.09972274823120689, 0.1709453141907205, 0.4003056904815102, 2.8805982894159716, 1], \"151\": [3, 3, 3, 36, 0.027617588343410788, 0.027617588343410788, 0.027617588343410788, 1.6158887473583095, 1], \"595\": [1, 1, 4, 42, 0, 0, 0.06613980250454501, 2.144580843850797, 3], \"38\": [1, 2, 6, 44, 0, 0.05901417143705527, 0.43639026578515083, 3.4151822164536467, 2], \"643\": [0, 2, 3, 7, 0, 0.037563101575648544, 0.08261576551659168, 0.3845134956223861, 2], \"69\": [3, 4, 9, 37, 0.04180822530231373, 0.07315875518638974, 0.32515881942147806, 2.0141437190631115, 1], \"198\": [3, 5, 12, 57, 0.03030534949532895, 0.08201315166083516, 0.40032370860774574, 2.4938409785217663, 1], \"154\": [0, 1, 2, 11, 0, 0, 0.1670540846631662, 1.8718021769015913, 3], \"474\": [1, 1, 3, 9, 0, 0, 0.3483066942682158, 1.55814461804655, 3], \"89\": [1, 1, 2, 11, 0, 0, 0.15355773584309076, 1.7952113193935328, 3], \"55\": [4, 8, 13, 55, 0.0439389733525891, 0.16523841755533875, 0.38828677157307984, 2.2504935841992113, 1], \"177\": [1, 2, 3, 28, 0, 0.07107786641655695, 0.15336110221024074, 2.736851804703922, 2], \"203\": [1, 2, 5, 27, 0, 0.0492104205319947, 0.27403323336592444, 2.3216951480989962, 2], \"50\": [4, 4, 7, 65, 0.07529425330187599, 0.07529425330187599, 0.21470136904554477, 3.075007711991231, 1], \"653\": [2, 2, 2, 7, 0.09374540917097383, 0.09374540917097383, 0.09374540917097383, 0.7902426766162012, 1], \"538\": [0, 0, 2, 4, 0, 0, 0.36101334553733055, 1.007640510462383, 3], \"458\": [2, 2, 4, 8, 0.8916061798458892, 0.9315582040049435, 1.8292789545314403, 3.243193132518907, 1], \"297\": [0, 1, 2, 19, 0, 0, 0.05588045839445659, 1.8224150175898888, 3], \"344\": [2, 4, 11, 77, 0.026739561041899163, 0.10291851200227456, 0.5987173719227651, 3.7176946958510024, 1], \"176\": [3, 3, 5, 40, 0.06759329113252818, 0.06759329113252818, 0.1775185359424692, 2.59764084532666, 1], \"62\": [2, 6, 13, 41, 0.017849648383542402, 0.15021937582418643, 0.5658355508610867, 2.1481116836226, 1], \"561\": [0, 0, 2, 19, 0, 0, 0.10453372768183221, 2.3928739215497483, 3], \"535\": [4, 4, 5, 17, 0.96083797141521, 1.0007899955742643, 1.3051309540126839, 3.4680852913614926, 1], \"33\": [2, 5, 12, 94, 0.009363364288750542, 0.057132282004839004, 0.29167221974790447, 3.0810292624092503, 1], \"303\": [1, 1, 2, 20, 0, 0, 0.13397932096347895, 2.730262834595451, 3], \"195\": [1, 1, 2, 17, 0, 0, 0.31259842371631547, 3.3146862965198656, 3], \"328\": [2, 4, 5, 29, 0.04717856027509048, 0.17666954336260812, 0.2638495970836828, 2.412067536605291, 1], \"680\": [1, 2, 3, 13, 0, 0.03496859783774675, 0.07702694116580719, 0.917713207220698, 2], \"217\": [2, 3, 17, 98, 0.006814336419730212, 0.015267472130788435, 0.40146852842367897, 2.8574521387424285, 1], \"204\": [0, 2, 4, 27, 0, 0.06351340572232586, 0.2329315576803726, 2.561159081287756, 2], \"473\": [0, 0, 2, 5, 0, 0, 0.44183275227903923, 1.497885426528353, 3], \"104\": [1, 3, 5, 37, 0, 0.030428311023895677, 0.08233746634621424, 1.7403999239483516, 2], \"658\": [2, 3, 9, 17, 0.05135916837064474, 0.11205740891571739, 0.7261919753374027, 1.5702066590408177, 1], \"231\": [3, 3, 11, 41, 0.04155722629276385, 0.04155722629276385, 0.4513848836289972, 2.1889131144452274, 1], \"46\": [3, 6, 12, 71, 0.03815638790147632, 0.1445978499082666, 0.48384430939283224, 3.1260931310787345, 1], \"567\": [2, 7, 7, 19, 0.030145462786142038, 0.3183841731593371, 0.3183841731593371, 1.3249641537877175, 1], \"235\": [0, 1, 4, 19, 0, 0, 0.1270540670843162, 1.4003776206857599, 3], \"49\": [8, 13, 23, 74, 0.14462330838358536, 0.3442223359601842, 0.8268760980466529, 2.6612298922352835, 1], \"238\": [3, 5, 13, 79, 0.018813263905953594, 0.05140934589344907, 0.30499286217409843, 2.6510878878401454, 1], \"240\": [1, 2, 7, 35, 0, 0.04470017891790688, 0.44468582126144574, 2.70805020110221, 2], \"184\": [1, 1, 2, 12, 0, 0, 0.11778303565638346, 1.7047480922384253, 3], \"560\": [4, 8, 9, 52, 0.07339377143296942, 0.26590939545778536, 0.3260832429006228, 2.629732695405288, 1], \"453\": [0, 3, 4, 15, 0, 0.5780778507751582, 0.8718389693033213, 3.0236011725627834, 2], \"39\": [0, 2, 7, 50, 0, 0.016563525671674555, 0.18614166909718433, 2.4369772841275004, 2], \"241\": [1, 2, 2, 18, 0, 0.2664662333015083, 0.2664662333015083, 3.2477673920329093, 2], \"226\": [1, 1, 2, 35, 0, 0, 0.02166932025237536, 2.042343437286562, 3], \"412\": [1, 2, 3, 27, 0, 0.04902942724031861, 0.10711776476069794, 2.3182902643563335, 2], \"124\": [0, 4, 6, 43, 0, 0.09144001607911699, 0.19510603298499096, 2.4903277955343177, 2], \"739\": [2, 2, 2, 29, 0.02457126073050533, 0.02457126073050533, 0.02457126073050533, 1.8293923041786504, 1], \"109\": [0, 1, 2, 14, 0, 0, 0.10648348040245009, 1.8726661078408553, 3], \"178\": [1, 2, 3, 11, 0, 0.07315875518638974, 0.15766847536402548, 1.1927142176997425, 2], \"242\": [2, 4, 4, 36, 0.010612994282688776, 0.04179244905704279, 0.04179244905704279, 1.4944583586582314, 1], \"368\": [4, 4, 5, 23, 0.5047206317234034, 0.5091644938159141, 0.7116471943038656, 3.133326976504023, 1], \"197\": [2, 3, 6, 23, 0.01821543989134118, 0.040527833612118376, 0.1530997075812833, 1.232871051498696, 1], \"179\": [3, 3, 6, 27, 0.1466034741918754, 0.1466034741918754, 0.4895482253187058, 2.6239055245946563, 1], \"164\": [0, 2, 3, 10, 0, 0.18658595558041216, 0.37948962170490375, 1.8129019058018643, 2], \"383\": [1, 3, 7, 25, 0, 0.06566910350785725, 0.3144693884154308, 1.7428184641201063, 2], \"229\": [3, 6, 9, 33, 0.05292240145434251, 0.19671029424605424, 0.3981923487790846, 2.0249968337114836, 1], \"283\": [2, 3, 6, 52, 0.01405504514364441, 0.031350529884076016, 0.11990392722552108, 2.3578584253727413, 1], \"354\": [1, 1, 3, 14, 0, 0, 0.25708853309999324, 1.9993649029203318, 3], \"127\": [0, 0, 4, 26, 0, 0, 0.15474822988985495, 2.0882934609742185, 3], \"98\": [1, 2, 3, 35, 0, 0.01396183238176864, 0.031144385701765528, 1.6688004955805078, 2], \"387\": [1, 1, 5, 26, 0, 0, 0.19640022633869886, 1.9268810320467114, 3], \"290\": [1, 1, 3, 13, 0, 0, 0.09758549364146035, 1.073236071174735, 3], \"133\": [0, 2, 3, 24, 0, 0.027436563227155087, 0.0607064314454738, 1.610549950357984, 2], \"160\": [0, 1, 4, 25, 0, 0, 0.14732471475685843, 1.9741361391417016, 3], \"137\": [3, 4, 7, 35, 0.1950000150537256, 0.3240924361476212, 0.775762946076537, 3.411352975133774, 1], \"92\": [1, 5, 6, 37, 0, 0.26356981012283964, 0.36064774155548684, 2.862993260348393, 2], \"225\": [1, 2, 2, 16, 0, 0.06271647386762642, 0.06271647386762642, 1.6375188896389705, 2], \"36\": [2, 3, 7, 36, 0.024892386692628724, 0.05516104129679978, 0.26907910334970325, 2.215539345247053, 1], \"101\": [4, 5, 10, 47, 0.09352605801082346, 0.14252878462127264, 0.47793775692115553, 2.6765966310651685, 1], \"395\": [0, 1, 3, 17, 0, 0, 0.4602156228795727, 2.9839751165679473, 3], \"30\": [1, 1, 3, 23, 0, 0, 0.1300531282481978, 2.2152369589714302, 3], \"403\": [0, 5, 5, 17, 0, 1.1609554192422453, 1.1609554192422453, 3.27150156448953, 2], \"236\": [2, 3, 5, 46, 0.03025949476311255, 0.06684001812585041, 0.1756428779746495, 2.8479234487544667, 1], \"260\": [0, 1, 2, 13, 0, 0, 0.20585205420414873, 2.366230358154402, 3], \"95\": [0, 1, 5, 17, 0, 0, 0.5745874458353896, 2.300097529522244, 3], \"152\": [4, 4, 8, 49, 0.0777467634798399, 0.0777467634798399, 0.28020089890514616, 2.575081704955684, 1], \"216\": [1, 2, 4, 10, 0, 0.0802032857549734, 0.28820385696661954, 1.1274208652998845, 2], \"292\": [1, 1, 3, 28, 0, 0, 0.24921579162398486, 3.244702937097327, 3], \"319\": [1, 1, 4, 10, 0, 0, 0.9679921062510455, 2.416278143398904, 3], \"299\": [0, 2, 3, 8, 0, 0.30774963550259016, 0.5937747067467416, 1.9118754504518005, 2], \"126\": [0, 1, 2, 10, 0, 0, 0.11813128570343429, 1.41943804993247, 3], \"450\": [0, 3, 6, 17, 0, 0.1333332747437359, 0.45140867178877486, 1.7191944566138395, 2], \"239\": [7, 11, 15, 45, 0.2973524774834634, 0.6179513649483861, 0.9516988042434138, 2.728568524096672, 1], \"202\": [1, 4, 8, 42, 0, 0.12615128532690006, 0.4303626597298915, 2.761498035545623, 2], \"394\": [1, 1, 7, 30, 0, 0, 0.42659391559750715, 2.376948965394596, 3], \"230\": [1, 2, 3, 19, 0, 0.03451593709018879, 0.07605014611885268, 1.4277833851019397, 2], \"86\": [0, 6, 10, 26, 0, 0.5465437063680699, 1.1053237232560966, 2.684888402749598, 2], \"460\": [0, 0, 3, 12, 0, 0, 0.5020919437972361, 2.436659816248615, 3], \"337\": [2, 2, 2, 14, 0.19105523676270922, 0.19105523676270922, 0.19105523676270922, 2.426199048961222, 1], \"258\": [0, 0, 1, 18, 0, 0, 0, 1.4938379931102865, 4], \"441\": [0, 2, 2, 9, 0, 0.08607460877124298, 0.08607460877124298, 1.036816569399644, 2], \"35\": [4, 5, 10, 50, 0.03500685613635896, 0.05417268981438029, 0.20103499419113458, 1.8820097379465919, 1], \"169\": [5, 8, 13, 68, 0.0649072836084357, 0.15843334161925918, 0.3738548468395586, 2.5955109037173782, 1], \"350\": [0, 0, 7, 25, 0, 0, 0.4924764850977942, 2.210127982172127, 3], \"76\": [0, 4, 11, 67, 0, 0.08421596697094298, 0.5095067973301952, 3.244593882231312, 2], \"58\": [3, 4, 5, 34, 0.03381238708415533, 0.05934258477665369, 0.09123756335322397, 1.6895923095874856, 1], \"131\": [2, 4, 6, 31, 0.04939275532957643, 0.18442903913351932, 0.37548427589622857, 2.577528139668397, 1], \"341\": [0, 0, 2, 10, 0, 0, 0.13353139262452263, 1.5198257537444133, 3], \"454\": [2, 2, 3, 20, 0.29407187055055195, 0.29407187055055195, 0.5705448584676129, 3.5607060869721487, 1], \"515\": [3, 3, 3, 11, 0.33520721431462625, 0.33520721431462625, 0.33520721431462625, 1.8490817503358836, 1], \"459\": [2, 2, 2, 10, 0.09958470542943662, 0.09958470542943662, 0.09958470542943662, 1.28586639572104, 1], \"301\": [1, 1, 3, 14, 0, 0, 0.26236426446749106, 2.0193376176101303, 3], \"128\": [10, 14, 19, 56, 0.3652797911322508, 0.6228306821424855, 0.95231818213122, 2.696460667407545, 1], \"493\": [0, 1, 3, 16, 0, 0, 0.22426024601428485, 2.0981207426820307, 3], \"191\": [2, 2, 7, 23, 0.03914394066850212, 0.03914394066850212, 0.39811949911889605, 1.8372809825333585, 1], \"97\": [0, 0, 3, 14, 0, 0, 0.22538822116803361, 1.8726661078408553, 3], \"110\": [2, 5, 7, 24, 0.025398190605610438, 0.1490850461536468, 0.2739222438635676, 1.5484514888408902, 1], \"264\": [1, 1, 3, 18, 0, 0, 0.48550781578170077, 3.157000421150113, 3], \"532\": [2, 2, 3, 11, 0.2295744416445002, 0.2295744416445002, 0.4578330936254804, 2.1754845906998135, 1], \"540\": [1, 4, 9, 35, 0, 0.14310084364067333, 0.5759649259369521, 2.5477911595718727, 2], \"123\": [1, 3, 3, 28, 0, 0.1692584628192303, 0.1692584628192303, 2.8370632044416575, 2], \"543\": [1, 2, 4, 36, 0, 0.01775457201238533, 0.06920183606821544, 1.9174888226036086, 2], \"289\": [1, 2, 4, 16, 0, 0.13397932096347895, 0.45328763125380567, 2.3199953746516053, 2], \"279\": [6, 6, 9, 38, 0.7130070484343318, 0.7391835202482866, 1.2418482126818102, 3.8042279176609384, 1], \"209\": [1, 1, 2, 24, 0, 0, 0.021053409197832343, 1.4021258263365712, 3], \"162\": [5, 5, 8, 33, 0.0890902185518269, 0.0890902185518269, 0.21393241792897014, 1.621146953872341, 1], \"556\": [1, 3, 3, 13, 0, 0.35667494393873234, 0.35667494393873234, 2.202501634437063, 2], \"25\": [2, 4, 9, 44, 0.044255009004040724, 0.16635770580494058, 0.6503908125743563, 3.1311566696963253, 1], \"621\": [0, 1, 2, 10, 0, 0, 0.05875404718290381, 0.9214212697616085, 3], \"506\": [0, 2, 2, 10, 0, 0.2776317365982795, 0.2776317365982795, 2.1972245773362196, 2], \"628\": [2, 2, 4, 11, 0.12595240897761434, 0.12595240897761434, 0.42977569760878054, 1.6214460620624969, 1], \"632\": [0, 0, 2, 8, 0, 0, 0.37827896780400755, 2.1230183588789355, 3], \"45\": [3, 5, 10, 65, 0.03547869149924405, 0.09560198021491594, 0.33738903705214907, 2.887827056864506, 1], \"576\": [2, 2, 2, 8, 0.4693404899931309, 0.4737843520856416, 0.4737843520856416, 2.3699604954668168, 1], \"74\": [1, 2, 11, 64, 0, 0.014337163146407267, 0.3624344990970992, 2.7591870452255822, 2], \"72\": [2, 4, 7, 25, 0.033901551675681346, 0.1292117314800062, 0.35235528279421596, 1.8544104341897223, 1], \"809\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"399\": [0, 0, 4, 10, 0, 0, 0.2529118727100632, 1.0291054104877544, 3], \"334\": [0, 0, 3, 17, 0, 0, 0.05712212607799235, 1.0604447981685594, 3], \"866\": [1, 1, 2, 13, 0, 0, 0.33647223662121295, 2.884800712846709, 3], \"374\": [0, 1, 3, 19, 0, 0, 0.1271102185315222, 1.8620232864026591, 3], \"924\": [2, 2, 3, 8, 0.41836851294407224, 0.41836851294407224, 0.7741883905630712, 2.2312704187459365, 1], \"103\": [1, 3, 8, 38, 0, 0.07689525382647662, 0.45004557246426957, 2.626417518819698, 2], \"402\": [1, 1, 2, 16, 0, 0, 0.0877756108823857, 1.9273911012880758, 3], \"40\": [2, 3, 4, 21, 0.024892386692628724, 0.05516104129679978, 0.09605458960764748, 1.3294139026421006, 1], \"367\": [3, 3, 4, 14, 0.15441568579144338, 0.15441568579144338, 0.25993517132481314, 1.5339303599259553, 1], \"944\": [0, 0, 0, 2, 0, 0, 0, 0.38946476676172326, 4], \"215\": [3, 6, 15, 59, 0.029656209582888043, 0.11368695843438001, 0.5610481109303558, 2.537035715222947, 1], \"207\": [3, 3, 5, 24, 0.04333851047555593, 0.04333851047555593, 0.11603172172364844, 1.3440770366239985, 1], \"946\": [0, 0, 0, 36, 0, 0, 0, 4.748062754237088, 4], \"692\": [0, 0, 3, 10, 0, 0, 0.23361485118150516, 1.367105580469022, 3], \"744\": [1, 1, 3, 14, 0, 0, 0.2071597101203954, 1.7938884885547037, 3], \"783\": [0, 1, 3, 9, 0, 0, 0.0680020237096062, 0.49060695997772313, 3], \"29\": [3, 9, 12, 43, 0.07380397458336127, 0.5243507665430315, 0.799995949920764, 2.8175722582876506, 1], \"310\": [2, 2, 2, 7, 0.19966567025192705, 0.19966567025192705, 0.19966567025192705, 1.310272105705856, 1], \"854\": [1, 1, 2, 4, 0, 0, 0.1217306453046817, 0.41726149154853387, 3], \"112\": [1, 2, 3, 21, 0, 0.030606826736080846, 0.06759329113252818, 1.487625791884269, 2], \"263\": [1, 1, 2, 17, 0, 0, 0.08974628785627545, 2.052075169985815, 3], \"443\": [0, 2, 3, 19, 0, 0.029349135141520637, 0.06486423130493428, 1.3050875360650003, 2], \"1013\": [0, 0, 6, 28, 0, 0, 0.22767870647960103, 1.882237054194171, 3], \"1029\": [1, 3, 3, 19, 0, 0.16310930637214985, 0.16310930637214985, 2.092641440009253, 2], \"81\": [0, 2, 3, 23, 0, 0.05320403606346461, 0.11595988109486835, 2.1073941950803676, 2], \"143\": [1, 5, 10, 40, 0, 0.2663948271719758, 0.7979580946650529, 3.0221803948743635, 2], \"51\": [1, 2, 12, 46, 0, 0.03857758982167768, 0.8820839764726192, 3.082198598719469, 2], \"57\": [1, 3, 4, 7, 0, 0.05543290940619299, 0.09651850009864095, 0.27027366348990095, 2], \"316\": [1, 2, 3, 22, 0, 0.16989903679539747, 0.3483066942682158, 3.1530525281425286, 2], \"380\": [2, 3, 7, 21, 0.03795522000043556, 0.08345897538526194, 0.3879036811782171, 1.6610793087029823, 1], \"908\": [2, 4, 11, 38, 0.025675351340230267, 0.09896821680570334, 0.5803905032766506, 2.340729904976398, 1], \"725\": [1, 1, 2, 7, 0, 0, 0.2529118727100632, 1.5096573235697488, 3], \"806\": [0, 2, 2, 15, 0, 0.2421400520048648, 0.2421400520048648, 2.7979493375270037, 2], \"77\": [1, 3, 3, 16, 0, 0.14953173397096375, 0.14953173397096375, 1.7205880872364108, 2], \"278\": [1, 5, 14, 53, 0, 0.2792705055474961, 1.2600997585592224, 3.61626719074429, 2], \"948\": [1, 2, 4, 22, 0, 0.036007490283049635, 0.1368485246338403, 1.693098126005656, 2], \"342\": [1, 2, 5, 21, 0, 0.04450122467051005, 0.250302666464485, 1.794599573380803, 2], \"1034\": [0, 1, 2, 10, 0, 0, 0.2561688067457042, 2.1161675679224112, 3], \"130\": [2, 2, 3, 14, 0.053921416793820044, 0.053921416793820044, 0.11747520126885172, 1.3122929249487976, 1], \"338\": [0, 3, 5, 27, 0, 0.10318423623523076, 0.2638495970836828, 2.2828259430135835, 2], \"446\": [0, 1, 2, 9, 0, 0, 0.48550781578170077, 2.614197292295864, 3], \"975\": [2, 2, 2, 15, 0.06174800706844705, 0.06174800706844705, 0.06174800706844705, 1.5223107209791145, 1], \"1086\": [0, 1, 3, 13, 0, 0, 0.41689380393178715, 2.3714246960310073, 3], \"205\": [3, 5, 10, 33, 0.061960627359177074, 0.16344179897725258, 0.5366262697107239, 2.167266389795427, 1], \"82\": [0, 0, 2, 29, 0, 0, 0.06527602314645073, 2.720118735110751, 3], \"1146\": [2, 2, 2, 4, 0.021254785268323237, 0.021254785268323237, 0.021254785268323237, 0.08243594174340435, 1], \"907\": [6, 9, 10, 29, 0.18619881353074091, 0.3787712523723254, 0.4501228294797279, 1.7545984110535793, 1], \"438\": [2, 3, 7, 19, 0.05511036271051877, 0.11998394835114094, 0.527122697017335, 1.8104690888847832, 1], \"541\": [0, 1, 2, 9, 0, 0, 0.18924199963852842, 1.6522579096170285, 3], \"183\": [0, 0, 2, 10, 0, 0, 0.04740223889458392, 0.794616640724805, 3], \"285\": [0, 0, 2, 10, 0, 0, 0.3007541540191337, 2.279513972092734, 3], \"442\": [0, 0, 3, 23, 0, 0, 0.19977684065403373, 2.6388818140378003, 3], \"90\": [0, 1, 3, 13, 0, 0, 0.07180116605580686, 0.8745722783068628, 3], \"1022\": [0, 2, 2, 6, 0, 0.3933437475758196, 0.3933437475758196, 1.6747291622485376, 2], \"345\": [1, 3, 3, 14, 0, 0.06851994643675606, 0.06851994643675606, 0.9339433030438875, 2], \"1205\": [0, 2, 3, 21, 0, 0.08894748601649616, 0.19004360288786493, 2.4208847910230693, 2], \"309\": [0, 1, 2, 20, 0, 0, 0.11408368723037224, 2.571435365837564, 3], \"513\": [2, 2, 2, 10, 0.0146094636421581, 0.0146094636421581, 0.0146094636421581, 0.3132895735703003, 1], \"274\": [0, 2, 2, 18, 0, 0.04587960575069364, 0.04587960575069364, 1.5692026002422013, 2], \"523\": [0, 1, 5, 12, 0, 0, 0.3746934494414107, 1.2859716394920215, 3], \"494\": [1, 1, 2, 18, 0, 0, 0.053848809125692315, 1.7013473710316704, 3], \"714\": [1, 2, 3, 10, 0, 0.0922312242160336, 0.19671029424605424, 1.2283118726312037, 2], \"930\": [0, 3, 5, 17, 0, 0.5324647988694718, 1.0828639316999706, 3.160319375408177, 2], \"221\": [2, 3, 6, 22, 0.07740806841223596, 0.16643479373146772, 0.5448478925011511, 2.373828950237316, 1], \"455\": [3, 4, 7, 17, 0.1950000150537256, 0.3240924361476212, 0.775762946076537, 2.0686176236188256, 1], \"1298\": [0, 1, 1, 8, 0, 0, 0, 2.329749021934868, 4], \"1313\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"503\": [1, 2, 6, 15, 0, 0.06371581438610768, 0.46505720531040995, 1.5477024765236458, 2], \"971\": [0, 1, 4, 7, 0, 0, 0.7157652691477178, 1.435706802845184, 3], \"73\": [3, 10, 16, 55, 0.053648143557464514, 0.4777050665258443, 0.9429976542002976, 2.9716541383921093, 1], \"295\": [0, 2, 3, 21, 0, 0.03721359634043433, 0.08186387007817315, 1.644823354700472, 2], \"893\": [1, 2, 5, 21, 0, 0.07522342123758753, 0.39762193064713847, 2.263145605911493, 2], \"451\": [2, 3, 5, 9, 0.06025919151819684, 0.13081030251016196, 0.32800704906916056, 0.8143749319891112, 1], \"1056\": [0, 0, 2, 13, 0, 0, 0.050261834780888255, 1.1562001635410708, 3], \"220\": [2, 3, 4, 15, 0.25452986513488046, 0.5020919437972361, 0.7698398013481997, 2.850957789355288, 1], \"1300\": [1, 1, 3, 13, 0, 0, 0.5456944494168147, 2.683008065070045, 3], \"1035\": [0, 1, 2, 8, 0, 0, 0.24362208265775043, 1.688949975361834, 3], \"188\": [0, 2, 3, 12, 0, 0.09599691440839975, 0.20432784239539936, 1.5319528045279351, 2], \"1036\": [1, 1, 6, 24, 0, 0, 0.3483066942682158, 2.03688192726104, 3], \"1046\": [0, 1, 3, 17, 0, 0, 0.06054303245564222, 1.0999982902759868, 3], \"525\": [0, 0, 2, 18, 0, 0, 0.1500938791316439, 2.647408710047674, 3], \"410\": [2, 3, 3, 20, 0.07651914983419623, 0.16460422889798626, 0.16460422889798626, 2.1919089502018325, 1], \"998\": [1, 1, 2, 6, 0, 0, 0.1986706947954841, 1.0912593143628508, 3], \"1021\": [1, 1, 2, 6, 0, 0, 0.4978384282391795, 1.9178709289909204, 3], \"462\": [1, 2, 2, 7, 0, 0.44183275227903923, 0.44183275227903923, 2.054835730877636, 2], \"485\": [1, 5, 5, 12, 0, 0.1847536617625671, 0.1847536617625671, 0.7741883905630712, 2], \"764\": [0, 0, 2, 5, 0, 0, 0.25131442828090605, 1.024504316514388, 3], \"740\": [1, 2, 2, 14, 0, 0.20067069546215116, 0.20067069546215116, 2.4756042571256867, 2], \"789\": [0, 1, 4, 14, 0, 0, 0.2776317365982795, 1.5933085305042167, 3], \"937\": [1, 2, 3, 14, 0, 0.13176927763112334, 0.2752815592533259, 2.067041028481381, 2], \"87\": [0, 0, 2, 8, 0, 0, 0.2646925542270822, 1.7661826274384054, 3], \"733\": [0, 0, 2, 18, 0, 0, 0.06412452816953867, 1.8506945721553683, 3], \"605\": [1, 4, 5, 12, 0, 0.07066957335068921, 0.10833092798699964, 0.5062384597590845, 2], \"1580\": [1, 1, 2, 17, 0, 0, 0.05603706810771108, 1.6417628135880165, 3], \"1087\": [0, 3, 4, 14, 0, 0.9162907318741551, 1.2992829841302609, 3.5165082281731497, 2], \"1119\": [1, 2, 2, 10, 0, 0.2124355370417375, 0.2124355370417375, 1.934005246548995, 2], \"1460\": [0, 1, 2, 7, 0, 0, 0.219455778235025, 1.3878269284696687, 3], \"1603\": [3, 6, 15, 64, 0.09218395607805856, 0.32661386965695594, 1.227932394212141, 3.805517342207445, 1], \"424\": [3, 3, 4, 27, 0.05759749178333644, 0.05759749178333644, 0.10020892907157625, 1.7582667204469407, 1], \"1078\": [3, 3, 4, 13, 0.20112063922677242, 0.20112063922677242, 0.33363937353690887, 1.645416513469332, 1], \"129\": [1, 1, 2, 11, 0, 0, 0.05588045839445659, 1.0074124238797277, 3], \"1635\": [1, 4, 6, 31, 0, 0.1556533097117933, 0.32132043160061075, 2.408366572665666, 2], \"795\": [2, 2, 4, 17, 0.15656906069153992, 0.15656906069153992, 0.5175824062288705, 2.583677705955812, 1], \"1062\": [0, 0, 2, 7, 0, 0, 0.4321333551903257, 2.030989158293889, 3], \"518\": [1, 1, 2, 27, 0, 0, 0.05980855430956858, 2.5041098850210233, 3], \"768\": [0, 0, 2, 14, 0, 0, 0.14897379164772453, 2.1828423069554095, 3], \"1488\": [0, 1, 3, 5, 0, 0, 1.2144441041932312, 2.02537432040956, 3], \"1538\": [1, 1, 2, 6, 0, 0, 0.2322522675124501, 1.209837923778334, 3], \"1171\": [0, 0, 3, 8, 0, 0, 0.12516314295400602, 0.6668792537393351, 3], \"1299\": [0, 2, 2, 5, 0, 0.8109302162163288, 0.8109302162163288, 2.176171168138387, 2], \"134\": [0, 0, 4, 22, 0, 0, 0.09391059944990159, 1.3808951964421199, 3], \"1231\": [1, 1, 2, 7, 0, 0, 0.1147388932751553, 0.9120263330876975, 3], \"1250\": [0, 0, 2, 16, 0, 0, 0.040573516447166516, 1.2947555287452976, 3], \"437\": [0, 3, 5, 15, 0, 0.11150151620722211, 0.28341347296422637, 1.3734335078458442, 2], \"1407\": [4, 4, 4, 8, 0.74757474116062, 0.7737512129745747, 0.7737512129745747, 1.7354594245395225, 1], \"1677\": [1, 1, 2, 12, 0, 0, 0.13353139262452263, 1.8152899666382492, 3], \"1025\": [0, 3, 4, 17, 0, 0.31508104663989533, 0.5058751186061345, 2.5566848476116433, 2], \"1437\": [1, 2, 3, 7, 0, 0.24362208265775043, 0.48285177172358457, 1.4768912564721173, 2], \"1791\": [2, 4, 8, 28, 0.05363215491579521, 0.19916693578028485, 0.6320920253059393, 2.4680061433505203, 1], \"698\": [2, 2, 3, 20, 0.1720973230180951, 0.1720973230180951, 0.352440639799944, 2.9846380962695913, 1], \"1128\": [0, 1, 4, 20, 0, 0, 0.30774963550259016, 2.303485588327296, 3], \"1528\": [2, 3, 4, 19, 0.029392270127613595, 0.06495789627477239, 0.11271594835178343, 1.3061739720797445, 1], \"1782\": [0, 0, 2, 4, 0, 0, 0.8286926725561692, 1.8182862235614836, 3], \"173\": [3, 3, 4, 16, 0.1293046812407275, 0.1293046812407275, 0.219455778235025, 1.5946045131399993, 1], \"778\": [3, 3, 4, 17, 0.16893998809812322, 0.16893998809812322, 0.283070227229218, 1.9329725972394178, 1], \"377\": [0, 1, 2, 12, 0, 0, 0.12099331128663167, 1.7281494201066177, 3], \"931\": [0, 1, 3, 9, 0, 0, 0.9582549309731873, 2.738533217827286, 3], \"542\": [1, 2, 4, 26, 0, 0.053560323833736816, 0.1989185047760601, 2.3319969846971658, 2], \"572\": [0, 0, 2, 13, 0, 0, 0.053994220576736765, 1.207157740896222, 3], \"843\": [2, 2, 3, 9, 0.784753744402374, 0.8109302162163288, 1.33828514193353, 3.2700441114426, 1], \"1500\": [0, 1, 2, 4, 0, 0, 0.6359887667199967, 1.5163474893680884, 3], \"812\": [2, 3, 4, 11, 0.09909090264423091, 0.21056476910734964, 0.3483066942682158, 1.4233593067624335, 1], \"1693\": [0, 1, 5, 17, 0, 0, 1.0626186860202043, 3.130872220246314, 3], \"1018\": [0, 1, 3, 9, 0, 0, 0.37001835911241676, 1.6153903109613956, 3], \"724\": [0, 0, 4, 21, 0, 0, 0.16312782492496253, 1.7721893730339577, 3], \"1329\": [0, 0, 2, 8, 0, 0, 0.3281156420302715, 1.9759670564881233, 3], \"792\": [2, 4, 12, 57, 0.011055944567589151, 0.04350876546293221, 0.3366310424020771, 2.3055822645777533, 1], \"1111\": [0, 2, 2, 5, 0, 0.7621400520468967, 0.7621400520468967, 2.097141118779237, 2], \"1319\": [3, 5, 15, 44, 0.10610650599454778, 0.27074845992234126, 1.3346082165996114, 3.222054846023555, 1], \"1752\": [1, 1, 2, 5, 0, 0, 0.3643378166843015, 1.3210229707666667, 3], \"983\": [0, 1, 2, 11, 0, 0, 0.29849298855599654, 2.4442356100570723, 3], \"1756\": [0, 1, 2, 6, 0, 0, 1.2992829841302609, 3.2188758248682006, 3], \"116\": [0, 0, 6, 18, 0, 0, 0.42185101689898297, 1.744498747110521, 3], \"1892\": [0, 1, 2, 4, 0, 0, 0.13959908918694763, 0.46953535482837505, 3], \"456\": [4, 4, 5, 22, 0.5131385441363598, 0.5175824062288705, 0.7223768188748837, 3.0684470238086683, 1], \"1127\": [1, 1, 2, 9, 0, 0, 0.08151149618728668, 1.0005382078803167, 3], \"820\": [2, 4, 5, 12, 0.16229864091884685, 0.5334746755483791, 0.7425664734069385, 1.9938308652693912, 1], \"977\": [1, 1, 2, 6, 0, 0, 1.349926716949016, 3.2851984677992734, 3], \"813\": [1, 1, 4, 10, 0, 0, 0.5427432267342958, 1.7055667578592613, 3], \"1352\": [2, 2, 4, 10, 0.15123096972392353, 0.15123096972392353, 0.5026288565618121, 1.625632598354081, 1], \"1421\": [3, 3, 3, 5, 0.1536233927072112, 0.1536233927072112, 0.1536233927072112, 0.37929539037477966, 1], \"100\": [1, 2, 4, 21, 0, 0.014809600547287, 0.05796624361822864, 0.9726365150680374, 2], \"1121\": [2, 3, 4, 14, 0.1735948056557174, 0.35525213127280925, 0.5643439291313685, 2.3310850364022255, 1], \"52\": [0, 0, 2, 5, 0, 0, 0.07725848313713149, 0.40680290094982435, 3], \"718\": [0, 1, 4, 9, 0, 0, 0.8569364892249722, 2.062347108320536, 3], \"1457\": [1, 1, 3, 7, 0, 0, 0.8967461358011848, 2.1864136612320038, 3], \"662\": [0, 2, 4, 19, 0, 0.07637297878457401, 0.27570588140506525, 2.0995748021415337, 2], \"1371\": [0, 0, 2, 8, 0, 0, 0.05019874449235544, 0.6008568893230329, 3], \"1829\": [1, 3, 4, 8, 0, 0.4992480704235479, 0.7659696402599947, 1.7235371127400565, 2], \"528\": [0, 0, 4, 10, 0, 0, 0.538996500732687, 1.6982334112172315, 3], \"2015\": [1, 1, 2, 6, 0, 0, 0.37827896780400755, 1.636650475958985, 3], \"2048\": [0, 0, 6, 22, 0, 0, 0.36101334553733055, 1.9235784464253114, 3], \"2165\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1833\": [3, 4, 4, 6, 0.08345897538526194, 0.14387423888417297, 0.14387423888417297, 0.29874253625209474, 1], \"1014\": [0, 0, 3, 13, 0, 0, 0.07134562063669476, 0.8707328075713487, 3], \"324\": [0, 1, 2, 15, 0, 0, 0.49159426183810306, 3.6031659358399066, 3], \"1039\": [1, 2, 3, 10, 0, 0.07302513501488987, 0.15739217375142928, 1.0626186860202043, 2], \"1787\": [1, 2, 2, 5, 0, 0.24664152258151367, 0.24664152258151367, 1.010964981609354, 2], \"373\": [0, 1, 2, 11, 0, 0, 0.12323264042394814, 1.6028589413360579, 3], \"1777\": [2, 2, 2, 5, 0.08184524810424337, 0.08184524810424337, 0.08184524810424337, 0.42725858927476734, 1], \"803\": [1, 1, 2, 13, 0, 0, 0.03297908106642818, 0.882360275540486, 3], \"954\": [0, 2, 3, 11, 0, 0.1603426500751794, 0.33024168687057687, 1.834319083646851, 2], \"1142\": [0, 0, 2, 3, 0, 0, 0.5623075796011341, 0.9925527167077854, 3], \"1690\": [0, 0, 3, 8, 0, 0, 0.7958013346200287, 2.266817869135415, 3], \"1054\": [2, 3, 5, 14, 0.11883400790235846, 0.24991141156531438, 0.5814575298504714, 1.971712292186459, 1], \"1236\": [1, 1, 2, 7, 0, 0, 0.05202733732865476, 0.5033208981119229, 3], \"165\": [1, 2, 2, 8, 0, 0.23499359123170555, 0.23499359123170555, 1.6560181309527295, 2], \"1427\": [1, 2, 2, 6, 0, 0.4054651081081644, 0.4054651081081644, 1.7047480922384253, 2], \"2282\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2162\": [2, 3, 4, 9, 0.41836851294407224, 0.7741883905630712, 1.1242547192814474, 2.4440395604558955, 1], \"1397\": [1, 1, 2, 10, 0, 0, 0.11122563511022437, 1.37147927533475, 3], \"2216\": [1, 2, 4, 7, 0, 0.034308682282985885, 0.1306914125616915, 0.3559766198880075, 2], \"413\": [0, 0, 2, 8, 0, 0, 0.4274440148269396, 2.2547944291576973, 3], \"815\": [1, 1, 4, 9, 0, 0, 1.2992829841302609, 2.6741486494265287, 3], \"1406\": [0, 1, 2, 5, 0, 0, 0.09396579241833143, 0.47980762934235643, 3], \"417\": [2, 2, 4, 12, 0.09138775158942865, 0.09138775158942865, 0.3240924361476212, 1.4917744868490275, 1], \"1017\": [0, 1, 2, 2, 0, 0, 0.5108256237659907, 0.5108256237659907, 3], \"1129\": [2, 2, 3, 5, 0.2595111954850846, 0.2595111954850846, 0.5108256237659907, 1.0479685558493548, 1], \"2058\": [0, 1, 5, 12, 0, 0, 0.1827224387395919, 0.7676846629354548, 3], \"586\": [1, 3, 4, 7, 0, 0.19585140902620227, 0.325422400434628, 0.7783540457817161, 2], \"1464\": [0, 1, 3, 3, 0, 0, 0.8780695190539574, 0.8780695190539574, 3], \"1630\": [1, 1, 4, 15, 0, 0, 0.5465437063680699, 2.4183458832696614, 3], \"959\": [0, 0, 2, 7, 0, 0, 0.6576404921030354, 2.5173213084722823, 3], \"1988\": [0, 1, 2, 2, 0, 0, 0.34228620648663277, 0.34228620648663277, 3], \"926\": [1, 1, 4, 8, 0, 0, 1.252762968495368, 2.3978952727983707, 3], \"1405\": [0, 1, 2, 2, 0, 0, 0.8668106746107854, 0.8668106746107854, 3], \"1484\": [0, 1, 2, 4, 0, 0, 0.4737843520856416, 1.2308802572458604, 3], \"1713\": [1, 1, 2, 2, 0, 0, 0.07275935428242832, 0.07275935428242832, 3], \"2383\": [4, 5, 16, 39, 0.21215279757720032, 0.31428229265358015, 1.5647309810139693, 3.1555851708077487, 1], \"933\": [1, 1, 3, 8, 0, 0, 0.5632107588532816, 1.8528782842841007, 3], \"1646\": [0, 1, 5, 11, 0, 0, 0.41224479509354317, 1.2439781389396352, 3], \"637\": [0, 1, 2, 6, 0, 0, 0.08167803101426718, 0.5686930060865394, 3], \"1228\": [0, 0, 2, 5, 0, 0, 0.7777045685880084, 2.1226137135450447, 3], \"1731\": [1, 1, 2, 4, 0, 0, 0.0008420166795770327, 0.003363821105235725, 3], \"1811\": [0, 2, 3, 4, 0, 0.06646964500774162, 0.14378789279171172, 0.24287879543594265, 2], \"584\": [2, 3, 5, 10, 0.017101742152143374, 0.038075665359339705, 0.10238065985435192, 0.35852747446444294, 1], \"882\": [1, 4, 8, 36, 0, 0.25091823176225275, 0.7611889165572873, 3.182278405836062, 2], \"1165\": [0, 1, 4, 4, 0, 0, 1.8858864970286189, 2.03688192726104, 3], \"1625\": [0, 0, 2, 4, 0, 0, 0.08184524810424337, 0.29352848825416117, 3], \"1825\": [0, 0, 2, 4, 0, 0, 1.007640510462383, 2.0739919369122712, 3], \"318\": [0, 0, 2, 8, 0, 0, 0.5623075796011341, 2.5707380856377813, 3], \"1296\": [0, 1, 2, 4, 0, 0, 0.705886206337375, 1.629743178594846, 3], \"1776\": [4, 5, 7, 13, 0.9344130822327825, 1.2334286448851788, 1.7726714120342617, 2.9135825366560453, 1], \"1813\": [0, 0, 2, 2, 0, 0, 0.4274440148269396, 0.4274440148269396, 3], \"960\": [1, 1, 2, 2, 0, 0, 0.8286926725561692, 0.8286926725561692, 3], \"1605\": [0, 0, 2, 7, 0, 0, 0.1500938791316439, 1.0931995555613594, 3], \"2110\": [0, 1, 2, 3, 0, 0, 0.29407187055055195, 0.5705448584676129, 3], \"1807\": [0, 0, 2, 4, 0, 0, 0.20479441264601322, 0.6466271649250525, 3], \"1878\": [3, 6, 7, 11, 0.09275439349224782, 0.32841767015138534, 0.4247170396074857, 0.8358159654339061, 1], \"2409\": [0, 1, 1, 4, 0, 0, 0, 1.8458266904983307, 4], \"1212\": [2, 2, 4, 5, 0.1348842676899421, 0.1348842676899421, 0.4559156889082516, 0.6431830423540238, 1], \"2213\": [2, 2, 3, 4, 0.06646964500774162, 0.06646964500774162, 0.14378789279171172, 0.24287879543594265, 1], \"808\": [1, 1, 2, 5, 0, 0, 0.27958486221916157, 1.1039742318094952, 3], \"1380\": [0, 1, 2, 6, 0, 0, 0.35774963506849783, 1.583292632329778, 3], \"779\": [0, 0, 2, 4, 0, 0, 0.6157605169445252, 1.4825711915553106, 3], \"932\": [1, 2, 3, 5, 0, 0.1656671218888174, 0.34032580593720296, 0.7543016037132759, 2], \"952\": [0, 0, 4, 8, 0, 0, 1.629743178594846, 2.8570594814290495, 3], \"1669\": [0, 0, 2, 9, 0, 0, 0.35774963506849783, 2.2731230602637296, 3], \"414\": [2, 2, 5, 9, 0.07924937165414055, 0.07924937165414055, 0.4157216082753534, 0.982117083196155, 1], \"888\": [0, 0, 3, 6, 0, 0, 1.55814461804655, 2.772588722239781, 3], \"2271\": [1, 2, 3, 5, 0, 0.06222847139840936, 0.1349349016268428, 0.33738903705214907, 2], \"2457\": [0, 0, 2, 3, 0, 0, 1.4663370687934272, 2.1400661634962708, 3], \"900\": [0, 0, 2, 4, 0, 0, 0.8472978603872036, 1.8458266904983307, 3], \"2475\": [0, 1, 2, 2, 0, 0, 0.2856138193877219, 0.2856138193877219, 3], \"1007\": [0, 0, 2, 5, 0, 0, 0.7939518796819109, 2.1489393361767575, 3], \"366\": [1, 1, 2, 4, 0, 0, 0.5042466526679481, 1.2872888373444415, 3], \"606\": [2, 2, 4, 6, 0.39730179746900346, 0.39730179746900346, 1.0822184788924334, 1.684590634813445, 1], \"2264\": [0, 0, 2, 5, 0, 0, 0.16917873135476025, 0.7664319041284378, 3], \"735\": [2, 3, 4, 13, 0.03356019649230184, 0.07398607296420055, 0.12796988096337653, 0.8928089899794383, 1], \"2117\": [0, 0, 3, 5, 0, 0, 0.760450862456052, 1.4266098982983504, 3], \"2488\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2284\": [1, 1, 2, 2, 0, 0, 0.538996500732687, 0.538996500732687, 3], \"594\": [1, 1, 2, 5, 0, 0, 0.35774963506849783, 1.3051309540126839, 3], \"781\": [1, 1, 2, 2, 0, 0, 1.999101582022976, 2.662587827025453, 3], \"2565\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"2509\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1637\": [0, 0, 4, 7, 0, 0, 1.2992829841302609, 2.2155737160044158, 3], \"2148\": [1, 1, 2, 3, 0, 0, 0.29626581614317243, 0.5742859776832164, 3], \"1771\": [0, 1, 2, 2, 0, 0, 1.4053425560905852, 1.4053425560905852, 3], \"1960\": [1, 2, 3, 4, 0, 0.1100008952143285, 0.23240287672700652, 0.38193461069797024, 2], \"327\": [1, 1, 2, 7, 0, 0, 0.6576404921030354, 2.5173213084722823, 3], \"1179\": [0, 2, 3, 7, 0, 0.07740806841223596, 0.16643479373146772, 0.6860800133368529, 2], \"1258\": [2, 2, 3, 8, 0.013642776403786526, 0.013642776403786526, 0.030438602876830676, 0.1986706947954841, 1], \"1073\": [0, 2, 2, 6, 0, 0.18485641239714268, 0.18485641239714268, 1.0393615111892955, 2], \"2487\": [1, 2, 2, 3, 0, 0.09576690509200843, 0.09576690509200843, 0.20386340056870947, 2], \"1986\": [0, 2, 2, 3, 0, 0.7191226669632059, 0.7191226669632059, 1.2144441041932312, 2], \"2469\": [0, 2, 2, 3, 0, 0.39730179746900346, 0.39730179746900346, 0.7407752295491999, 2], \"2733\": [2, 4, 4, 4, 0.08184524810424337, 0.29352848825416117, 0.29352848825416117, 0.29352848825416117, 1], \"486\": [0, 2, 2, 6, 0, 0.16098937604759944, 0.16098937604759944, 0.944704180097347, 2], \"2734\": [1, 2, 2, 5, 0, 0.11607217125275403, 0.11607217125275403, 0.5705448584676129, 2], \"1045\": [1, 2, 2, 2, 0, 0.5465437063680699, 0.5465437063680699, 0.5465437063680699, 2], \"1392\": [0, 2, 2, 3, 0, 0.05765285142727736, 0.05765285142727736, 0.12533767825421346, 2], \"1621\": [0, 2, 2, 7, 0, 0.26826398659467937, 0.26826398659467937, 1.562185027583555, 2], \"2338\": [1, 2, 2, 2, 0, 0.27570588140506525, 0.27570588140506525, 0.27570588140506525, 2], \"1661\": [0, 2, 2, 4, 0, 0.24664152258151367, 0.24664152258151367, 0.7508881752494619, 2], \"2739\": [0, 2, 2, 2, 0, 1.4908500681318664, 1.8858864970286189, 2.03688192726104, 2], \"2636\": [1, 3, 3, 4, 0, 0.4881938233057933, 0.4881938233057933, 0.7508881752494619, 2], \"2809\": [11, 19, 19, 40, 0.6161249833232461, 1.2301872108115661, 1.2713723673698638, 2.51541264603832, 1], \"1586\": [0, 2, 2, 4, 0, 0.07956481041235021, 0.07956481041235021, 0.2861280705850467, 2], \"1801\": [0, 2, 2, 4, 0, 0.04184710993550044, 0.04184710993550044, 0.1578069910303688, 2], \"1247\": [1, 2, 2, 4, 0, 1.0663514264498883, 1.0663514264498883, 2.1539745935424026, 2], \"1929\": [0, 4, 4, 8, 0, 1.303589631838211, 1.4350845252893227, 2.624668592163159, 2], \"1706\": [1, 2, 2, 5, 0, 0.11848160362052347, 0.11848160362052347, 0.5800700359409745, 2], \"1987\": [0, 2, 2, 3, 0, 0.325422400434628, 0.325422400434628, 0.6234672599219555, 2], \"2428\": [0, 3, 3, 5, 0, 0.21878624594525403, 0.21878624594525403, 0.5184055192887599, 2], \"2764\": [0, 2, 2, 2, 0, 0.5877866649021191, 0.5877866649021191, 0.5877866649021191, 2], \"1552\": [2, 3, 3, 4, 0.3746934494414107, 0.7044467358138786, 0.7044467358138786, 1.0360919316867756, 1], \"2211\": [0, 2, 2, 2, 0, 0.29626581614317243, 0.29626581614317243, 0.29626581614317243, 2], \"2808\": [1, 4, 4, 7, 0, 1.2343578402688902, 1.2755429968271879, 2.1864136612320038, 2], \"1135\": [1, 3, 3, 4, 0, 0.11950541923414716, 0.11950541923414716, 0.20348759873326455, 2], \"1153\": [1, 2, 2, 5, 0, 0.017189937677269847, 0.017189937677269847, 0.10288671711743295, 2], \"1724\": [1, 2, 2, 6, 0, 0.020294963441085077, 0.020294963441085077, 0.1693382696512695, 2], \"1908\": [5, 11, 11, 27, 0.08845933546747507, 0.3699420759339649, 0.3699420759339649, 1.3075225805853417, 1], \"2849\": [0, 2, 2, 2, 0, 1.4216182765625456, 1.6094379124341003, 1.6094379124341003, 2], \"2868\": [0, 2, 2, 2, 0, 1.0663514264498883, 1.0663514264498883, 1.0663514264498883, 2], \"68\": [3, 5, 5, 8, 0.15441568579144338, 0.38105074993687704, 0.38105074993687704, 0.7827063296283738, 1], \"1894\": [3, 5, 5, 24, 0.043151469288772344, 0.11554851964365072, 0.11554851964365072, 1.3408120467784683, 1], \"826\": [0, 2, 2, 3, 0, 1.3348421753423154, 1.4663370687934272, 2.1400661634962708, 2], \"2263\": [1, 3, 3, 7, 0, 1.4040739669116362, 1.591893602783191, 3.1047816292416197, 2], \"2356\": [0, 2, 2, 2, 0, 1.0986122886681096, 1.0986122886681096, 1.0986122886681096, 2], \"2502\": [1, 2, 2, 4, 0, 0.14787032803970862, 0.14787032803970862, 0.4931402753644507, 2], \"2864\": [2, 3, 3, 3, 0.1500938791316439, 0.3106945937243845, 0.3106945937243845, 0.3106945937243845, 1], \"2876\": [0, 2, 2, 4, 0, 0.06646964500774162, 0.06646964500774162, 0.24287879543594265, 2], \"1182\": [1, 2, 2, 3, 0, 0.049576446606288085, 0.049576446606288085, 0.10827874395477981, 2], \"1738\": [0, 2, 2, 3, 0, 0.37117603462953225, 0.37117603462953225, 0.6987494361086152, 2], \"1370\": [1, 2, 2, 6, 0, 0.20692071580732246, 0.20692071580732246, 1.121340539745666, 2], \"405\": [2, 3, 3, 6, 0.3007541540191337, 0.581921545449721, 0.581921545449721, 1.425008873300581, 1], \"1509\": [1, 2, 2, 5, 0, 0.01630692473789359, 0.01630692473789359, 0.09781050764210153, 2], \"2461\": [2, 3, 3, 4, 0.25452986513488046, 0.5020919437972361, 0.5020919437972361, 0.7698398013481997, 1], \"2813\": [3, 4, 4, 6, 0.08943394263194869, 0.15385363541693514, 0.15385363541693514, 0.3178865697459251, 1], \"1824\": [2, 2, 2, 4, 0.8406342027968305, 0.8668106746107854, 0.8668106746107854, 1.8744511850731684, 1], \"3093\": [2, 2, 2, 2, 0.15123096972392353, 0.15123096972392353, 0.15123096972392353, 0.15123096972392353, 1], \"1317\": [2, 2, 2, 3, 0.04740223889458392, 0.04740223889458392, 0.04740223889458392, 0.1036600415446783, 1], \"2032\": [4, 4, 4, 4, 0.22760642132910802, 0.22760642132910802, 0.22760642132910802, 0.22760642132910802, 1], \"2747\": [2, 2, 2, 2, 0.053062844975211534, 0.053062844975211534, 0.053062844975211534, 0.053062844975211534, 1], \"2127\": [2, 2, 2, 4, 0.06252035698133399, 0.06252035698133399, 0.06252035698133399, 0.2295744416445002, 1], \"2119\": [2, 2, 2, 3, 0.30538164955118186, 0.30538164955118186, 0.30538164955118186, 0.5897688261061103, 1], \"3177\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2732\": [4, 4, 4, 7, 0.1330864537962701, 0.1330864537962701, 0.1330864537962701, 0.3618218183762577, 1], \"1657\": [2, 2, 2, 3, 0.37827896780400755, 0.37827896780400755, 0.37827896780400755, 0.7102416139192455, 1], \"3062\": [2, 2, 2, 6, 0.05564717871439152, 0.05564717871439152, 0.05564717871439152, 0.41542960336759616, 1], \"356\": [2, 2, 2, 2, 0.8211213885732487, 0.8472978603872036, 0.8472978603872036, 0.8472978603872036, 1], \"1390\": [2, 2, 2, 3, 0.033503971231401815, 0.033503971231401815, 0.033503971231401815, 0.07386457431876098, 1], \"2059\": [2, 2, 2, 3, 0.5578637175086234, 0.5623075796011341, 0.5623075796011341, 0.9925527167077854, 1], \"2471\": [2, 2, 2, 2, 0.3513978868378886, 0.3513978868378886, 0.3513978868378886, 0.3513978868378886, 1], \"1817\": [2, 2, 2, 3, 0.219455778235025, 0.219455778235025, 0.219455778235025, 0.4396392879207579, 1], \"898\": [2, 2, 2, 7, 0.13862989729590636, 0.13862989729590636, 0.13862989729590636, 1.0372903977937908, 1], \"1221\": [2, 2, 2, 5, 0.30774963550259016, 0.30774963550259016, 0.30774963550259016, 1.1793477570205468, 1], \"3213\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2821\": [2, 2, 2, 2, 0.14787032803970862, 0.14787032803970862, 0.14787032803970862, 0.14787032803970862, 1], \"1537\": [2, 2, 2, 3, 0.3933437475758196, 0.3933437475758196, 0.3933437475758196, 0.734450986701181, 1], \"1884\": [3, 3, 3, 3, 0.6620350713852732, 0.666478933477784, 0.666478933477784, 0.666478933477784, 1], \"2724\": [2, 2, 2, 4, 0.19574457712609533, 0.19574457712609533, 0.19574457712609533, 0.623188591953035, 1], \"1360\": [2, 2, 2, 5, 0.325422400434628, 0.325422400434628, 0.325422400434628, 1.2249060139924017, 1], \"2491\": [3, 3, 3, 4, 0.19585140902620227, 0.19585140902620227, 0.19585140902620227, 0.325422400434628, 1], \"1469\": [2, 2, 2, 2, 0.18658595558041216, 0.18658595558041216, 0.18658595558041216, 0.18658595558041216, 1], \"3251\": [2, 2, 2, 2, 0.36101334553733055, 0.36101334553733055, 0.36101334553733055, 0.36101334553733055, 1]}"
}