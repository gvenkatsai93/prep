{
    "name": "Apple",
    "slug": "apple",
    "questions": [
        {
            "status": "ac",
            "questionId": "1",
            "questionFrontendId": "1",
            "title": "Two Sum",
            "titleSlug": "two-sum",
            "acRate": "52.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2",
            "questionFrontendId": "2",
            "title": "Add Two Numbers",
            "titleSlug": "add-two-numbers",
            "acRate": "42.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "3",
            "questionFrontendId": "3",
            "title": "Longest Substring Without Repeating Characters",
            "titleSlug": "longest-substring-without-repeating-characters",
            "acRate": "34.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "4",
            "questionFrontendId": "4",
            "title": "Median of Two Sorted Arrays",
            "titleSlug": "median-of-two-sorted-arrays",
            "acRate": "39.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "5",
            "questionFrontendId": "5",
            "title": "Longest Palindromic Substring",
            "titleSlug": "longest-palindromic-substring",
            "acRate": "33.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "6",
            "questionFrontendId": "6",
            "title": "Zigzag Conversion",
            "titleSlug": "zigzag-conversion",
            "acRate": "47.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "7",
            "questionFrontendId": "7",
            "title": "Reverse Integer",
            "titleSlug": "reverse-integer",
            "acRate": "28.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "8",
            "questionFrontendId": "8",
            "title": "String to Integer (atoi)",
            "titleSlug": "string-to-integer-atoi",
            "acRate": "17.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "9",
            "questionFrontendId": "9",
            "title": "Palindrome Number",
            "titleSlug": "palindrome-number",
            "acRate": "55.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "10",
            "questionFrontendId": "10",
            "title": "Regular Expression Matching",
            "titleSlug": "regular-expression-matching",
            "acRate": "28.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "11",
            "questionFrontendId": "11",
            "title": "Container With Most Water",
            "titleSlug": "container-with-most-water",
            "acRate": "54.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "12",
            "questionFrontendId": "12",
            "title": "Integer to Roman",
            "titleSlug": "integer-to-roman",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "13",
            "questionFrontendId": "13",
            "title": "Roman to Integer",
            "titleSlug": "roman-to-integer",
            "acRate": "60.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "14",
            "questionFrontendId": "14",
            "title": "Longest Common Prefix",
            "titleSlug": "longest-common-prefix",
            "acRate": "42.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "15",
            "questionFrontendId": "15",
            "title": "3Sum",
            "titleSlug": "3sum",
            "acRate": "34.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "16",
            "questionFrontendId": "16",
            "title": "3Sum Closest",
            "titleSlug": "3sum-closest",
            "acRate": "45.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "17",
            "questionFrontendId": "17",
            "title": "Letter Combinations of a Phone Number",
            "titleSlug": "letter-combinations-of-a-phone-number",
            "acRate": "60.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "18",
            "questionFrontendId": "18",
            "title": "4Sum",
            "titleSlug": "4sum",
            "acRate": "36.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "19",
            "questionFrontendId": "19",
            "title": "Remove Nth Node From End of List",
            "titleSlug": "remove-nth-node-from-end-of-list",
            "acRate": "44.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "20",
            "questionFrontendId": "20",
            "title": "Valid Parentheses",
            "titleSlug": "valid-parentheses",
            "acRate": "40.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "21",
            "questionFrontendId": "21",
            "title": "Merge Two Sorted Lists",
            "titleSlug": "merge-two-sorted-lists",
            "acRate": "64.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "22",
            "questionFrontendId": "22",
            "title": "Generate Parentheses",
            "titleSlug": "generate-parentheses",
            "acRate": "74.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "23",
            "questionFrontendId": "23",
            "title": "Merge k Sorted Lists",
            "titleSlug": "merge-k-sorted-lists",
            "acRate": "52.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "24",
            "questionFrontendId": "24",
            "title": "Swap Nodes in Pairs",
            "titleSlug": "swap-nodes-in-pairs",
            "acRate": "64.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "25",
            "questionFrontendId": "25",
            "title": "Reverse Nodes in k-Group",
            "titleSlug": "reverse-nodes-in-k-group",
            "acRate": "58.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "26",
            "questionFrontendId": "26",
            "title": "Remove Duplicates from Sorted Array",
            "titleSlug": "remove-duplicates-from-sorted-array",
            "acRate": "55.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "27",
            "questionFrontendId": "27",
            "title": "Remove Element",
            "titleSlug": "remove-element",
            "acRate": "56.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "28",
            "questionFrontendId": "28",
            "title": "Find the Index of the First Occurrence in a String",
            "titleSlug": "find-the-index-of-the-first-occurrence-in-a-string",
            "acRate": "41.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "29",
            "questionFrontendId": "29",
            "title": "Divide Two Integers",
            "titleSlug": "divide-two-integers",
            "acRate": "17.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "30",
            "questionFrontendId": "30",
            "title": "Substring with Concatenation of All Words",
            "titleSlug": "substring-with-concatenation-of-all-words",
            "acRate": "32.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "31",
            "questionFrontendId": "31",
            "title": "Next Permutation",
            "titleSlug": "next-permutation",
            "acRate": "39.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "32",
            "questionFrontendId": "32",
            "title": "Longest Valid Parentheses",
            "titleSlug": "longest-valid-parentheses",
            "acRate": "33.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "33",
            "questionFrontendId": "33",
            "title": "Search in Rotated Sorted Array",
            "titleSlug": "search-in-rotated-sorted-array",
            "acRate": "40.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "34",
            "questionFrontendId": "34",
            "title": "Find First and Last Position of Element in Sorted Array",
            "titleSlug": "find-first-and-last-position-of-element-in-sorted-array",
            "acRate": "44.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "35",
            "questionFrontendId": "35",
            "title": "Search Insert Position",
            "titleSlug": "search-insert-position",
            "acRate": "45.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "36",
            "questionFrontendId": "36",
            "title": "Valid Sudoku",
            "titleSlug": "valid-sudoku",
            "acRate": "59.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "37",
            "questionFrontendId": "37",
            "title": "Sudoku Solver",
            "titleSlug": "sudoku-solver",
            "acRate": "60.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "38",
            "questionFrontendId": "38",
            "title": "Count and Say",
            "titleSlug": "count-and-say",
            "acRate": "54.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "39",
            "questionFrontendId": "39",
            "title": "Combination Sum",
            "titleSlug": "combination-sum",
            "acRate": "71.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "40",
            "questionFrontendId": "40",
            "title": "Combination Sum II",
            "titleSlug": "combination-sum-ii",
            "acRate": "54.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "41",
            "questionFrontendId": "41",
            "title": "First Missing Positive",
            "titleSlug": "first-missing-positive",
            "acRate": "37.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "42",
            "questionFrontendId": "42",
            "title": "Trapping Rain Water",
            "titleSlug": "trapping-rain-water",
            "acRate": "60.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "43",
            "questionFrontendId": "43",
            "title": "Multiply Strings",
            "titleSlug": "multiply-strings",
            "acRate": "40.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "44",
            "questionFrontendId": "44",
            "title": "Wildcard Matching",
            "titleSlug": "wildcard-matching",
            "acRate": "27.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "45",
            "questionFrontendId": "45",
            "title": "Jump Game II",
            "titleSlug": "jump-game-ii",
            "acRate": "40.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "46",
            "questionFrontendId": "46",
            "title": "Permutations",
            "titleSlug": "permutations",
            "acRate": "78.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "48",
            "questionFrontendId": "48",
            "title": "Rotate Image",
            "titleSlug": "rotate-image",
            "acRate": "73.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "49",
            "questionFrontendId": "49",
            "title": "Group Anagrams",
            "titleSlug": "group-anagrams",
            "acRate": "68.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "50",
            "questionFrontendId": "50",
            "title": "Pow(x, n)",
            "titleSlug": "powx-n",
            "acRate": "34.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "51",
            "questionFrontendId": "51",
            "title": "N-Queens",
            "titleSlug": "n-queens",
            "acRate": "67.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "53",
            "questionFrontendId": "53",
            "title": "Maximum Subarray",
            "titleSlug": "maximum-subarray",
            "acRate": "50.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "54",
            "questionFrontendId": "54",
            "title": "Spiral Matrix",
            "titleSlug": "spiral-matrix",
            "acRate": "48.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "55",
            "questionFrontendId": "55",
            "title": "Jump Game",
            "titleSlug": "jump-game",
            "acRate": "38.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "56",
            "questionFrontendId": "56",
            "title": "Merge Intervals",
            "titleSlug": "merge-intervals",
            "acRate": "47.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "57",
            "questionFrontendId": "57",
            "title": "Insert Interval",
            "titleSlug": "insert-interval",
            "acRate": "40.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "58",
            "questionFrontendId": "58",
            "title": "Length of Last Word",
            "titleSlug": "length-of-last-word",
            "acRate": "49.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "59",
            "questionFrontendId": "59",
            "title": "Spiral Matrix II",
            "titleSlug": "spiral-matrix-ii",
            "acRate": "70.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "61",
            "questionFrontendId": "61",
            "title": "Rotate List",
            "titleSlug": "rotate-list",
            "acRate": "37.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "62",
            "questionFrontendId": "62",
            "title": "Unique Paths",
            "titleSlug": "unique-paths",
            "acRate": "64.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "63",
            "questionFrontendId": "63",
            "title": "Unique Paths II",
            "titleSlug": "unique-paths-ii",
            "acRate": "41.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "64",
            "questionFrontendId": "64",
            "title": "Minimum Path Sum",
            "titleSlug": "minimum-path-sum",
            "acRate": "63.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "65",
            "questionFrontendId": "65",
            "title": "Valid Number",
            "titleSlug": "valid-number",
            "acRate": "19.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "66",
            "questionFrontendId": "66",
            "title": "Plus One",
            "titleSlug": "plus-one",
            "acRate": "45.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "67",
            "questionFrontendId": "67",
            "title": "Add Binary",
            "titleSlug": "add-binary",
            "acRate": "53.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "68",
            "questionFrontendId": "68",
            "title": "Text Justification",
            "titleSlug": "text-justification",
            "acRate": "42.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "69",
            "questionFrontendId": "69",
            "title": "Sqrt(x)",
            "titleSlug": "sqrtx",
            "acRate": "38.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "70",
            "questionFrontendId": "70",
            "title": "Climbing Stairs",
            "titleSlug": "climbing-stairs",
            "acRate": "52.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "71",
            "questionFrontendId": "71",
            "title": "Simplify Path",
            "titleSlug": "simplify-path",
            "acRate": "41.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "72",
            "questionFrontendId": "72",
            "title": "Edit Distance",
            "titleSlug": "edit-distance",
            "acRate": "56.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "73",
            "questionFrontendId": "73",
            "title": "Set Matrix Zeroes",
            "titleSlug": "set-matrix-zeroes",
            "acRate": "55.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "74",
            "questionFrontendId": "74",
            "title": "Search a 2D Matrix",
            "titleSlug": "search-a-2d-matrix",
            "acRate": "49.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "75",
            "questionFrontendId": "75",
            "title": "Sort Colors",
            "titleSlug": "sort-colors",
            "acRate": "61.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "76",
            "questionFrontendId": "76",
            "title": "Minimum Window Substring",
            "titleSlug": "minimum-window-substring",
            "acRate": "42.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "77",
            "questionFrontendId": "77",
            "title": "Combinations",
            "titleSlug": "combinations",
            "acRate": "70.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "78",
            "questionFrontendId": "78",
            "title": "Subsets",
            "titleSlug": "subsets",
            "acRate": "77.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "79",
            "questionFrontendId": "79",
            "title": "Word Search",
            "titleSlug": "word-search",
            "acRate": "41.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "80",
            "questionFrontendId": "80",
            "title": "Remove Duplicates from Sorted Array II",
            "titleSlug": "remove-duplicates-from-sorted-array-ii",
            "acRate": "57.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "81",
            "questionFrontendId": "81",
            "title": "Search in Rotated Sorted Array II",
            "titleSlug": "search-in-rotated-sorted-array-ii",
            "acRate": "37.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "82",
            "questionFrontendId": "82",
            "title": "Remove Duplicates from Sorted List II",
            "titleSlug": "remove-duplicates-from-sorted-list-ii",
            "acRate": "47.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "83",
            "questionFrontendId": "83",
            "title": "Remove Duplicates from Sorted List",
            "titleSlug": "remove-duplicates-from-sorted-list",
            "acRate": "52.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "84",
            "questionFrontendId": "84",
            "title": "Largest Rectangle in Histogram",
            "titleSlug": "largest-rectangle-in-histogram",
            "acRate": "44.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "85",
            "questionFrontendId": "85",
            "title": "Maximal Rectangle",
            "titleSlug": "maximal-rectangle",
            "acRate": "46.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "86",
            "questionFrontendId": "86",
            "title": "Partition List",
            "titleSlug": "partition-list",
            "acRate": "55.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "87",
            "questionFrontendId": "87",
            "title": "Scramble String",
            "titleSlug": "scramble-string",
            "acRate": "39.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "88",
            "questionFrontendId": "88",
            "title": "Merge Sorted Array",
            "titleSlug": "merge-sorted-array",
            "acRate": "49.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "89",
            "questionFrontendId": "89",
            "title": "Gray Code",
            "titleSlug": "gray-code",
            "acRate": "58.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "90",
            "questionFrontendId": "90",
            "title": "Subsets II",
            "titleSlug": "subsets-ii",
            "acRate": "57.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "91",
            "questionFrontendId": "91",
            "title": "Decode Ways",
            "titleSlug": "decode-ways",
            "acRate": "34.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "92",
            "questionFrontendId": "92",
            "title": "Reverse Linked List II",
            "titleSlug": "reverse-linked-list-ii",
            "acRate": "47.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "93",
            "questionFrontendId": "93",
            "title": "Restore IP Addresses",
            "titleSlug": "restore-ip-addresses",
            "acRate": "49.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "94",
            "questionFrontendId": "94",
            "title": "Binary Tree Inorder Traversal",
            "titleSlug": "binary-tree-inorder-traversal",
            "acRate": "75.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "95",
            "questionFrontendId": "95",
            "title": "Unique Binary Search Trees II",
            "titleSlug": "unique-binary-search-trees-ii",
            "acRate": "57.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "96",
            "questionFrontendId": "96",
            "title": "Unique Binary Search Trees",
            "titleSlug": "unique-binary-search-trees",
            "acRate": "60.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "97",
            "questionFrontendId": "97",
            "title": "Interleaving String",
            "titleSlug": "interleaving-string",
            "acRate": "39.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "98",
            "questionFrontendId": "98",
            "title": "Validate Binary Search Tree",
            "titleSlug": "validate-binary-search-tree",
            "acRate": "32.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "99",
            "questionFrontendId": "99",
            "title": "Recover Binary Search Tree",
            "titleSlug": "recover-binary-search-tree",
            "acRate": "52.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "100",
            "questionFrontendId": "100",
            "title": "Same Tree",
            "titleSlug": "same-tree",
            "acRate": "61.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "101",
            "questionFrontendId": "101",
            "title": "Symmetric Tree",
            "titleSlug": "symmetric-tree",
            "acRate": "56.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "102",
            "questionFrontendId": "102",
            "title": "Binary Tree Level Order Traversal",
            "titleSlug": "binary-tree-level-order-traversal",
            "acRate": "66.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "103",
            "questionFrontendId": "103",
            "title": "Binary Tree Zigzag Level Order Traversal",
            "titleSlug": "binary-tree-zigzag-level-order-traversal",
            "acRate": "58.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "104",
            "questionFrontendId": "104",
            "title": "Maximum Depth of Binary Tree",
            "titleSlug": "maximum-depth-of-binary-tree",
            "acRate": "75.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "105",
            "questionFrontendId": "105",
            "title": "Construct Binary Tree from Preorder and Inorder Traversal",
            "titleSlug": "construct-binary-tree-from-preorder-and-inorder-traversal",
            "acRate": "63.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "108",
            "questionFrontendId": "108",
            "title": "Convert Sorted Array to Binary Search Tree",
            "titleSlug": "convert-sorted-array-to-binary-search-tree",
            "acRate": "71.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "109",
            "questionFrontendId": "109",
            "title": "Convert Sorted List to Binary Search Tree",
            "titleSlug": "convert-sorted-list-to-binary-search-tree",
            "acRate": "61.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "110",
            "questionFrontendId": "110",
            "title": "Balanced Binary Tree",
            "titleSlug": "balanced-binary-tree",
            "acRate": "51.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "114",
            "questionFrontendId": "114",
            "title": "Flatten Binary Tree to Linked List",
            "titleSlug": "flatten-binary-tree-to-linked-list",
            "acRate": "64.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "115",
            "questionFrontendId": "115",
            "title": "Distinct Subsequences",
            "titleSlug": "distinct-subsequences",
            "acRate": "46.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "116",
            "questionFrontendId": "116",
            "title": "Populating Next Right Pointers in Each Node",
            "titleSlug": "populating-next-right-pointers-in-each-node",
            "acRate": "62.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "118",
            "questionFrontendId": "118",
            "title": "Pascal's Triangle",
            "titleSlug": "pascals-triangle",
            "acRate": "73.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "119",
            "questionFrontendId": "119",
            "title": "Pascal's Triangle II",
            "titleSlug": "pascals-triangle-ii",
            "acRate": "63.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "120",
            "questionFrontendId": "120",
            "title": "Triangle",
            "titleSlug": "triangle",
            "acRate": "56.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "121",
            "questionFrontendId": "121",
            "title": "Best Time to Buy and Sell Stock",
            "titleSlug": "best-time-to-buy-and-sell-stock",
            "acRate": "53.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "122",
            "questionFrontendId": "122",
            "title": "Best Time to Buy and Sell Stock II",
            "titleSlug": "best-time-to-buy-and-sell-stock-ii",
            "acRate": "66.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "123",
            "questionFrontendId": "123",
            "title": "Best Time to Buy and Sell Stock III",
            "titleSlug": "best-time-to-buy-and-sell-stock-iii",
            "acRate": "47.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "124",
            "questionFrontendId": "124",
            "title": "Binary Tree Maximum Path Sum",
            "titleSlug": "binary-tree-maximum-path-sum",
            "acRate": "39.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "125",
            "questionFrontendId": "125",
            "title": "Valid Palindrome",
            "titleSlug": "valid-palindrome",
            "acRate": "47.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "126",
            "questionFrontendId": "126",
            "title": "Word Ladder II",
            "titleSlug": "word-ladder-ii",
            "acRate": "27.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "127",
            "questionFrontendId": "127",
            "title": "Word Ladder",
            "titleSlug": "word-ladder",
            "acRate": "38.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "128",
            "questionFrontendId": "128",
            "title": "Longest Consecutive Sequence",
            "titleSlug": "longest-consecutive-sequence",
            "acRate": "47.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "129",
            "questionFrontendId": "129",
            "title": "Sum Root to Leaf Numbers",
            "titleSlug": "sum-root-to-leaf-numbers",
            "acRate": "63.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "130",
            "questionFrontendId": "130",
            "title": "Surrounded Regions",
            "titleSlug": "surrounded-regions",
            "acRate": "39.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "131",
            "questionFrontendId": "131",
            "title": "Palindrome Partitioning",
            "titleSlug": "palindrome-partitioning",
            "acRate": "67.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "132",
            "questionFrontendId": "132",
            "title": "Palindrome Partitioning II",
            "titleSlug": "palindrome-partitioning-ii",
            "acRate": "33.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "133",
            "questionFrontendId": "133",
            "title": "Clone Graph",
            "titleSlug": "clone-graph",
            "acRate": "56.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "134",
            "questionFrontendId": "134",
            "title": "Gas Station",
            "titleSlug": "gas-station",
            "acRate": "45.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "136",
            "questionFrontendId": "136",
            "title": "Single Number",
            "titleSlug": "single-number",
            "acRate": "72.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "137",
            "questionFrontendId": "137",
            "title": "Single Number II",
            "titleSlug": "single-number-ii",
            "acRate": "62.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "138",
            "questionFrontendId": "138",
            "title": "Copy List with Random Pointer",
            "titleSlug": "copy-list-with-random-pointer",
            "acRate": "55.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "139",
            "questionFrontendId": "139",
            "title": "Word Break",
            "titleSlug": "word-break",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "140",
            "questionFrontendId": "140",
            "title": "Word Break II",
            "titleSlug": "word-break-ii",
            "acRate": "47.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "141",
            "questionFrontendId": "141",
            "title": "Linked List Cycle",
            "titleSlug": "linked-list-cycle",
            "acRate": "49.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "142",
            "questionFrontendId": "142",
            "title": "Linked List Cycle II",
            "titleSlug": "linked-list-cycle-ii",
            "acRate": "50.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "143",
            "questionFrontendId": "143",
            "title": "Reorder List",
            "titleSlug": "reorder-list",
            "acRate": "56.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "144",
            "questionFrontendId": "144",
            "title": "Binary Tree Preorder Traversal",
            "titleSlug": "binary-tree-preorder-traversal",
            "acRate": "69.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "145",
            "questionFrontendId": "145",
            "title": "Binary Tree Postorder Traversal",
            "titleSlug": "binary-tree-postorder-traversal",
            "acRate": "70.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "146",
            "questionFrontendId": "146",
            "title": "LRU Cache",
            "titleSlug": "lru-cache",
            "acRate": "42.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "148",
            "questionFrontendId": "148",
            "title": "Sort List",
            "titleSlug": "sort-list",
            "acRate": "57.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "149",
            "questionFrontendId": "149",
            "title": "Max Points on a Line",
            "titleSlug": "max-points-on-a-line",
            "acRate": "26.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "151",
            "questionFrontendId": "151",
            "title": "Reverse Words in a String",
            "titleSlug": "reverse-words-in-a-string",
            "acRate": "40.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "152",
            "questionFrontendId": "152",
            "title": "Maximum Product Subarray",
            "titleSlug": "maximum-product-subarray",
            "acRate": "35.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "153",
            "questionFrontendId": "153",
            "title": "Find Minimum in Rotated Sorted Array",
            "titleSlug": "find-minimum-in-rotated-sorted-array",
            "acRate": "50.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "154",
            "questionFrontendId": "154",
            "title": "Find Minimum in Rotated Sorted Array II",
            "titleSlug": "find-minimum-in-rotated-sorted-array-ii",
            "acRate": "43.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "155",
            "questionFrontendId": "155",
            "title": "Min Stack",
            "titleSlug": "min-stack",
            "acRate": "53.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "158",
            "questionFrontendId": "158",
            "title": "Read N Characters Given read4 II - Call Multiple Times",
            "titleSlug": "read-n-characters-given-read4-ii-call-multiple-times",
            "acRate": "42.1%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "160",
            "questionFrontendId": "160",
            "title": "Intersection of Two Linked Lists",
            "titleSlug": "intersection-of-two-linked-lists",
            "acRate": "57.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "162",
            "questionFrontendId": "162",
            "title": "Find Peak Element",
            "titleSlug": "find-peak-element",
            "acRate": "45.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "165",
            "questionFrontendId": "165",
            "title": "Compare Version Numbers",
            "titleSlug": "compare-version-numbers",
            "acRate": "36.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "167",
            "questionFrontendId": "167",
            "title": "Two Sum II - Input Array Is Sorted",
            "titleSlug": "two-sum-ii-input-array-is-sorted",
            "acRate": "61.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "168",
            "questionFrontendId": "168",
            "title": "Excel Sheet Column Title",
            "titleSlug": "excel-sheet-column-title",
            "acRate": "40.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "169",
            "questionFrontendId": "169",
            "title": "Majority Element",
            "titleSlug": "majority-element",
            "acRate": "64.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "173",
            "questionFrontendId": "173",
            "title": "Binary Search Tree Iterator",
            "titleSlug": "binary-search-tree-iterator",
            "acRate": "71.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "174",
            "questionFrontendId": "174",
            "title": "Dungeon Game",
            "titleSlug": "dungeon-game",
            "acRate": "38.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "175",
            "questionFrontendId": "175",
            "title": "Combine Two Tables",
            "titleSlug": "combine-two-tables",
            "acRate": "75.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "176",
            "questionFrontendId": "176",
            "title": "Second Highest Salary",
            "titleSlug": "second-highest-salary",
            "acRate": "39.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "178",
            "questionFrontendId": "178",
            "title": "Rank Scores",
            "titleSlug": "rank-scores",
            "acRate": "61.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "179",
            "questionFrontendId": "179",
            "title": "Largest Number",
            "titleSlug": "largest-number",
            "acRate": "35.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "180",
            "questionFrontendId": "180",
            "title": "Consecutive Numbers",
            "titleSlug": "consecutive-numbers",
            "acRate": "47.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "183",
            "questionFrontendId": "183",
            "title": "Customers Who Never Order",
            "titleSlug": "customers-who-never-order",
            "acRate": "68.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "186",
            "questionFrontendId": "186",
            "title": "Reverse Words in a String II",
            "titleSlug": "reverse-words-in-a-string-ii",
            "acRate": "54.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "188",
            "questionFrontendId": "188",
            "title": "Best Time to Buy and Sell Stock IV",
            "titleSlug": "best-time-to-buy-and-sell-stock-iv",
            "acRate": "42.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "189",
            "questionFrontendId": "189",
            "title": "Rotate Array",
            "titleSlug": "rotate-array",
            "acRate": "40.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "190",
            "questionFrontendId": "190",
            "title": "Reverse Bits",
            "titleSlug": "reverse-bits",
            "acRate": "57.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "191",
            "questionFrontendId": "191",
            "title": "Number of 1 Bits",
            "titleSlug": "number-of-1-bits",
            "acRate": "70.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "193",
            "questionFrontendId": "193",
            "title": "Valid Phone Numbers",
            "titleSlug": "valid-phone-numbers",
            "acRate": "25.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Shell",
                    "slug": "shell"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "196",
            "questionFrontendId": "196",
            "title": "Delete Duplicate Emails",
            "titleSlug": "delete-duplicate-emails",
            "acRate": "61.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "198",
            "questionFrontendId": "198",
            "title": "House Robber",
            "titleSlug": "house-robber",
            "acRate": "50.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "199",
            "questionFrontendId": "199",
            "title": "Binary Tree Right Side View",
            "titleSlug": "binary-tree-right-side-view",
            "acRate": "62.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "200",
            "questionFrontendId": "200",
            "title": "Number of Islands",
            "titleSlug": "number-of-islands",
            "acRate": "58.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "201",
            "questionFrontendId": "201",
            "title": "Bitwise AND of Numbers Range",
            "titleSlug": "bitwise-and-of-numbers-range",
            "acRate": "46.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "202",
            "questionFrontendId": "202",
            "title": "Happy Number",
            "titleSlug": "happy-number",
            "acRate": "55.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "203",
            "questionFrontendId": "203",
            "title": "Remove Linked List Elements",
            "titleSlug": "remove-linked-list-elements",
            "acRate": "48.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "204",
            "questionFrontendId": "204",
            "title": "Count Primes",
            "titleSlug": "count-primes",
            "acRate": "33.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "205",
            "questionFrontendId": "205",
            "title": "Isomorphic Strings",
            "titleSlug": "isomorphic-strings",
            "acRate": "43.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "206",
            "questionFrontendId": "206",
            "title": "Reverse Linked List",
            "titleSlug": "reverse-linked-list",
            "acRate": "75.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "207",
            "questionFrontendId": "207",
            "title": "Course Schedule",
            "titleSlug": "course-schedule",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "208",
            "questionFrontendId": "208",
            "title": "Implement Trie (Prefix Tree)",
            "titleSlug": "implement-trie-prefix-tree",
            "acRate": "64.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "209",
            "questionFrontendId": "209",
            "title": "Minimum Size Subarray Sum",
            "titleSlug": "minimum-size-subarray-sum",
            "acRate": "46.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "210",
            "questionFrontendId": "210",
            "title": "Course Schedule II",
            "titleSlug": "course-schedule-ii",
            "acRate": "50.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "211",
            "questionFrontendId": "211",
            "title": "Design Add and Search Words Data Structure",
            "titleSlug": "design-add-and-search-words-data-structure",
            "acRate": "45.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "212",
            "questionFrontendId": "212",
            "title": "Word Search II",
            "titleSlug": "word-search-ii",
            "acRate": "36.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "213",
            "questionFrontendId": "213",
            "title": "House Robber II",
            "titleSlug": "house-robber-ii",
            "acRate": "41.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "215",
            "questionFrontendId": "215",
            "title": "Kth Largest Element in an Array",
            "titleSlug": "kth-largest-element-in-an-array",
            "acRate": "66.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "216",
            "questionFrontendId": "216",
            "title": "Combination Sum III",
            "titleSlug": "combination-sum-iii",
            "acRate": "69.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "217",
            "questionFrontendId": "217",
            "title": "Contains Duplicate",
            "titleSlug": "contains-duplicate",
            "acRate": "61.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "218",
            "questionFrontendId": "218",
            "title": "The Skyline Problem",
            "titleSlug": "the-skyline-problem",
            "acRate": "42.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Line Sweep",
                    "slug": "line-sweep"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "219",
            "questionFrontendId": "219",
            "title": "Contains Duplicate II",
            "titleSlug": "contains-duplicate-ii",
            "acRate": "44.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "220",
            "questionFrontendId": "220",
            "title": "Contains Duplicate III",
            "titleSlug": "contains-duplicate-iii",
            "acRate": "22.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "221",
            "questionFrontendId": "221",
            "title": "Maximal Square",
            "titleSlug": "maximal-square",
            "acRate": "46.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "222",
            "questionFrontendId": "222",
            "title": "Count Complete Tree Nodes",
            "titleSlug": "count-complete-tree-nodes",
            "acRate": "64.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "223",
            "questionFrontendId": "223",
            "title": "Rectangle Area",
            "titleSlug": "rectangle-area",
            "acRate": "46.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "224",
            "questionFrontendId": "224",
            "title": "Basic Calculator",
            "titleSlug": "basic-calculator",
            "acRate": "43.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "225",
            "questionFrontendId": "225",
            "title": "Implement Stack using Queues",
            "titleSlug": "implement-stack-using-queues",
            "acRate": "63.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "226",
            "questionFrontendId": "226",
            "title": "Invert Binary Tree",
            "titleSlug": "invert-binary-tree",
            "acRate": "76.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "227",
            "questionFrontendId": "227",
            "title": "Basic Calculator II",
            "titleSlug": "basic-calculator-ii",
            "acRate": "43.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "229",
            "questionFrontendId": "229",
            "title": "Majority Element II",
            "titleSlug": "majority-element-ii",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "230",
            "questionFrontendId": "230",
            "title": "Kth Smallest Element in a BST",
            "titleSlug": "kth-smallest-element-in-a-bst",
            "acRate": "72.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "231",
            "questionFrontendId": "231",
            "title": "Power of Two",
            "titleSlug": "power-of-two",
            "acRate": "47.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "232",
            "questionFrontendId": "232",
            "title": "Implement Queue using Stacks",
            "titleSlug": "implement-queue-using-stacks",
            "acRate": "66.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "233",
            "questionFrontendId": "233",
            "title": "Number of Digit One",
            "titleSlug": "number-of-digit-one",
            "acRate": "34.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "234",
            "questionFrontendId": "234",
            "title": "Palindrome Linked List",
            "titleSlug": "palindrome-linked-list",
            "acRate": "51.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "235",
            "questionFrontendId": "235",
            "title": "Lowest Common Ancestor of a Binary Search Tree",
            "titleSlug": "lowest-common-ancestor-of-a-binary-search-tree",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "236",
            "questionFrontendId": "236",
            "title": "Lowest Common Ancestor of a Binary Tree",
            "titleSlug": "lowest-common-ancestor-of-a-binary-tree",
            "acRate": "61.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "237",
            "questionFrontendId": "237",
            "title": "Delete Node in a Linked List",
            "titleSlug": "delete-node-in-a-linked-list",
            "acRate": "78.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "238",
            "questionFrontendId": "238",
            "title": "Product of Array Except Self",
            "titleSlug": "product-of-array-except-self",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "239",
            "questionFrontendId": "239",
            "title": "Sliding Window Maximum",
            "titleSlug": "sliding-window-maximum",
            "acRate": "46.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "240",
            "questionFrontendId": "240",
            "title": "Search a 2D Matrix II",
            "titleSlug": "search-a-2d-matrix-ii",
            "acRate": "52.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "242",
            "questionFrontendId": "242",
            "title": "Valid Anagram",
            "titleSlug": "valid-anagram",
            "acRate": "64.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "252",
            "questionFrontendId": "252",
            "title": "Meeting Rooms",
            "titleSlug": "meeting-rooms",
            "acRate": "57.9%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "253",
            "questionFrontendId": "253",
            "title": "Meeting Rooms II",
            "titleSlug": "meeting-rooms-ii",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "257",
            "questionFrontendId": "257",
            "title": "Binary Tree Paths",
            "titleSlug": "binary-tree-paths",
            "acRate": "63.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "258",
            "questionFrontendId": "258",
            "title": "Add Digits",
            "titleSlug": "add-digits",
            "acRate": "66.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "259",
            "questionFrontendId": "259",
            "title": "3Sum Smaller",
            "titleSlug": "3sum-smaller",
            "acRate": "50.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "263",
            "questionFrontendId": "263",
            "title": "Ugly Number",
            "titleSlug": "ugly-number",
            "acRate": "42.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "268",
            "questionFrontendId": "268",
            "title": "Missing Number",
            "titleSlug": "missing-number",
            "acRate": "66.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "273",
            "questionFrontendId": "273",
            "title": "Integer to English Words",
            "titleSlug": "integer-to-english-words",
            "acRate": "30.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "274",
            "questionFrontendId": "274",
            "title": "H-Index",
            "titleSlug": "h-index",
            "acRate": "38.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting Sort",
                    "slug": "counting-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "277",
            "questionFrontendId": "277",
            "title": "Find the Celebrity",
            "titleSlug": "find-the-celebrity",
            "acRate": "47.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "278",
            "questionFrontendId": "278",
            "title": "First Bad Version",
            "titleSlug": "first-bad-version",
            "acRate": "44.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "279",
            "questionFrontendId": "279",
            "title": "Perfect Squares",
            "titleSlug": "perfect-squares",
            "acRate": "54.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "283",
            "questionFrontendId": "283",
            "title": "Move Zeroes",
            "titleSlug": "move-zeroes",
            "acRate": "61.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "284",
            "questionFrontendId": "284",
            "title": "Peeking Iterator",
            "titleSlug": "peeking-iterator",
            "acRate": "59.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "285",
            "questionFrontendId": "285",
            "title": "Inorder Successor in BST",
            "titleSlug": "inorder-successor-in-bst",
            "acRate": "49.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "287",
            "questionFrontendId": "287",
            "title": "Find the Duplicate Number",
            "titleSlug": "find-the-duplicate-number",
            "acRate": "59.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "290",
            "questionFrontendId": "290",
            "title": "Word Pattern",
            "titleSlug": "word-pattern",
            "acRate": "41.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "295",
            "questionFrontendId": "295",
            "title": "Find Median from Data Stream",
            "titleSlug": "find-median-from-data-stream",
            "acRate": "51.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "297",
            "questionFrontendId": "297",
            "title": "Serialize and Deserialize Binary Tree",
            "titleSlug": "serialize-and-deserialize-binary-tree",
            "acRate": "56.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "300",
            "questionFrontendId": "300",
            "title": "Longest Increasing Subsequence",
            "titleSlug": "longest-increasing-subsequence",
            "acRate": "55.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "301",
            "questionFrontendId": "301",
            "title": "Remove Invalid Parentheses",
            "titleSlug": "remove-invalid-parentheses",
            "acRate": "48.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "309",
            "questionFrontendId": "309",
            "title": "Best Time to Buy and Sell Stock with Cooldown",
            "titleSlug": "best-time-to-buy-and-sell-stock-with-cooldown",
            "acRate": "57.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "311",
            "questionFrontendId": "311",
            "title": "Sparse Matrix Multiplication",
            "titleSlug": "sparse-matrix-multiplication",
            "acRate": "68.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "312",
            "questionFrontendId": "312",
            "title": "Burst Balloons",
            "titleSlug": "burst-balloons",
            "acRate": "58.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "315",
            "questionFrontendId": "315",
            "title": "Count of Smaller Numbers After Self",
            "titleSlug": "count-of-smaller-numbers-after-self",
            "acRate": "42.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "316",
            "questionFrontendId": "316",
            "title": "Remove Duplicate Letters",
            "titleSlug": "remove-duplicate-letters",
            "acRate": "49.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "322",
            "questionFrontendId": "322",
            "title": "Coin Change",
            "titleSlug": "coin-change",
            "acRate": "43.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "325",
            "questionFrontendId": "325",
            "title": "Maximum Size Subarray Sum Equals k",
            "titleSlug": "maximum-size-subarray-sum-equals-k",
            "acRate": "49.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "326",
            "questionFrontendId": "326",
            "title": "Power of Three",
            "titleSlug": "power-of-three",
            "acRate": "46.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "328",
            "questionFrontendId": "328",
            "title": "Odd Even Linked List",
            "titleSlug": "odd-even-linked-list",
            "acRate": "61.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "329",
            "questionFrontendId": "329",
            "title": "Longest Increasing Path in a Matrix",
            "titleSlug": "longest-increasing-path-in-a-matrix",
            "acRate": "53.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "334",
            "questionFrontendId": "334",
            "title": "Increasing Triplet Subsequence",
            "titleSlug": "increasing-triplet-subsequence",
            "acRate": "40.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "341",
            "questionFrontendId": "341",
            "title": "Flatten Nested List Iterator",
            "titleSlug": "flatten-nested-list-iterator",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "342",
            "questionFrontendId": "342",
            "title": "Power of Four",
            "titleSlug": "power-of-four",
            "acRate": "47.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "343",
            "questionFrontendId": "343",
            "title": "Integer Break",
            "titleSlug": "integer-break",
            "acRate": "60.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "344",
            "questionFrontendId": "344",
            "title": "Reverse String",
            "titleSlug": "reverse-string",
            "acRate": "77.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "345",
            "questionFrontendId": "345",
            "title": "Reverse Vowels of a String",
            "titleSlug": "reverse-vowels-of-a-string",
            "acRate": "52.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "346",
            "questionFrontendId": "346",
            "title": "Moving Average from Data Stream",
            "titleSlug": "moving-average-from-data-stream",
            "acRate": "78.1%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "347",
            "questionFrontendId": "347",
            "title": "Top K Frequent Elements",
            "titleSlug": "top-k-frequent-elements",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "348",
            "questionFrontendId": "348",
            "title": "Design Tic-Tac-Toe",
            "titleSlug": "design-tic-tac-toe",
            "acRate": "57.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "349",
            "questionFrontendId": "349",
            "title": "Intersection of Two Arrays",
            "titleSlug": "intersection-of-two-arrays",
            "acRate": "72.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "350",
            "questionFrontendId": "350",
            "title": "Intersection of Two Arrays II",
            "titleSlug": "intersection-of-two-arrays-ii",
            "acRate": "56.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "352",
            "questionFrontendId": "352",
            "title": "Data Stream as Disjoint Intervals",
            "titleSlug": "data-stream-as-disjoint-intervals",
            "acRate": "60.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "355",
            "questionFrontendId": "355",
            "title": "Design Twitter",
            "titleSlug": "design-twitter",
            "acRate": "39.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "357",
            "questionFrontendId": "357",
            "title": "Count Numbers with Unique Digits",
            "titleSlug": "count-numbers-with-unique-digits",
            "acRate": "52.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "362",
            "questionFrontendId": "362",
            "title": "Design Hit Counter",
            "titleSlug": "design-hit-counter",
            "acRate": "68.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "367",
            "questionFrontendId": "367",
            "title": "Valid Perfect Square",
            "titleSlug": "valid-perfect-square",
            "acRate": "43.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "368",
            "questionFrontendId": "368",
            "title": "Largest Divisible Subset",
            "titleSlug": "largest-divisible-subset",
            "acRate": "45.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "371",
            "questionFrontendId": "371",
            "title": "Sum of Two Integers",
            "titleSlug": "sum-of-two-integers",
            "acRate": "51.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "373",
            "questionFrontendId": "373",
            "title": "Find K Pairs with Smallest Sums",
            "titleSlug": "find-k-pairs-with-smallest-sums",
            "acRate": "40.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "374",
            "questionFrontendId": "374",
            "title": "Guess Number Higher or Lower",
            "titleSlug": "guess-number-higher-or-lower",
            "acRate": "53.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "376",
            "questionFrontendId": "376",
            "title": "Wiggle Subsequence",
            "titleSlug": "wiggle-subsequence",
            "acRate": "48.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "377",
            "questionFrontendId": "377",
            "title": "Combination Sum IV",
            "titleSlug": "combination-sum-iv",
            "acRate": "54.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "380",
            "questionFrontendId": "380",
            "title": "Insert Delete GetRandom O(1)",
            "titleSlug": "insert-delete-getrandom-o1",
            "acRate": "54.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "381",
            "questionFrontendId": "381",
            "title": "Insert Delete GetRandom O(1) - Duplicates allowed",
            "titleSlug": "insert-delete-getrandom-o1-duplicates-allowed",
            "acRate": "35.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "383",
            "questionFrontendId": "383",
            "title": "Ransom Note",
            "titleSlug": "ransom-note",
            "acRate": "60.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "384",
            "questionFrontendId": "384",
            "title": "Shuffle an Array",
            "titleSlug": "shuffle-an-array",
            "acRate": "58.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "386",
            "questionFrontendId": "386",
            "title": "Lexicographical Numbers",
            "titleSlug": "lexicographical-numbers",
            "acRate": "63.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "387",
            "questionFrontendId": "387",
            "title": "First Unique Character in a String",
            "titleSlug": "first-unique-character-in-a-string",
            "acRate": "62.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "389",
            "questionFrontendId": "389",
            "title": "Find the Difference",
            "titleSlug": "find-the-difference",
            "acRate": "59.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "392",
            "questionFrontendId": "392",
            "title": "Is Subsequence",
            "titleSlug": "is-subsequence",
            "acRate": "47.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "393",
            "questionFrontendId": "393",
            "title": "UTF-8 Validation",
            "titleSlug": "utf-8-validation",
            "acRate": "45.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "394",
            "questionFrontendId": "394",
            "title": "Decode String",
            "titleSlug": "decode-string",
            "acRate": "59.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "395",
            "questionFrontendId": "395",
            "title": "Longest Substring with At Least K Repeating Characters",
            "titleSlug": "longest-substring-with-at-least-k-repeating-characters",
            "acRate": "44.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "399",
            "questionFrontendId": "399",
            "title": "Evaluate Division",
            "titleSlug": "evaluate-division",
            "acRate": "61.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "400",
            "questionFrontendId": "400",
            "title": "Nth Digit",
            "titleSlug": "nth-digit",
            "acRate": "34.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "402",
            "questionFrontendId": "402",
            "title": "Remove K Digits",
            "titleSlug": "remove-k-digits",
            "acRate": "31.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "407",
            "questionFrontendId": "407",
            "title": "Trapping Rain Water II",
            "titleSlug": "trapping-rain-water-ii",
            "acRate": "47.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "409",
            "questionFrontendId": "409",
            "title": "Longest Palindrome",
            "titleSlug": "longest-palindrome",
            "acRate": "53.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "410",
            "questionFrontendId": "410",
            "title": "Split Array Largest Sum",
            "titleSlug": "split-array-largest-sum",
            "acRate": "55.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "412",
            "questionFrontendId": "412",
            "title": "Fizz Buzz",
            "titleSlug": "fizz-buzz",
            "acRate": "71.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "415",
            "questionFrontendId": "415",
            "title": "Add Strings",
            "titleSlug": "add-strings",
            "acRate": "51.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "416",
            "questionFrontendId": "416",
            "title": "Partition Equal Subset Sum",
            "titleSlug": "partition-equal-subset-sum",
            "acRate": "46.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "417",
            "questionFrontendId": "417",
            "title": "Pacific Atlantic Water Flow",
            "titleSlug": "pacific-atlantic-water-flow",
            "acRate": "55.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "419",
            "questionFrontendId": "419",
            "title": "Battleships in a Board",
            "titleSlug": "battleships-in-a-board",
            "acRate": "75.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "420",
            "questionFrontendId": "420",
            "title": "Strong Password Checker",
            "titleSlug": "strong-password-checker",
            "acRate": "13.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "421",
            "questionFrontendId": "421",
            "title": "Maximum XOR of Two Numbers in an Array",
            "titleSlug": "maximum-xor-of-two-numbers-in-an-array",
            "acRate": "53.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "424",
            "questionFrontendId": "424",
            "title": "Longest Repeating Character Replacement",
            "titleSlug": "longest-repeating-character-replacement",
            "acRate": "53.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "433",
            "questionFrontendId": "433",
            "title": "Minimum Genetic Mutation",
            "titleSlug": "minimum-genetic-mutation",
            "acRate": "53.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "435",
            "questionFrontendId": "435",
            "title": "Non-overlapping Intervals",
            "titleSlug": "non-overlapping-intervals",
            "acRate": "52.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "438",
            "questionFrontendId": "438",
            "title": "Find All Anagrams in a String",
            "titleSlug": "find-all-anagrams-in-a-string",
            "acRate": "50.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "442",
            "questionFrontendId": "442",
            "title": "Find All Duplicates in an Array",
            "titleSlug": "find-all-duplicates-in-an-array",
            "acRate": "73.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "443",
            "questionFrontendId": "443",
            "title": "String Compression",
            "titleSlug": "string-compression",
            "acRate": "54.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "445",
            "questionFrontendId": "445",
            "title": "Add Two Numbers II",
            "titleSlug": "add-two-numbers-ii",
            "acRate": "61.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "446",
            "questionFrontendId": "446",
            "title": "Arithmetic Slices II - Subsequence",
            "titleSlug": "arithmetic-slices-ii-subsequence",
            "acRate": "54.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "448",
            "questionFrontendId": "448",
            "title": "Find All Numbers Disappeared in an Array",
            "titleSlug": "find-all-numbers-disappeared-in-an-array",
            "acRate": "60.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "450",
            "questionFrontendId": "450",
            "title": "Delete Node in a BST",
            "titleSlug": "delete-node-in-a-bst",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "451",
            "questionFrontendId": "451",
            "title": "Sort Characters By Frequency",
            "titleSlug": "sort-characters-by-frequency",
            "acRate": "72.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "452",
            "questionFrontendId": "452",
            "title": "Minimum Number of Arrows to Burst Balloons",
            "titleSlug": "minimum-number-of-arrows-to-burst-balloons",
            "acRate": "56.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "455",
            "questionFrontendId": "455",
            "title": "Assign Cookies",
            "titleSlug": "assign-cookies",
            "acRate": "52.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "456",
            "questionFrontendId": "456",
            "title": "132 Pattern",
            "titleSlug": "132-pattern",
            "acRate": "33.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "459",
            "questionFrontendId": "459",
            "title": "Repeated Substring Pattern",
            "titleSlug": "repeated-substring-pattern",
            "acRate": "46.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "460",
            "questionFrontendId": "460",
            "title": "LFU Cache",
            "titleSlug": "lfu-cache",
            "acRate": "44.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "462",
            "questionFrontendId": "462",
            "title": "Minimum Moves to Equal Array Elements II",
            "titleSlug": "minimum-moves-to-equal-array-elements-ii",
            "acRate": "60.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "463",
            "questionFrontendId": "463",
            "title": "Island Perimeter",
            "titleSlug": "island-perimeter",
            "acRate": "70.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "465",
            "questionFrontendId": "465",
            "title": "Optimal Account Balancing",
            "titleSlug": "optimal-account-balancing",
            "acRate": "49.5%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "468",
            "questionFrontendId": "468",
            "title": "Validate IP Address",
            "titleSlug": "validate-ip-address",
            "acRate": "26.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "473",
            "questionFrontendId": "473",
            "title": "Matchsticks to Square",
            "titleSlug": "matchsticks-to-square",
            "acRate": "40.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "474",
            "questionFrontendId": "474",
            "title": "Ones and Zeroes",
            "titleSlug": "ones-and-zeroes",
            "acRate": "47.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "476",
            "questionFrontendId": "476",
            "title": "Number Complement",
            "titleSlug": "number-complement",
            "acRate": "67.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "485",
            "questionFrontendId": "485",
            "title": "Max Consecutive Ones",
            "titleSlug": "max-consecutive-ones",
            "acRate": "58.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "486",
            "questionFrontendId": "486",
            "title": "Predict the Winner",
            "titleSlug": "predict-the-winner",
            "acRate": "55.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Game Theory",
                    "slug": "game-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "492",
            "questionFrontendId": "492",
            "title": "Construct the Rectangle",
            "titleSlug": "construct-the-rectangle",
            "acRate": "57.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "493",
            "questionFrontendId": "493",
            "title": "Reverse Pairs",
            "titleSlug": "reverse-pairs",
            "acRate": "30.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "494",
            "questionFrontendId": "494",
            "title": "Target Sum",
            "titleSlug": "target-sum",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "496",
            "questionFrontendId": "496",
            "title": "Next Greater Element I",
            "titleSlug": "next-greater-element-i",
            "acRate": "72.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "503",
            "questionFrontendId": "503",
            "title": "Next Greater Element II",
            "titleSlug": "next-greater-element-ii",
            "acRate": "63.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "508",
            "questionFrontendId": "508",
            "title": "Most Frequent Subtree Sum",
            "titleSlug": "most-frequent-subtree-sum",
            "acRate": "66.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "523",
            "questionFrontendId": "523",
            "title": "Continuous Subarray Sum",
            "titleSlug": "continuous-subarray-sum",
            "acRate": "28.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "525",
            "questionFrontendId": "525",
            "title": "Contiguous Array",
            "titleSlug": "contiguous-array",
            "acRate": "46.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "532",
            "questionFrontendId": "532",
            "title": "K-diff Pairs in an Array",
            "titleSlug": "k-diff-pairs-in-an-array",
            "acRate": "42.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "540",
            "questionFrontendId": "540",
            "title": "Single Element in a Sorted Array",
            "titleSlug": "single-element-in-a-sorted-array",
            "acRate": "59.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "541",
            "questionFrontendId": "541",
            "title": "Reverse String II",
            "titleSlug": "reverse-string-ii",
            "acRate": "50.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "542",
            "questionFrontendId": "542",
            "title": "01 Matrix",
            "titleSlug": "01-matrix",
            "acRate": "48.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "543",
            "questionFrontendId": "543",
            "title": "Diameter of Binary Tree",
            "titleSlug": "diameter-of-binary-tree",
            "acRate": "59.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "545",
            "questionFrontendId": "545",
            "title": "Boundary of Binary Tree",
            "titleSlug": "boundary-of-binary-tree",
            "acRate": "45.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "547",
            "questionFrontendId": "547",
            "title": "Number of Provinces",
            "titleSlug": "number-of-provinces",
            "acRate": "65.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "556",
            "questionFrontendId": "556",
            "title": "Next Greater Element III",
            "titleSlug": "next-greater-element-iii",
            "acRate": "33.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "557",
            "questionFrontendId": "557",
            "title": "Reverse Words in a String III",
            "titleSlug": "reverse-words-in-a-string-iii",
            "acRate": "83.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "560",
            "questionFrontendId": "560",
            "title": "Subarray Sum Equals K",
            "titleSlug": "subarray-sum-equals-k",
            "acRate": "43.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "565",
            "questionFrontendId": "565",
            "title": "Array Nesting",
            "titleSlug": "array-nesting",
            "acRate": "56.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "566",
            "questionFrontendId": "566",
            "title": "Reshape the Matrix",
            "titleSlug": "reshape-the-matrix",
            "acRate": "63.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "567",
            "questionFrontendId": "567",
            "title": "Permutation in String",
            "titleSlug": "permutation-in-string",
            "acRate": "44.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "570",
            "questionFrontendId": "570",
            "title": "Managers with at Least 5 Direct Reports",
            "titleSlug": "managers-with-at-least-5-direct-reports",
            "acRate": "51.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "572",
            "questionFrontendId": "572",
            "title": "Subtree of Another Tree",
            "titleSlug": "subtree-of-another-tree",
            "acRate": "47.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "583",
            "questionFrontendId": "583",
            "title": "Delete Operation for Two Strings",
            "titleSlug": "delete-operation-for-two-strings",
            "acRate": "61.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "584",
            "questionFrontendId": "584",
            "title": "Find Customer Referee",
            "titleSlug": "find-customer-referee",
            "acRate": "69.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "586",
            "questionFrontendId": "586",
            "title": "Customer Placing the Largest Number of Orders",
            "titleSlug": "customer-placing-the-largest-number-of-orders",
            "acRate": "64.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "595",
            "questionFrontendId": "595",
            "title": "Big Countries",
            "titleSlug": "big-countries",
            "acRate": "68.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "605",
            "questionFrontendId": "605",
            "title": "Can Place Flowers",
            "titleSlug": "can-place-flowers",
            "acRate": "29.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "610",
            "questionFrontendId": "610",
            "title": "Triangle Judgement",
            "titleSlug": "triangle-judgement",
            "acRate": "71.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "611",
            "questionFrontendId": "611",
            "title": "Valid Triangle Number",
            "titleSlug": "valid-triangle-number",
            "acRate": "51.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "617",
            "questionFrontendId": "617",
            "title": "Merge Two Binary Trees",
            "titleSlug": "merge-two-binary-trees",
            "acRate": "78.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "619",
            "questionFrontendId": "619",
            "title": "Biggest Single Number",
            "titleSlug": "biggest-single-number",
            "acRate": "60.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "620",
            "questionFrontendId": "620",
            "title": "Not Boring Movies",
            "titleSlug": "not-boring-movies",
            "acRate": "73.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "621",
            "questionFrontendId": "621",
            "title": "Task Scheduler",
            "titleSlug": "task-scheduler",
            "acRate": "58.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "627",
            "questionFrontendId": "627",
            "title": "Swap Salary",
            "titleSlug": "swap-salary",
            "acRate": "83.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "629",
            "questionFrontendId": "629",
            "title": "K Inverse Pairs Array",
            "titleSlug": "k-inverse-pairs-array",
            "acRate": "50.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "632",
            "questionFrontendId": "632",
            "title": "Smallest Range Covering Elements from K Lists",
            "titleSlug": "smallest-range-covering-elements-from-k-lists",
            "acRate": "62.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "633",
            "questionFrontendId": "633",
            "title": "Sum of Square Numbers",
            "titleSlug": "sum-of-square-numbers",
            "acRate": "34.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "637",
            "questionFrontendId": "637",
            "title": "Average of Levels in Binary Tree",
            "titleSlug": "average-of-levels-in-binary-tree",
            "acRate": "72.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "642",
            "questionFrontendId": "642",
            "title": "Design Search Autocomplete System",
            "titleSlug": "design-search-autocomplete-system",
            "acRate": "48.9%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "643",
            "questionFrontendId": "643",
            "title": "Maximum Average Subarray I",
            "titleSlug": "maximum-average-subarray-i",
            "acRate": "43.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "645",
            "questionFrontendId": "645",
            "title": "Set Mismatch",
            "titleSlug": "set-mismatch",
            "acRate": "44.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "646",
            "questionFrontendId": "646",
            "title": "Maximum Length of Pair Chain",
            "titleSlug": "maximum-length-of-pair-chain",
            "acRate": "59.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "647",
            "questionFrontendId": "647",
            "title": "Palindromic Substrings",
            "titleSlug": "palindromic-substrings",
            "acRate": "69.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "649",
            "questionFrontendId": "649",
            "title": "Dota2 Senate",
            "titleSlug": "dota2-senate",
            "acRate": "47.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "653",
            "questionFrontendId": "653",
            "title": "Two Sum IV - Input is a BST",
            "titleSlug": "two-sum-iv-input-is-a-bst",
            "acRate": "61.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "658",
            "questionFrontendId": "658",
            "title": "Find K Closest Elements",
            "titleSlug": "find-k-closest-elements",
            "acRate": "47.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "659",
            "questionFrontendId": "659",
            "title": "Split Array into Consecutive Subsequences",
            "titleSlug": "split-array-into-consecutive-subsequences",
            "acRate": "51.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "678",
            "questionFrontendId": "678",
            "title": "Valid Parenthesis String",
            "titleSlug": "valid-parenthesis-string",
            "acRate": "34.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "680",
            "questionFrontendId": "680",
            "title": "Valid Palindrome II",
            "titleSlug": "valid-palindrome-ii",
            "acRate": "40.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "682",
            "questionFrontendId": "682",
            "title": "Baseball Game",
            "titleSlug": "baseball-game",
            "acRate": "75.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "684",
            "questionFrontendId": "684",
            "title": "Redundant Connection",
            "titleSlug": "redundant-connection",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "690",
            "questionFrontendId": "690",
            "title": "Employee Importance",
            "titleSlug": "employee-importance",
            "acRate": "66.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "692",
            "questionFrontendId": "692",
            "title": "Top K Frequent Words",
            "titleSlug": "top-k-frequent-words",
            "acRate": "57.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "694",
            "questionFrontendId": "694",
            "title": "Number of Distinct Islands",
            "titleSlug": "number-of-distinct-islands",
            "acRate": "61.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "695",
            "questionFrontendId": "695",
            "title": "Max Area of Island",
            "titleSlug": "max-area-of-island",
            "acRate": "71.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "697",
            "questionFrontendId": "697",
            "title": "Degree of an Array",
            "titleSlug": "degree-of-an-array",
            "acRate": "56.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "698",
            "questionFrontendId": "698",
            "title": "Partition to K Equal Sum Subsets",
            "titleSlug": "partition-to-k-equal-sum-subsets",
            "acRate": "38.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "714",
            "questionFrontendId": "714",
            "title": "Best Time to Buy and Sell Stock with Transaction Fee",
            "titleSlug": "best-time-to-buy-and-sell-stock-with-transaction-fee",
            "acRate": "68.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "716",
            "questionFrontendId": "716",
            "title": "Max Stack",
            "titleSlug": "max-stack",
            "acRate": "45.0%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "721",
            "questionFrontendId": "721",
            "title": "Accounts Merge",
            "titleSlug": "accounts-merge",
            "acRate": "56.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "722",
            "questionFrontendId": "722",
            "title": "Remove Comments",
            "titleSlug": "remove-comments",
            "acRate": "38.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "724",
            "questionFrontendId": "724",
            "title": "Find Pivot Index",
            "titleSlug": "find-pivot-index",
            "acRate": "57.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "726",
            "questionFrontendId": "726",
            "title": "Number of Atoms",
            "titleSlug": "number-of-atoms",
            "acRate": "52.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "729",
            "questionFrontendId": "729",
            "title": "My Calendar I",
            "titleSlug": "my-calendar-i",
            "acRate": "56.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "730",
            "questionFrontendId": "730",
            "title": "Count Different Palindromic Subsequences",
            "titleSlug": "count-different-palindromic-subsequences",
            "acRate": "45.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "733",
            "questionFrontendId": "733",
            "title": "Flood Fill",
            "titleSlug": "flood-fill",
            "acRate": "63.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "735",
            "questionFrontendId": "735",
            "title": "Asteroid Collision",
            "titleSlug": "asteroid-collision",
            "acRate": "44.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "739",
            "questionFrontendId": "739",
            "title": "Daily Temperatures",
            "titleSlug": "daily-temperatures",
            "acRate": "66.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "740",
            "questionFrontendId": "740",
            "title": "Delete and Earn",
            "titleSlug": "delete-and-earn",
            "acRate": "56.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "747",
            "questionFrontendId": "746",
            "title": "Min Cost Climbing Stairs",
            "titleSlug": "min-cost-climbing-stairs",
            "acRate": "65.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "761",
            "questionFrontendId": "759",
            "title": "Employee Free Time",
            "titleSlug": "employee-free-time",
            "acRate": "72.0%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "765",
            "questionFrontendId": "428",
            "title": "Serialize and Deserialize N-ary Tree",
            "titleSlug": "serialize-and-deserialize-n-ary-tree",
            "acRate": "66.7%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "768",
            "questionFrontendId": "763",
            "title": "Partition Labels",
            "titleSlug": "partition-labels",
            "acRate": "79.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "774",
            "questionFrontendId": "559",
            "title": "Maximum Depth of N-ary Tree",
            "titleSlug": "maximum-depth-of-n-ary-tree",
            "acRate": "72.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "778",
            "questionFrontendId": "767",
            "title": "Reorganize String",
            "titleSlug": "reorganize-string",
            "acRate": "54.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "782",
            "questionFrontendId": "771",
            "title": "Jewels and Stones",
            "titleSlug": "jewels-and-stones",
            "acRate": "88.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "783",
            "questionFrontendId": "700",
            "title": "Search in a Binary Search Tree",
            "titleSlug": "search-in-a-binary-search-tree",
            "acRate": "79.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "785",
            "questionFrontendId": "772",
            "title": "Basic Calculator III",
            "titleSlug": "basic-calculator-iii",
            "acRate": "50.2%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "789",
            "questionFrontendId": "703",
            "title": "Kth Largest Element in a Stream",
            "titleSlug": "kth-largest-element-in-a-stream",
            "acRate": "56.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "792",
            "questionFrontendId": "704",
            "title": "Binary Search",
            "titleSlug": "binary-search",
            "acRate": "57.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "794",
            "questionFrontendId": "778",
            "title": "Swim in Rising Water",
            "titleSlug": "swim-in-rising-water",
            "acRate": "60.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "795",
            "questionFrontendId": "779",
            "title": "K-th Symbol in Grammar",
            "titleSlug": "k-th-symbol-in-grammar",
            "acRate": "46.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "797",
            "questionFrontendId": "781",
            "title": "Rabbits in Forest",
            "titleSlug": "rabbits-in-forest",
            "acRate": "53.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "800",
            "questionFrontendId": "784",
            "title": "Letter Case Permutation",
            "titleSlug": "letter-case-permutation",
            "acRate": "74.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "801",
            "questionFrontendId": "785",
            "title": "Is Graph Bipartite?",
            "titleSlug": "is-graph-bipartite",
            "acRate": "55.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "803",
            "questionFrontendId": "787",
            "title": "Cheapest Flights Within K Stops",
            "titleSlug": "cheapest-flights-within-k-stops",
            "acRate": "39.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "807",
            "questionFrontendId": "791",
            "title": "Custom Sort String",
            "titleSlug": "custom-sort-string",
            "acRate": "69.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "812",
            "questionFrontendId": "796",
            "title": "Rotate String",
            "titleSlug": "rotate-string",
            "acRate": "57.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "814",
            "questionFrontendId": "798",
            "title": "Smallest Rotation with Highest Score",
            "titleSlug": "smallest-rotation-with-highest-score",
            "acRate": "51.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "816",
            "questionFrontendId": "705",
            "title": "Design HashSet",
            "titleSlug": "design-hashset",
            "acRate": "67.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "817",
            "questionFrontendId": "706",
            "title": "Design HashMap",
            "titleSlug": "design-hashmap",
            "acRate": "65.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "826",
            "questionFrontendId": "808",
            "title": "Soup Servings",
            "titleSlug": "soup-servings",
            "acRate": "54.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Probability and Statistics",
                    "slug": "probability-and-statistics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "832",
            "questionFrontendId": "814",
            "title": "Binary Tree Pruning",
            "titleSlug": "binary-tree-pruning",
            "acRate": "72.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "843",
            "questionFrontendId": "823",
            "title": "Binary Trees With Factors",
            "titleSlug": "binary-trees-with-factors",
            "acRate": "52.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "860",
            "questionFrontendId": "622",
            "title": "Design Circular Queue",
            "titleSlug": "design-circular-queue",
            "acRate": "51.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "861",
            "questionFrontendId": "832",
            "title": "Flipping an Image",
            "titleSlug": "flipping-an-image",
            "acRate": "81.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "866",
            "questionFrontendId": "836",
            "title": "Rectangle Overlap",
            "titleSlug": "rectangle-overlap",
            "acRate": "44.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "877",
            "questionFrontendId": "847",
            "title": "Shortest Path Visiting All Nodes",
            "titleSlug": "shortest-path-visiting-all-nodes",
            "acRate": "65.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "879",
            "questionFrontendId": "849",
            "title": "Maximize Distance to Closest Person",
            "titleSlug": "maximize-distance-to-closest-person",
            "acRate": "48.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "882",
            "questionFrontendId": "852",
            "title": "Peak Index in a Mountain Array",
            "titleSlug": "peak-index-in-a-mountain-array",
            "acRate": "68.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "883",
            "questionFrontendId": "853",
            "title": "Car Fleet",
            "titleSlug": "car-fleet",
            "acRate": "50.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "886",
            "questionFrontendId": "856",
            "title": "Score of Parentheses",
            "titleSlug": "score-of-parentheses",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "893",
            "questionFrontendId": "863",
            "title": "All Nodes Distance K in Binary Tree",
            "titleSlug": "all-nodes-distance-k-in-binary-tree",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "898",
            "questionFrontendId": "867",
            "title": "Transpose Matrix",
            "titleSlug": "transpose-matrix",
            "acRate": "71.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "900",
            "questionFrontendId": "869",
            "title": "Reordered Power of 2",
            "titleSlug": "reordered-power-of-2",
            "acRate": "62.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "902",
            "questionFrontendId": "871",
            "title": "Minimum Number of Refueling Stops",
            "titleSlug": "minimum-number-of-refueling-stops",
            "acRate": "40.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "907",
            "questionFrontendId": "875",
            "title": "Koko Eating Bananas",
            "titleSlug": "koko-eating-bananas",
            "acRate": "49.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "908",
            "questionFrontendId": "876",
            "title": "Middle of the Linked List",
            "titleSlug": "middle-of-the-linked-list",
            "acRate": "77.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "912",
            "questionFrontendId": "528",
            "title": "Random Pick with Weight",
            "titleSlug": "random-pick-with-weight",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "917",
            "questionFrontendId": "881",
            "title": "Boats to Save People",
            "titleSlug": "boats-to-save-people",
            "acRate": "56.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "923",
            "questionFrontendId": "887",
            "title": "Super Egg Drop",
            "titleSlug": "super-egg-drop",
            "acRate": "27.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "926",
            "questionFrontendId": "890",
            "title": "Find and Replace Pattern",
            "titleSlug": "find-and-replace-pattern",
            "acRate": "76.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "930",
            "questionFrontendId": "894",
            "title": "All Possible Full Binary Trees",
            "titleSlug": "all-possible-full-binary-trees",
            "acRate": "82.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "931",
            "questionFrontendId": "895",
            "title": "Maximum Frequency Stack",
            "titleSlug": "maximum-frequency-stack",
            "acRate": "66.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "940",
            "questionFrontendId": "904",
            "title": "Fruit Into Baskets",
            "titleSlug": "fruit-into-baskets",
            "acRate": "44.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "943",
            "questionFrontendId": "907",
            "title": "Sum of Subarray Minimums",
            "titleSlug": "sum-of-subarray-minimums",
            "acRate": "37.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "945",
            "questionFrontendId": "909",
            "title": "Snakes and Ladders",
            "titleSlug": "snakes-and-ladders",
            "acRate": "43.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "948",
            "questionFrontendId": "912",
            "title": "Sort an Array",
            "titleSlug": "sort-an-array",
            "acRate": "56.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Radix Sort",
                    "slug": "radix-sort"
                },
                {
                    "name": "Counting Sort",
                    "slug": "counting-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "952",
            "questionFrontendId": "916",
            "title": "Word Subsets",
            "titleSlug": "word-subsets",
            "acRate": "52.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "954",
            "questionFrontendId": "918",
            "title": "Maximum Sum Circular Subarray",
            "titleSlug": "maximum-sum-circular-subarray",
            "acRate": "44.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "957",
            "questionFrontendId": "921",
            "title": "Minimum Add to Make Parentheses Valid",
            "titleSlug": "minimum-add-to-make-parentheses-valid",
            "acRate": "75.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "959",
            "questionFrontendId": "923",
            "title": "3Sum With Multiplicity",
            "titleSlug": "3sum-with-multiplicity",
            "acRate": "45.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "972",
            "questionFrontendId": "935",
            "title": "Knight Dialer",
            "titleSlug": "knight-dialer",
            "acRate": "59.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "975",
            "questionFrontendId": "938",
            "title": "Range Sum of BST",
            "titleSlug": "range-sum-of-bst",
            "acRate": "86.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "983",
            "questionFrontendId": "946",
            "title": "Validate Stack Sequences",
            "titleSlug": "validate-stack-sequences",
            "acRate": "69.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "985",
            "questionFrontendId": "948",
            "title": "Bag of Tokens",
            "titleSlug": "bag-of-tokens",
            "acRate": "52.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "998",
            "questionFrontendId": "958",
            "title": "Check Completeness of a Binary Tree",
            "titleSlug": "check-completeness-of-a-binary-tree",
            "acRate": "56.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1008",
            "questionFrontendId": "968",
            "title": "Binary Tree Cameras",
            "titleSlug": "binary-tree-cameras",
            "acRate": "46.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1013",
            "questionFrontendId": "509",
            "title": "Fibonacci Number",
            "titleSlug": "fibonacci-number",
            "acRate": "70.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1014",
            "questionFrontendId": "973",
            "title": "K Closest Points to Origin",
            "titleSlug": "k-closest-points-to-origin",
            "acRate": "66.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1016",
            "questionFrontendId": "974",
            "title": "Subarray Sums Divisible by K",
            "titleSlug": "subarray-sums-divisible-by-k",
            "acRate": "54.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1018",
            "questionFrontendId": "976",
            "title": "Largest Perimeter Triangle",
            "titleSlug": "largest-perimeter-triangle",
            "acRate": "55.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1019",
            "questionFrontendId": "977",
            "title": "Squares of a Sorted Array",
            "titleSlug": "squares-of-a-sorted-array",
            "acRate": "72.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1021",
            "questionFrontendId": "979",
            "title": "Distribute Coins in Binary Tree",
            "titleSlug": "distribute-coins-in-binary-tree",
            "acRate": "72.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1023",
            "questionFrontendId": "981",
            "title": "Time Based Key-Value Store",
            "titleSlug": "time-based-key-value-store",
            "acRate": "49.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1025",
            "questionFrontendId": "983",
            "title": "Minimum Cost For Tickets",
            "titleSlug": "minimum-cost-for-tickets",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1029",
            "questionFrontendId": "987",
            "title": "Vertical Order Traversal of a Binary Tree",
            "titleSlug": "vertical-order-traversal-of-a-binary-tree",
            "acRate": "47.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1032",
            "questionFrontendId": "990",
            "title": "Satisfiability of Equality Equations",
            "titleSlug": "satisfiability-of-equality-equations",
            "acRate": "50.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1034",
            "questionFrontendId": "992",
            "title": "Subarrays with K Different Integers",
            "titleSlug": "subarrays-with-k-different-integers",
            "acRate": "56.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1036",
            "questionFrontendId": "994",
            "title": "Rotting Oranges",
            "titleSlug": "rotting-oranges",
            "acRate": "53.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1038",
            "questionFrontendId": "996",
            "title": "Number of Squareful Arrays",
            "titleSlug": "number-of-squareful-arrays",
            "acRate": "49.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1039",
            "questionFrontendId": "997",
            "title": "Find the Town Judge",
            "titleSlug": "find-the-town-judge",
            "acRate": "49.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1044",
            "questionFrontendId": "1002",
            "title": "Find Common Characters",
            "titleSlug": "find-common-characters",
            "acRate": "68.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1046",
            "questionFrontendId": "1004",
            "title": "Max Consecutive Ones III",
            "titleSlug": "max-consecutive-ones-iii",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1050",
            "questionFrontendId": "1008",
            "title": "Construct Binary Search Tree from Preorder Traversal",
            "titleSlug": "construct-binary-search-tree-from-preorder-traversal",
            "acRate": "81.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1054",
            "questionFrontendId": "1009",
            "title": "Complement of Base 10 Integer",
            "titleSlug": "complement-of-base-10-integer",
            "acRate": "60.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1055",
            "questionFrontendId": "1010",
            "title": "Pairs of Songs With Total Durations Divisible by 60",
            "titleSlug": "pairs-of-songs-with-total-durations-divisible-by-60",
            "acRate": "52.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1056",
            "questionFrontendId": "1011",
            "title": "Capacity To Ship Packages Within D Days",
            "titleSlug": "capacity-to-ship-packages-within-d-days",
            "acRate": "69.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1058",
            "questionFrontendId": "1061",
            "title": "Lexicographically Smallest Equivalent String",
            "titleSlug": "lexicographically-smallest-equivalent-string",
            "acRate": "76.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1072",
            "questionFrontendId": "1019",
            "title": "Next Greater Node In Linked List",
            "titleSlug": "next-greater-node-in-linked-list",
            "acRate": "60.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1078",
            "questionFrontendId": "1021",
            "title": "Remove Outermost Parentheses",
            "titleSlug": "remove-outermost-parentheses",
            "acRate": "82.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1081",
            "questionFrontendId": "1024",
            "title": "Video Stitching",
            "titleSlug": "video-stitching",
            "acRate": "51.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1087",
            "questionFrontendId": "1027",
            "title": "Longest Arithmetic Subsequence",
            "titleSlug": "longest-arithmetic-subsequence",
            "acRate": "49.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1092",
            "questionFrontendId": "1026",
            "title": "Maximum Difference Between Node and Ancestor",
            "titleSlug": "maximum-difference-between-node-and-ancestor",
            "acRate": "78.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1105",
            "questionFrontendId": "1035",
            "title": "Uncrossed Lines",
            "titleSlug": "uncrossed-lines",
            "acRate": "62.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1106",
            "questionFrontendId": "1036",
            "title": "Escape a Large Maze",
            "titleSlug": "escape-a-large-maze",
            "acRate": "34.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1111",
            "questionFrontendId": "1039",
            "title": "Minimum Score Triangulation of Polygon",
            "titleSlug": "minimum-score-triangulation-of-polygon",
            "acRate": "58.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1116",
            "questionFrontendId": "1161",
            "title": "Maximum Level Sum of a Binary Tree",
            "titleSlug": "maximum-level-sum-of-a-binary-tree",
            "acRate": "67.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1122",
            "questionFrontendId": "1044",
            "title": "Longest Duplicate Substring",
            "titleSlug": "longest-duplicate-substring",
            "acRate": "30.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Suffix Array",
                    "slug": "suffix-array"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1127",
            "questionFrontendId": "1046",
            "title": "Last Stone Weight",
            "titleSlug": "last-stone-weight",
            "acRate": "65.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1128",
            "questionFrontendId": "1047",
            "title": "Remove All Adjacent Duplicates In String",
            "titleSlug": "remove-all-adjacent-duplicates-in-string",
            "acRate": "69.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1129",
            "questionFrontendId": "1048",
            "title": "Longest String Chain",
            "titleSlug": "longest-string-chain",
            "acRate": "61.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1135",
            "questionFrontendId": "1045",
            "title": "Customers Who Bought All Products",
            "titleSlug": "customers-who-bought-all-products",
            "acRate": "61.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1146",
            "questionFrontendId": "1071",
            "title": "Greatest Common Divisor of Strings",
            "titleSlug": "greatest-common-divisor-of-strings",
            "acRate": "51.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1165",
            "questionFrontendId": "1229",
            "title": "Meeting Scheduler",
            "titleSlug": "meeting-scheduler",
            "acRate": "55.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1184",
            "questionFrontendId": "1094",
            "title": "Car Pooling",
            "titleSlug": "car-pooling",
            "acRate": "56.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1185",
            "questionFrontendId": "1095",
            "title": "Find in Mountain Array",
            "titleSlug": "find-in-mountain-array",
            "acRate": "40.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1187",
            "questionFrontendId": "1115",
            "title": "Print FooBar Alternately",
            "titleSlug": "print-foobar-alternately",
            "acRate": "65.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Concurrency",
                    "slug": "concurrency"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1205",
            "questionFrontendId": "1108",
            "title": "Defanging an IP Address",
            "titleSlug": "defanging-an-ip-address",
            "acRate": "88.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1212",
            "questionFrontendId": "1291",
            "title": "Sequential Digits",
            "titleSlug": "sequential-digits",
            "acRate": "65.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1217",
            "questionFrontendId": "1122",
            "title": "Relative Sort Array",
            "titleSlug": "relative-sort-array",
            "acRate": "68.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting Sort",
                    "slug": "counting-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1221",
            "questionFrontendId": "1287",
            "title": "Element Appearing More Than 25% In Sorted Array",
            "titleSlug": "element-appearing-more-than-25-in-sorted-array",
            "acRate": "61.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1224",
            "questionFrontendId": "1289",
            "title": "Minimum Falling Path Sum II",
            "titleSlug": "minimum-falling-path-sum-ii",
            "acRate": "57.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1227",
            "questionFrontendId": "1128",
            "title": "Number of Equivalent Domino Pairs",
            "titleSlug": "number-of-equivalent-domino-pairs",
            "acRate": "48.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1236",
            "questionFrontendId": "1137",
            "title": "N-th Tribonacci Number",
            "titleSlug": "n-th-tribonacci-number",
            "acRate": "63.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1249",
            "questionFrontendId": "1146",
            "title": "Snapshot Array",
            "titleSlug": "snapshot-array",
            "acRate": "37.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1250",
            "questionFrontendId": "1143",
            "title": "Longest Common Subsequence",
            "titleSlug": "longest-common-subsequence",
            "acRate": "57.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1254",
            "questionFrontendId": "1302",
            "title": "Deepest Leaves Sum",
            "titleSlug": "deepest-leaves-sum",
            "acRate": "86.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1258",
            "questionFrontendId": "1148",
            "title": "Article Views I",
            "titleSlug": "article-views-i",
            "acRate": "74.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1263",
            "questionFrontendId": "1155",
            "title": "Number of Dice Rolls With Target Sum",
            "titleSlug": "number-of-dice-rolls-with-target-sum",
            "acRate": "60.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1279",
            "questionFrontendId": "1175",
            "title": "Prime Arrangements",
            "titleSlug": "prime-arrangements",
            "acRate": "56.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1283",
            "questionFrontendId": "1507",
            "title": "Reformat Date",
            "titleSlug": "reformat-date",
            "acRate": "65.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1292",
            "questionFrontendId": "1174",
            "title": "Immediate Food Delivery II",
            "titleSlug": "immediate-food-delivery-ii",
            "acRate": "51.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1294",
            "questionFrontendId": "2080",
            "title": "Range Frequency Queries",
            "titleSlug": "range-frequency-queries",
            "acRate": "39.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1319",
            "questionFrontendId": "1207",
            "title": "Unique Number of Occurrences",
            "titleSlug": "unique-number-of-occurrences",
            "acRate": "77.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1320",
            "questionFrontendId": "1209",
            "title": "Remove All Adjacent Duplicates in String II",
            "titleSlug": "remove-all-adjacent-duplicates-in-string-ii",
            "acRate": "57.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1331",
            "questionFrontendId": "1219",
            "title": "Path with Maximum Gold",
            "titleSlug": "path-with-maximum-gold",
            "acRate": "63.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1340",
            "questionFrontendId": "1226",
            "title": "The Dining Philosophers",
            "titleSlug": "the-dining-philosophers",
            "acRate": "54.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Concurrency",
                    "slug": "concurrency"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1348",
            "questionFrontendId": "2321",
            "title": "Maximum Score Of Spliced Array",
            "titleSlug": "maximum-score-of-spliced-array",
            "acRate": "56.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1349",
            "questionFrontendId": "1232",
            "title": "Check If It Is a Straight Line",
            "titleSlug": "check-if-it-is-a-straight-line",
            "acRate": "39.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1352",
            "questionFrontendId": "1235",
            "title": "Maximum Profit in Job Scheduling",
            "titleSlug": "maximum-profit-in-job-scheduling",
            "acRate": "54.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1356",
            "questionFrontendId": "2193",
            "title": "Minimum Number of Moves to Make Palindrome",
            "titleSlug": "minimum-number-of-moves-to-make-palindrome",
            "acRate": "51.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1390",
            "questionFrontendId": "1251",
            "title": "Average Selling Price",
            "titleSlug": "average-selling-price",
            "acRate": "43.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1397",
            "questionFrontendId": "1268",
            "title": "Search Suggestions System",
            "titleSlug": "search-suggestions-system",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1400",
            "questionFrontendId": "1275",
            "title": "Find Winner on a Tic Tac Toe Game",
            "titleSlug": "find-winner-on-a-tic-tac-toe-game",
            "acRate": "54.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1406",
            "questionFrontendId": "1281",
            "title": "Subtract the Product and Sum of Digits of an Integer",
            "titleSlug": "subtract-the-product-and-sum-of-digits-of-an-integer",
            "acRate": "86.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1407",
            "questionFrontendId": "1282",
            "title": "Group the People Given the Group Size They Belong To",
            "titleSlug": "group-the-people-given-the-group-size-they-belong-to",
            "acRate": "87.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1408",
            "questionFrontendId": "1283",
            "title": "Find the Smallest Divisor Given a Threshold",
            "titleSlug": "find-the-smallest-divisor-given-a-threshold",
            "acRate": "59.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1414",
            "questionFrontendId": "1293",
            "title": "Shortest Path in a Grid with Obstacles Elimination",
            "titleSlug": "shortest-path-in-a-grid-with-obstacles-elimination",
            "acRate": "45.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1418",
            "questionFrontendId": "2305",
            "title": "Fair Distribution of Cookies",
            "titleSlug": "fair-distribution-of-cookies",
            "acRate": "69.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1444",
            "questionFrontendId": "1342",
            "title": "Number of Steps to Reduce a Number to Zero",
            "titleSlug": "number-of-steps-to-reduce-a-number-to-zero",
            "acRate": "85.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1446",
            "questionFrontendId": "1344",
            "title": "Angle Between Hands of a Clock",
            "titleSlug": "angle-between-hands-of-a-clock",
            "acRate": "63.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1461",
            "questionFrontendId": "1359",
            "title": "Count All Valid Pickup and Delivery Options",
            "titleSlug": "count-all-valid-pickup-and-delivery-options",
            "acRate": "65.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1463",
            "questionFrontendId": "1337",
            "title": "The K Weakest Rows in a Matrix",
            "titleSlug": "the-k-weakest-rows-in-a-matrix",
            "acRate": "73.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1469",
            "questionFrontendId": "1347",
            "title": "Minimum Number of Steps to Make Two Strings Anagram",
            "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram",
            "acRate": "82.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1476",
            "questionFrontendId": "1351",
            "title": "Count Negative Numbers in a Sorted Matrix",
            "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
            "acRate": "77.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1477",
            "questionFrontendId": "1352",
            "title": "Product of the Last K Numbers",
            "titleSlug": "product-of-the-last-k-numbers",
            "acRate": "50.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1478",
            "questionFrontendId": "1353",
            "title": "Maximum Number of Events That Can Be Attended",
            "titleSlug": "maximum-number-of-events-that-can-be-attended",
            "acRate": "32.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1482",
            "questionFrontendId": "1365",
            "title": "How Many Numbers Are Smaller Than the Current Number",
            "titleSlug": "how-many-numbers-are-smaller-than-the-current-number",
            "acRate": "86.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1489",
            "questionFrontendId": "1388",
            "title": "Pizza With 3n Slices",
            "titleSlug": "pizza-with-3n-slices",
            "acRate": "51.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1503",
            "questionFrontendId": "1402",
            "title": "Reducing Dishes",
            "titleSlug": "reducing-dishes",
            "acRate": "76.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1510",
            "questionFrontendId": "1394",
            "title": "Find Lucky Integer in an Array",
            "titleSlug": "find-lucky-integer-in-an-array",
            "acRate": "66.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1512",
            "questionFrontendId": "1396",
            "title": "Design Underground System",
            "titleSlug": "design-underground-system",
            "acRate": "74.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1528",
            "questionFrontendId": "1431",
            "title": "Kids With the Greatest Number of Candies",
            "titleSlug": "kids-with-the-greatest-number-of-candies",
            "acRate": "87.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1547",
            "questionFrontendId": "1436",
            "title": "Destination City",
            "titleSlug": "destination-city",
            "acRate": "79.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1567",
            "questionFrontendId": "1456",
            "title": "Maximum Number of Vowels in a Substring of Given Length",
            "titleSlug": "maximum-number-of-vowels-in-a-substring-of-given-length",
            "acRate": "58.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1580",
            "questionFrontendId": "1470",
            "title": "Shuffle the Array",
            "titleSlug": "shuffle-the-array",
            "acRate": "88.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1582",
            "questionFrontendId": "1472",
            "title": "Design Browser History",
            "titleSlug": "design-browser-history",
            "acRate": "77.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1585",
            "questionFrontendId": "1492",
            "title": "The kth Factor of n",
            "titleSlug": "the-kth-factor-of-n",
            "acRate": "66.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1586",
            "questionFrontendId": "1493",
            "title": "Longest Subarray of 1's After Deleting One Element",
            "titleSlug": "longest-subarray-of-1s-after-deleting-one-element",
            "acRate": "67.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1603",
            "questionFrontendId": "1480",
            "title": "Running Sum of 1d Array",
            "titleSlug": "running-sum-of-1d-array",
            "acRate": "86.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1604",
            "questionFrontendId": "1481",
            "title": "Least Number of Unique Integers after K Removals",
            "titleSlug": "least-number-of-unique-integers-after-k-removals",
            "acRate": "62.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1630",
            "questionFrontendId": "1523",
            "title": "Count Odd Numbers in an Interval Range",
            "titleSlug": "count-odd-numbers-in-an-interval-range",
            "acRate": "49.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1635",
            "questionFrontendId": "1512",
            "title": "Number of Good Pairs",
            "titleSlug": "number-of-good-pairs",
            "acRate": "88.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1653",
            "questionFrontendId": "1530",
            "title": "Number of Good Leaf Nodes Pairs",
            "titleSlug": "number-of-good-leaf-nodes-pairs",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1669",
            "questionFrontendId": "1547",
            "title": "Minimum Cost to Cut a Stick",
            "titleSlug": "minimum-cost-to-cut-a-stick",
            "acRate": "61.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1677",
            "questionFrontendId": "1572",
            "title": "Matrix Diagonal Sum",
            "titleSlug": "matrix-diagonal-sum",
            "acRate": "82.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1706",
            "questionFrontendId": "1584",
            "title": "Min Cost to Connect All Points",
            "titleSlug": "min-cost-to-connect-all-points",
            "acRate": "66.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Minimum Spanning Tree",
                    "slug": "minimum-spanning-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1713",
            "questionFrontendId": "1570",
            "title": "Dot Product of Two Sparse Vectors",
            "titleSlug": "dot-product-of-two-sparse-vectors",
            "acRate": "89.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1724",
            "questionFrontendId": "1581",
            "title": "Customer Who Visited but Did Not Make Any Transactions",
            "titleSlug": "customer-who-visited-but-did-not-make-any-transactions",
            "acRate": "69.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1738",
            "questionFrontendId": "1615",
            "title": "Maximal Network Rank",
            "titleSlug": "maximal-network-rank",
            "acRate": "65.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1741",
            "questionFrontendId": "1636",
            "title": "Sort Array by Increasing Frequency",
            "titleSlug": "sort-array-by-increasing-frequency",
            "acRate": "71.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1746",
            "questionFrontendId": "1624",
            "title": "Largest Substring Between Two Equal Characters",
            "titleSlug": "largest-substring-between-two-equal-characters",
            "acRate": "68.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1748",
            "questionFrontendId": "1626",
            "title": "Best Team With No Conflicts",
            "titleSlug": "best-team-with-no-conflicts",
            "acRate": "50.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1761",
            "questionFrontendId": "1641",
            "title": "Count Sorted Vowel Strings",
            "titleSlug": "count-sorted-vowel-strings",
            "acRate": "78.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1762",
            "questionFrontendId": "1642",
            "title": "Furthest Building You Can Reach",
            "titleSlug": "furthest-building-you-can-reach",
            "acRate": "49.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1766",
            "questionFrontendId": "1671",
            "title": "Minimum Number of Removals to Make Mountain Array",
            "titleSlug": "minimum-number-of-removals-to-make-mountain-array",
            "acRate": "41.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1776",
            "questionFrontendId": "1658",
            "title": "Minimum Operations to Reduce X to Zero",
            "titleSlug": "minimum-operations-to-reduce-x-to-zero",
            "acRate": "39.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1781",
            "questionFrontendId": "1662",
            "title": "Check If Two String Arrays are Equivalent",
            "titleSlug": "check-if-two-string-arrays-are-equivalent",
            "acRate": "85.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1791",
            "questionFrontendId": "1672",
            "title": "Richest Customer Wealth",
            "titleSlug": "richest-customer-wealth",
            "acRate": "87.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1794",
            "questionFrontendId": "1675",
            "title": "Minimize Deviation in Array",
            "titleSlug": "minimize-deviation-in-array",
            "acRate": "54.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1798",
            "questionFrontendId": "1679",
            "title": "Max Number of K-Sum Pairs",
            "titleSlug": "max-number-of-k-sum-pairs",
            "acRate": "55.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1801",
            "questionFrontendId": "1661",
            "title": "Average Time of Process per Machine",
            "titleSlug": "average-time-of-process-per-machine",
            "acRate": "66.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1807",
            "questionFrontendId": "1689",
            "title": "Partitioning Into Minimum Number Of Deci-Binary Numbers",
            "titleSlug": "partitioning-into-minimum-number-of-deci-binary-numbers",
            "acRate": "88.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1814",
            "questionFrontendId": "1696",
            "title": "Jump Game VI",
            "titleSlug": "jump-game-vi",
            "acRate": "45.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1829",
            "questionFrontendId": "1710",
            "title": "Maximum Units on a Truck",
            "titleSlug": "maximum-units-on-a-truck",
            "acRate": "73.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1833",
            "questionFrontendId": "1732",
            "title": "Find the Highest Altitude",
            "titleSlug": "find-the-highest-altitude",
            "acRate": "82.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1894",
            "questionFrontendId": "1768",
            "title": "Merge Strings Alternately",
            "titleSlug": "merge-strings-alternately",
            "acRate": "79.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1896",
            "questionFrontendId": "1770",
            "title": "Maximum Score from Performing Multiplication Operations",
            "titleSlug": "maximum-score-from-performing-multiplication-operations",
            "acRate": "39.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1899",
            "questionFrontendId": "1773",
            "title": "Count Items Matching a Rule",
            "titleSlug": "count-items-matching-a-rule",
            "acRate": "84.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1900",
            "questionFrontendId": "1774",
            "title": "Closest Dessert Cost",
            "titleSlug": "closest-dessert-cost",
            "acRate": "47.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1908",
            "questionFrontendId": "1757",
            "title": "Recyclable and Low Fat Products",
            "titleSlug": "recyclable-and-low-fat-products",
            "acRate": "89.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1918",
            "questionFrontendId": "1793",
            "title": "Maximum Score of a Good Subarray",
            "titleSlug": "maximum-score-of-a-good-subarray",
            "acRate": "64.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1929",
            "questionFrontendId": "1802",
            "title": "Maximum Value at a Given Index in a Bounded Array",
            "titleSlug": "maximum-value-at-a-given-index-in-a-bounded-array",
            "acRate": "39.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1948",
            "questionFrontendId": "1795",
            "title": "Rearrange Products Table",
            "titleSlug": "rearrange-products-table",
            "acRate": "85.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1960",
            "questionFrontendId": "1832",
            "title": "Check if the Sentence Is Pangram",
            "titleSlug": "check-if-the-sentence-is-pangram",
            "acRate": "83.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1966",
            "questionFrontendId": "1838",
            "title": "Frequency of the Most Frequent Element",
            "titleSlug": "frequency-of-the-most-frequent-element",
            "acRate": "45.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1983",
            "questionFrontendId": "1854",
            "title": "Maximum Population Year",
            "titleSlug": "maximum-population-year",
            "acRate": "60.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2024",
            "questionFrontendId": "1873",
            "title": "Calculate Special Bonus",
            "titleSlug": "calculate-special-bonus",
            "acRate": "57.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2028",
            "questionFrontendId": "1900",
            "title": "The Earliest and Latest Rounds Where Players Compete",
            "titleSlug": "the-earliest-and-latest-rounds-where-players-compete",
            "acRate": "50.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2042",
            "questionFrontendId": "1913",
            "title": "Maximum Product Difference Between Two Pairs",
            "titleSlug": "maximum-product-difference-between-two-pairs",
            "acRate": "82.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2048",
            "questionFrontendId": "1920",
            "title": "Build Array from Permutation",
            "titleSlug": "build-array-from-permutation",
            "acRate": "89.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2058",
            "questionFrontendId": "1929",
            "title": "Concatenation of Array",
            "titleSlug": "concatenation-of-array",
            "acRate": "89.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2095",
            "questionFrontendId": "1963",
            "title": "Minimum Number of Swaps to Make the String Balanced",
            "titleSlug": "minimum-number-of-swaps-to-make-the-string-balanced",
            "acRate": "71.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2101",
            "questionFrontendId": "1970",
            "title": "Last Day Where You Can Still Cross",
            "titleSlug": "last-day-where-you-can-still-cross",
            "acRate": "62.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2118",
            "questionFrontendId": "2008",
            "title": "Maximum Earnings From Taxi",
            "titleSlug": "maximum-earnings-from-taxi",
            "acRate": "44.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2119",
            "questionFrontendId": "2009",
            "title": "Minimum Number of Operations to Make Array Continuous",
            "titleSlug": "minimum-number-of-operations-to-make-array-continuous",
            "acRate": "53.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2133",
            "questionFrontendId": "2023",
            "title": "Number of Pairs of Strings With Concatenation Equal to Target",
            "titleSlug": "number-of-pairs-of-strings-with-concatenation-equal-to-target",
            "acRate": "74.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2137",
            "questionFrontendId": "2011",
            "title": "Final Value of Variable After Performing Operations",
            "titleSlug": "final-value-of-variable-after-performing-operations",
            "acRate": "88.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2152",
            "questionFrontendId": "2004",
            "title": "The Number of Seniors and Juniors to Join the Company",
            "titleSlug": "the-number-of-seniors-and-juniors-to-join-the-company",
            "acRate": "42.1%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "2162",
            "questionFrontendId": "2035",
            "title": "Partition Array Into Two Arrays to Minimize Sum Difference",
            "titleSlug": "partition-array-into-two-arrays-to-minimize-sum-difference",
            "acRate": "20.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2205",
            "questionFrontendId": "2100",
            "title": "Find Good Days to Rob the Bank",
            "titleSlug": "find-good-days-to-rob-the-bank",
            "acRate": "49.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2210",
            "questionFrontendId": "2089",
            "title": "Find Target Indices After Sorting Array",
            "titleSlug": "find-target-indices-after-sorting-array",
            "acRate": "76.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2219",
            "questionFrontendId": "2114",
            "title": "Maximum Number of Words Found in Sentences",
            "titleSlug": "maximum-number-of-words-found-in-sentences",
            "acRate": "86.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2227",
            "questionFrontendId": "2104",
            "title": "Sum of Subarray Ranges",
            "titleSlug": "sum-of-subarray-ranges",
            "acRate": "61.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2237",
            "questionFrontendId": "2131",
            "title": "Longest Palindrome by Concatenating Two Letter Words",
            "titleSlug": "longest-palindrome-by-concatenating-two-letter-words",
            "acRate": "48.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2264",
            "questionFrontendId": "2160",
            "title": "Minimum Sum of Four Digit Number After Splitting Digits",
            "titleSlug": "minimum-sum-of-four-digit-number-after-splitting-digits",
            "acRate": "86.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2265",
            "questionFrontendId": "2161",
            "title": "Partition Array According to Given Pivot",
            "titleSlug": "partition-array-according-to-given-pivot",
            "acRate": "84.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2271",
            "questionFrontendId": "2149",
            "title": "Rearrange Array Elements by Sign",
            "titleSlug": "rearrange-array-elements-by-sign",
            "acRate": "83.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2294",
            "questionFrontendId": "2187",
            "title": "Minimum Time to Complete Trips",
            "titleSlug": "minimum-time-to-complete-trips",
            "acRate": "38.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2337",
            "questionFrontendId": "2259",
            "title": "Remove Digit From Number to Maximize Result",
            "titleSlug": "remove-digit-from-number-to-maximize-result",
            "acRate": "44.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2368",
            "questionFrontendId": "2281",
            "title": "Sum of Total Strength of Wizards",
            "titleSlug": "sum-of-total-strength-of-wizards",
            "acRate": "27.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2383",
            "questionFrontendId": "2235",
            "title": "Add Two Integers",
            "titleSlug": "add-two-integers",
            "acRate": "87.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2384",
            "questionFrontendId": "2236",
            "title": "Root Equals Sum of Children",
            "titleSlug": "root-equals-sum-of-children",
            "acRate": "84.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2416",
            "questionFrontendId": "2331",
            "title": "Evaluate Boolean Binary Tree",
            "titleSlug": "evaluate-boolean-binary-tree",
            "acRate": "77.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2428",
            "questionFrontendId": "2352",
            "title": "Equal Row and Column Pairs",
            "titleSlug": "equal-row-and-column-pairs",
            "acRate": "70.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2449",
            "questionFrontendId": "2398",
            "title": "Maximum Number of Robots Within Budget",
            "titleSlug": "maximum-number-of-robots-within-budget",
            "acRate": "34.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2461",
            "questionFrontendId": "2385",
            "title": "Amount of Time for Binary Tree to Be Infected",
            "titleSlug": "amount-of-time-for-binary-tree-to-be-infected",
            "acRate": "63.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2472",
            "questionFrontendId": "2392",
            "title": "Build a Matrix With Conditions",
            "titleSlug": "build-a-matrix-with-conditions",
            "acRate": "61.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2482",
            "questionFrontendId": "2397",
            "title": "Maximum Rows Covered by Columns",
            "titleSlug": "maximum-rows-covered-by-columns",
            "acRate": "54.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2491",
            "questionFrontendId": "2413",
            "title": "Smallest Even Multiple",
            "titleSlug": "smallest-even-multiple",
            "acRate": "87.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2502",
            "questionFrontendId": "2418",
            "title": "Sort the People",
            "titleSlug": "sort-the-people",
            "acRate": "79.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2526",
            "questionFrontendId": "2407",
            "title": "Longest Increasing Subsequence II",
            "titleSlug": "longest-increasing-subsequence-ii",
            "acRate": "22.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2571",
            "questionFrontendId": "2485",
            "title": "Find the Pivot Integer",
            "titleSlug": "find-the-pivot-integer",
            "acRate": "80.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2634",
            "questionFrontendId": "2540",
            "title": "Minimum Common Value",
            "titleSlug": "minimum-common-value",
            "acRate": "50.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2720",
            "questionFrontendId": "2616",
            "title": "Minimize the Maximum Difference of Pairs",
            "titleSlug": "minimize-the-maximum-difference-of-pairs",
            "acRate": "43.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2724",
            "questionFrontendId": "2610",
            "title": "Convert an Array Into a 2D Array With Conditions",
            "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
            "acRate": "87.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2731",
            "questionFrontendId": "2623",
            "title": "Memoize",
            "titleSlug": "memoize",
            "acRate": "62.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2732",
            "questionFrontendId": "2620",
            "title": "Counter",
            "titleSlug": "counter",
            "acRate": "80.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2733",
            "questionFrontendId": "2621",
            "title": "Sleep",
            "titleSlug": "sleep",
            "acRate": "86.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2734",
            "questionFrontendId": "2619",
            "title": "Array Prototype Last",
            "titleSlug": "array-prototype-last",
            "acRate": "72.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2747",
            "questionFrontendId": "2635",
            "title": "Apply Transform Over Each Element in Array",
            "titleSlug": "apply-transform-over-each-element-in-array",
            "acRate": "85.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2808",
            "questionFrontendId": "2742",
            "title": "Painting the Walls",
            "titleSlug": "painting-the-walls",
            "acRate": "51.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2809",
            "questionFrontendId": "2667",
            "title": "Create Hello World Function",
            "titleSlug": "create-hello-world-function",
            "acRate": "80.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2857",
            "questionFrontendId": "2739",
            "title": "Total Distance Traveled",
            "titleSlug": "total-distance-traveled",
            "acRate": "38.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2858",
            "questionFrontendId": "2722",
            "title": "Join Two Arrays by ID",
            "titleSlug": "join-two-arrays-by-id",
            "acRate": "53.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3017",
            "questionFrontendId": "2827",
            "title": "Number of Beautiful Integers in the Range",
            "titleSlug": "number-of-beautiful-integers-in-the-range",
            "acRate": "17.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3062",
            "questionFrontendId": "2877",
            "title": "Create a DataFrame from List",
            "titleSlug": "create-a-dataframe-from-list",
            "acRate": "80.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "3094",
            "questionFrontendId": "2870",
            "title": "Minimum Number of Operations to Make Array Empty",
            "titleSlug": "minimum-number-of-operations-to-make-array-empty",
            "acRate": "61.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3248",
            "questionFrontendId": "2972",
            "title": "Count the Number of Incremovable Subarrays II",
            "titleSlug": "count-the-number-of-incremovable-subarrays-ii",
            "acRate": "38.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3252",
            "questionFrontendId": "2970",
            "title": "Count the Number of Incremovable Subarrays I",
            "titleSlug": "count-the-number-of-incremovable-subarrays-i",
            "acRate": "49.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3272",
            "questionFrontendId": "3030",
            "title": "Find the Grid of Region Average",
            "titleSlug": "find-the-grid-of-region-average",
            "acRate": "43.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3312",
            "questionFrontendId": "3019",
            "title": "Number of Changing Keys",
            "titleSlug": "number-of-changing-keys",
            "acRate": "79.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3318",
            "questionFrontendId": "3040",
            "title": "Maximum Number of Operations With the Same Score II",
            "titleSlug": "maximum-number-of-operations-with-the-same-score-ii",
            "acRate": "30.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        }
    ],
    "frequencies": "{\"206\": [6, 14, 25, 143, 0.10050292165038122, 0.4546514364811861, 1.042230976279002, 4.111788204949235, 1], \"8\": [2, 6, 12, 83, 0.02168106606132404, 0.18003584151309865, 0.5816797756939396, 3.657077727438008, 1], \"237\": [0, 2, 4, 31, 0, 0.04495138786226632, 0.16882086957505205, 2.4887307462264037, 2], \"34\": [3, 5, 11, 55, 0.046091107200267, 0.12312629380984814, 0.49113619760949, 2.8246056802961252, 1], \"33\": [5, 12, 20, 106, 0.08883678782708922, 0.4286066366698587, 0.9108504680559111, 3.755462636571931, 1], \"23\": [6, 9, 19, 88, 0.21680203373908488, 0.43484325622894315, 1.2318914638798866, 3.9717627071581174, 1], \"283\": [5, 12, 16, 78, 0.08476776738106184, 0.41181433578682314, 0.6449407101270714, 3.1147883838571726, 1], \"2\": [15, 23, 51, 328, 0.43720872882434714, 0.8282463175523294, 1.9932385587432553, 5.4135037461182485, 1], \"53\": [7, 12, 32, 213, 0.1463548980202769, 0.3806062975112503, 1.4571403445969786, 4.946999639724556, 1], \"21\": [5, 12, 26, 118, 0.06465539915879236, 0.3254966102852776, 1.0317735017183465, 3.642838313151814, 1], \"225\": [2, 2, 3, 10, 0.06271647386762642, 0.06271647386762642, 0.135955636236029, 0.9624576401607463, 1], \"344\": [4, 7, 15, 70, 0.10291851200227456, 0.28666529554669407, 0.925999546001116, 3.5321622496123832, 1], \"346\": [0, 0, 3, 14, 0, 0, 0.245122458032985, 1.9529400549835714, 3], \"125\": [3, 5, 14, 77, 0.024417925045724403, 0.06640782480912012, 0.43068678403439886, 2.8497805188914658, 1], \"43\": [2, 2, 2, 31, 0.04927104900678274, 0.04927104900678274, 0.04927104900678274, 2.575191982518592, 1], \"1\": [34, 69, 142, 1068, 0.6375850448294251, 1.3508706457418156, 2.4097453883910314, 5.881032278200132, 1], \"352\": [0, 0, 2, 9, 0, 0, 0.38946476676172326, 2.3648889763302003, 3], \"186\": [0, 1, 2, 9, 0, 0, 0.4795730802618863, 2.5998366164619773, 3], \"20\": [10, 22, 33, 164, 0.17015985419861304, 0.6406914304272713, 1.1052678872798458, 3.9296774120078513, 1], \"238\": [8, 14, 24, 131, 0.18539343040283635, 0.48477307988619023, 1.0414164307602332, 4.0185082861363135, 1], \"236\": [1, 1, 3, 40, 0, 0, 0.06684001812585041, 2.586920557971805, 3], \"383\": [0, 1, 8, 17, 0, 0, 0.39383412996130407, 1.1567199194753903, 3], \"59\": [0, 0, 4, 24, 0, 0, 0.37827896780400755, 2.865152186564049, 3], \"800\": [1, 2, 3, 10, 0, 0.462623521948113, 0.8430873278508602, 2.7540353143440335, 2], \"463\": [0, 5, 9, 30, 0, 0.6813592248079031, 1.4264911602462274, 3.58784982439395, 2], \"322\": [3, 7, 18, 71, 0.058344477729916244, 0.2829982231393545, 1.151484220641566, 3.545342035779956, 1], \"54\": [8, 11, 23, 147, 0.3828597229337993, 0.6322947631207573, 1.5801502104677945, 5.0228118949209595, 1], \"25\": [2, 3, 8, 38, 0.044255009004040724, 0.09695424100489167, 0.5446366736089481, 2.852718443182896, 1], \"139\": [2, 6, 15, 77, 0.03436764350420778, 0.27359733257004193, 1.0874782738544284, 3.9670209675138466, 1], \"49\": [10, 14, 31, 111, 0.3131906492925993, 0.5428202462337456, 1.511690045236082, 3.8354540904163335, 1], \"146\": [19, 25, 61, 264, 1.0978057830573213, 1.4353202011353994, 2.625156493252585, 5.751479041861842, 1], \"101\": [4, 6, 10, 48, 0.09352605801082346, 0.19933290262049122, 0.47793775692115553, 2.7158627408390035, 1], \"415\": [0, 0, 5, 27, 0, 0, 0.38282263135840455, 2.6810726416995556, 3], \"35\": [3, 5, 18, 56, 0.028710105882431374, 0.07779971607895494, 0.7171291452464307, 2.4113379065500133, 1], \"545\": [3, 3, 4, 15, 0.8393692410231736, 0.8690378470236095, 1.241713132308783, 3.5727776966246974, 1], \"56\": [9, 16, 40, 174, 0.34441738495264856, 0.8326883967450455, 2.2063508056584102, 4.998449897497949, 1], \"55\": [2, 3, 9, 43, 0.01691372244206185, 0.03766135463631043, 0.2967030940949338, 2.184348862976174, 1], \"141\": [1, 2, 9, 51, 0, 0.01375064636149823, 0.24715209136621874, 2.302896570959498, 2], \"341\": [4, 5, 9, 66, 0.680877087968131, 0.925999546001116, 1.7815448758183368, 5.426344620220133, 1], \"486\": [0, 1, 3, 15, 0, 0, 0.3314690992306049, 2.381888528480951, 3], \"329\": [3, 5, 6, 37, 0.29528667183700025, 0.669980121278411, 0.8645955889780826, 3.975033642387664, 1], \"200\": [3, 7, 28, 167, 0.04900272661044917, 0.24171993688714516, 1.6817585740137266, 5.010947342961818, 1], \"121\": [9, 19, 39, 185, 0.13966539087290322, 0.5116395041705041, 1.3388310365166485, 4.164068312205707, 1], \"32\": [0, 4, 6, 32, 0, 0.17686534440979026, 0.3613796995859767, 2.593918291241094, 2], \"348\": [0, 1, 6, 40, 0, 0, 1.38007672450902, 4.849144804882882, 3], \"387\": [5, 6, 9, 58, 0.28276805764935187, 0.3856624808119847, 0.7221347174331976, 3.8060813478100446, 1], \"138\": [2, 7, 11, 39, 0.04505266394094313, 0.4475765934582913, 0.8729694569988224, 2.919015442227556, 1], \"295\": [1, 5, 15, 77, 0, 0.31508104663989533, 1.4663370687934272, 4.486803646793292, 2], \"162\": [1, 7, 10, 43, 0, 0.23541892888532023, 0.4328933635870002, 2.3993715783664378, 2], \"10\": [5, 5, 7, 55, 0.24155230072427963, 0.24155230072427963, 0.4288685164923248, 3.52812688396743, 1], \"211\": [0, 1, 3, 20, 0, 0, 0.17904823144898546, 2.2736295945669314, 3], \"315\": [2, 3, 6, 30, 0.22695792338968046, 0.45314253127966914, 1.191797069160121, 4.066028087759424, 1], \"165\": [1, 2, 3, 14, 0, 0.23499359123170555, 0.4675170966757307, 2.6376372110333963, 2], \"142\": [1, 1, 2, 21, 0, 0, 0.040821994520255124, 1.7216499030410284, 3], \"50\": [3, 7, 16, 56, 0.04304825356851367, 0.21470136904554477, 0.8114731338690587, 2.792848857038321, 1], \"120\": [1, 3, 8, 25, 0, 0.14878873668587292, 0.7611889165572873, 2.496573325718622, 2], \"190\": [4, 5, 8, 38, 0.22760642132910802, 0.3360157198362929, 0.7042672316040229, 3.1808454572855416, 1], \"311\": [0, 0, 2, 34, 0, 0, 0.6690496289808848, 5.461821776373247, 3], \"230\": [2, 3, 5, 20, 0.03451593709018879, 0.07605014611885268, 0.19843337930716162, 1.5067078235450475, 1], \"204\": [2, 3, 3, 54, 0.06351340572232586, 0.13762137787604775, 0.13762137787604775, 3.8877974968424653, 1], \"51\": [2, 2, 5, 31, 0.058155920157074034, 0.058155920157074034, 0.31790921708384473, 2.7334727940155292, 1], \"4\": [14, 20, 44, 240, 0.5686741732514908, 0.9412215951339467, 2.143417931036403, 5.283950509779959, 1], \"11\": [6, 11, 22, 98, 0.09635691268943879, 0.2926570327880317, 0.8586330446154344, 3.3316725178514517, 1], \"632\": [2, 2, 3, 9, 0.37827896780400755, 0.37827896780400755, 0.7102416139192455, 2.3331477434042123, 1], \"38\": [2, 6, 9, 40, 0.05901417143705527, 0.43639026578515083, 0.8024512778491436, 3.2314409291699686, 1], \"114\": [0, 1, 3, 15, 0, 0, 0.12819804664916004, 1.4860159073280927, 3], \"78\": [5, 8, 11, 35, 0.15143748173677285, 0.34965230489781207, 0.5829789633340159, 2.198531767064841, 1], \"202\": [2, 7, 13, 82, 0.033060862260888106, 0.34484048629172953, 0.8838369870244166, 4.051858017840968, 1], \"151\": [2, 5, 12, 47, 0.018018505502678313, 0.10763066419236544, 0.5035263212843791, 2.4016073826498108, 1], \"169\": [7, 11, 15, 59, 0.1234891852332381, 0.281088494099643, 0.47221416703840136, 2.3357728706803655, 1], \"279\": [4, 5, 9, 41, 0.3963047387095001, 0.5652447268076234, 1.2418482126818102, 3.9530540966272003, 1], \"541\": [0, 0, 3, 10, 0, 0, 0.38441169891033206, 1.8258924755975134, 3], \"88\": [13, 22, 29, 103, 0.2971052925690822, 0.688530604009764, 1.001218739200237, 3.123135665225353, 1], \"349\": [5, 5, 10, 50, 0.2873491275510859, 0.2873491275510859, 0.8465366805217172, 3.5348230885251466, 1], \"84\": [3, 5, 9, 34, 0.09313862629081703, 0.2399217465803641, 0.6304868655657867, 2.6054976619373944, 1], \"191\": [0, 3, 5, 41, 0, 0.08601287466004025, 0.22274427001523373, 2.877874384796783, 2], \"140\": [1, 2, 11, 46, 0, 0.1529693447814272, 1.791759469228055, 4.48230192843026, 2], \"98\": [5, 7, 12, 45, 0.12258225849071455, 0.22761969473742746, 0.5602862539343905, 2.447843232411113, 1], \"218\": [0, 0, 2, 33, 0, 0, 0.34228620648663277, 4.719591568544592, 3], \"13\": [7, 30, 71, 237, 0.12899033052196845, 1.260957933507934, 2.346812513769024, 5.024844037103379, 1], \"460\": [2, 3, 5, 17, 0.25452986513488046, 0.5020919437972361, 1.0337516544660688, 3.0884039294001346, 1], \"36\": [5, 13, 31, 90, 0.1462883646887166, 0.7250829281724055, 1.953800443733788, 3.95200684160845, 1], \"45\": [6, 6, 9, 49, 0.19478832555908462, 0.19478832555908462, 0.39465419200394874, 2.7306522578645183, 1], \"118\": [7, 10, 15, 60, 0.3161058258896693, 0.5645893088372445, 0.9958897786374474, 3.343360347894742, 1], \"284\": [0, 0, 5, 45, 0, 0, 1.6696567724271552, 5.591375012711537, 3], \"242\": [11, 12, 20, 68, 0.27971496975322185, 0.3250518626318276, 0.7260746650280382, 2.5903138434708213, 1], \"450\": [1, 3, 5, 14, 0, 0.1333332747437359, 0.33375176339496637, 1.4124933180208967, 2], \"26\": [7, 13, 25, 77, 0.08489944378648624, 0.2666671373704914, 0.7562153626891972, 2.461426382179158, 1], \"19\": [5, 8, 17, 51, 0.10456654975664978, 0.2485671738057673, 0.8216505215936474, 2.5231857313041433, 1], \"412\": [3, 4, 7, 52, 0.10711776476069794, 0.18315872720701828, 0.47969271895318166, 3.5544862401203576, 1], \"15\": [13, 26, 48, 196, 0.342952559874971, 0.9694172516789219, 1.8836307196462938, 4.543235550099192, 1], \"6\": [2, 5, 9, 33, 0.031548357734925946, 0.18258861514779182, 0.5001923674646219, 2.2747987574664275, 1], \"103\": [0, 0, 3, 29, 0, 0, 0.07689525382647662, 2.136402580605495, 3], \"217\": [8, 15, 34, 80, 0.1506958168581181, 0.45221612397508465, 1.370606509370345, 2.8486404838069204, 1], \"812\": [3, 8, 10, 29, 0.21056476910734964, 0.9808292530117262, 1.282090583589888, 3.1311823971530286, 1], \"7\": [6, 12, 24, 159, 0.11261887810814913, 0.38989193464519445, 1.067219576260247, 4.439256330005621, 1], \"17\": [4, 12, 23, 89, 0.08811420369390927, 0.6037778680284112, 1.3976003849510927, 3.8416351322644138, 1], \"402\": [1, 2, 2, 9, 0, 0.12963106265293975, 0.12963106265293975, 1.3357292662911893, 2], \"3\": [18, 33, 56, 220, 0.4700036292457356, 1.104152469043725, 1.9180113439172577, 4.506781197438342, 1], \"801\": [0, 1, 4, 12, 0, 0, 0.3095500590883616, 1.4505139538541845, 3], \"68\": [0, 1, 4, 22, 0, 0, 0.36602337605686763, 2.665154234182826, 3], \"733\": [2, 6, 8, 32, 0.06412452816953867, 0.4675170966757307, 0.7225130753643099, 2.8877930126837414, 1], \"70\": [10, 13, 20, 85, 0.2809288634334254, 0.43707188911974626, 0.8317943978674722, 3.1960151369116123, 1], \"102\": [2, 3, 4, 42, 0.019980684690483426, 0.04440788848944038, 0.07763353611776078, 2.2925449498334025, 1], \"149\": [0, 2, 9, 40, 0, 0.1629613095094132, 1.5225874235471424, 4.273835173682724, 2], \"174\": [0, 0, 3, 8, 0, 0, 0.4964368863138911, 1.717651497074333, 3], \"104\": [1, 4, 10, 45, 0, 0.05347080517105005, 0.29512086525097786, 2.073372700017491, 2], \"268\": [2, 2, 3, 37, 0.01900294712561538, 0.01900294712561538, 0.04225980928988265, 2.023657553176512, 1], \"300\": [5, 7, 11, 51, 0.17236495554239675, 0.31386011980487694, 0.647343522991433, 3.023887474450991, 1], \"76\": [2, 2, 7, 40, 0.03364488914272426, 0.03364488914272426, 0.35006632871837606, 2.6869567496051436, 1], \"451\": [3, 4, 7, 19, 0.18381520905073792, 0.3065610340492504, 0.741296524457528, 2.207633593250955, 1], \"213\": [1, 1, 2, 8, 0, 0, 0.06136894637629212, 0.69945634975321, 3], \"724\": [1, 1, 6, 31, 0, 0, 0.3355225689335057, 2.4546453121588456, 3], \"9\": [9, 17, 22, 94, 0.14419816042871783, 0.44046397657189024, 0.6558854817921898, 2.885957587020806, 1], \"647\": [2, 2, 6, 20, 0.07302513501488987, 0.07302513501488987, 0.5198754592859085, 2.1489393361767575, 1], \"198\": [10, 12, 25, 63, 0.4148468400331404, 0.5540919292938287, 1.4382622351253833, 3.0636791826173733, 1], \"543\": [2, 2, 3, 34, 0.01775457201238533, 0.01775457201238533, 0.03951348093025127, 1.820815244235362, 1], \"235\": [1, 5, 7, 23, 0, 0.1920119633590886, 0.3470607123980314, 1.7009691188599037, 2], \"62\": [1, 4, 13, 48, 0, 0.10814037417842506, 0.7913083957951093, 2.8590757826417446, 2], \"16\": [2, 3, 7, 38, 0.04090549834060343, 0.08979108691012692, 0.41309079497480117, 2.7771451318671345, 1], \"108\": [1, 2, 4, 36, 0, 0.04220035449037644, 0.15906469462968736, 2.705748704113931, 2], \"69\": [3, 6, 12, 55, 0.04180822530231373, 0.15766847536402548, 0.5206444337682172, 2.731121654904029, 1], \"621\": [1, 1, 4, 18, 0, 0, 0.29571424414904524, 2.075401132142831, 3], \"692\": [0, 2, 7, 42, 0, 0.17284281283941086, 1.1973471293537987, 4.433284551077148, 2], \"259\": [0, 0, 2, 4, 0, 0, 0.38193461069797024, 1.0509842396788551, 3], \"208\": [0, 1, 3, 18, 0, 0, 0.11054187439982388, 1.6501560054528852, 3], \"698\": [0, 1, 2, 8, 0, 0, 0.2664662333015083, 1.772491050362178, 3], \"560\": [4, 10, 15, 47, 0.1090999130829226, 0.5425923334457429, 0.9635702180113177, 2.8281999503717175, 1], \"215\": [2, 7, 12, 57, 0.02075839977178062, 0.2286866288339653, 0.5625330956109076, 2.892438024655793, 1], \"240\": [3, 4, 6, 25, 0.13868338753395068, 0.2346473757956944, 0.4668996433081445, 2.4275051339655733, 1], \"253\": [1, 3, 9, 33, 0, 0.1916674192121923, 1.0651962917482656, 3.2795335861520876, 2], \"42\": [8, 17, 30, 164, 0.29723607098046717, 0.9411811905804635, 1.7694279574353258, 4.943826124544166, 1], \"380\": [2, 3, 10, 44, 0.06222847139840936, 0.1349349016268428, 0.957485048727138, 3.468090672293836, 1], \"347\": [7, 16, 27, 69, 0.19952291915250117, 0.7671746756455643, 1.4551820746068505, 3.111540499909498, 1], \"210\": [3, 5, 13, 40, 0.11433759744908353, 0.2900346193274134, 1.1861842980657635, 3.115039494738784, 1], \"179\": [1, 3, 8, 27, 0, 0.21357410029805904, 0.9907010014908804, 3.0099169085459474, 2], \"456\": [5, 7, 10, 15, 0.7223768188748837, 1.123718209799186, 1.6558038329920262, 2.3545984670450464, 1], \"155\": [2, 5, 8, 44, 0.025807883955872597, 0.1513456288996497, 0.3494594321480241, 2.6140028401641304, 1], \"882\": [0, 2, 6, 21, 0, 0.06887402901251127, 0.49573913073261056, 2.181655400571976, 2], \"394\": [5, 5, 12, 60, 0.3449091275382815, 0.3449091275382815, 1.2156017946017912, 4.0994659668733044, 1], \"61\": [1, 2, 2, 22, 0, 0.039530838756635246, 0.039530838756635246, 1.7713921664036212, 2], \"14\": [16, 27, 50, 160, 0.5096824101723485, 1.0622991422444077, 2.0138117995656826, 4.211775534988336, 1], \"227\": [1, 3, 8, 35, 0, 0.14708351260416586, 0.7545999597736089, 3.116484293343021, 2], \"28\": [2, 3, 7, 51, 0.013042245516450255, 0.029109429204969107, 0.14912141021977157, 2.255101918122643, 1], \"277\": [0, 1, 2, 19, 0, 0, 0.538996500732687, 4.181504737664501, 3], \"119\": [1, 1, 2, 12, 0, 0, 0.07579383936953364, 1.3440770366239985, 3], \"48\": [7, 13, 27, 108, 0.2759402545750977, 0.7400208655177113, 1.7453012143936018, 4.339145533970475, 1], \"232\": [0, 1, 2, 26, 0, 0, 0.048028437943868525, 2.231613459566012, 3], \"71\": [0, 0, 2, 15, 0, 0, 0.04450122467051005, 1.2696838459837052, 3], \"416\": [1, 1, 6, 24, 0, 0, 0.4125322753312568, 2.215960488393689, 3], \"175\": [3, 4, 5, 36, 0.07350246199292652, 0.1271551754852466, 0.19216000579424253, 2.4834932219908534, 1], \"297\": [1, 1, 6, 34, 0, 0, 0.5968160716215132, 3.3037003831845952, 3], \"231\": [1, 2, 8, 41, 0, 0.01868340194220353, 0.263705257365472, 2.1889131144452274, 2], \"5\": [11, 18, 28, 164, 0.35137211264558593, 0.7548764358118096, 1.3158465098019354, 4.5494867982162575, 1], \"41\": [5, 7, 10, 46, 0.2078703916939076, 0.373537513582725, 0.6545177897684874, 3.0231712129723607, 1], \"94\": [3, 3, 4, 27, 0.04842258467622871, 0.04842258467622871, 0.08452758931834498, 1.6131795256910302, 1], \"239\": [4, 5, 15, 45, 0.16050384290244762, 0.24061783911638135, 1.2378852373352336, 3.137007004001893, 1], \"199\": [0, 1, 2, 23, 0, 0, 0.023853247807663402, 1.4333011732663181, 3], \"152\": [2, 6, 7, 31, 0.02987526143382911, 0.24132450436022623, 0.31590033267798057, 2.1145459329593588, 1], \"122\": [4, 7, 10, 36, 0.09325330941242414, 0.2618472378291023, 0.4767766089821518, 2.187950729759443, 1], \"82\": [2, 2, 3, 12, 0.06527602314645073, 0.06527602314645073, 0.1413004605730646, 1.2320734146306211, 1], \"316\": [1, 2, 4, 23, 0, 0.16989903679539747, 0.5543107357057295, 3.2383152780183875, 2], \"167\": [5, 7, 11, 40, 0.11867869178432791, 0.2207212651076151, 0.4761590409301396, 2.2043674648485996, 1], \"131\": [1, 4, 6, 21, 0, 0.2691720456809125, 0.5276713513756337, 2.252713262953873, 2], \"312\": [0, 0, 2, 15, 0, 0, 0.19574457712609533, 2.5773462104383653, 3], \"12\": [1, 3, 6, 47, 0, 0.06774598853238815, 0.24715209136621874, 2.901644088243196, 2], \"105\": [0, 1, 4, 22, 0, 0, 0.14995294622604355, 1.7739064064228378, 3], \"384\": [0, 0, 3, 23, 0, 0, 0.5668534552356532, 3.8249499932571354, 3], \"285\": [0, 0, 2, 5, 0, 0, 0.3007541540191337, 1.1609554192422453, 3], \"91\": [3, 4, 5, 30, 0.12327489245733352, 0.20964173188033805, 0.3107378487517068, 2.647559195237289, 1], \"29\": [1, 3, 5, 27, 0, 0.07380397458336127, 0.19290366612449156, 1.9746718679889763, 2], \"92\": [1, 2, 6, 36, 0, 0.047122970130097065, 0.36064774155548684, 2.8114062967064464, 2], \"273\": [6, 10, 17, 46, 1.0116602690459389, 1.6349870269468092, 2.4726782630130386, 4.893691874372427, 1], \"419\": [0, 0, 3, 17, 0, 0, 0.6325225587435105, 3.378724525810097, 3], \"326\": [0, 0, 2, 9, 0, 0, 0.041672696400568025, 0.6214911916535102, 3], \"362\": [1, 1, 13, 37, 0, 0, 2.4992907440085705, 5.02190499699364, 3], \"393\": [0, 0, 2, 13, 0, 0, 0.9315582040049435, 4.189654742026425, 3], \"93\": [1, 1, 3, 17, 0, 0, 0.34967374847974886, 2.6701309662399164, 3], \"97\": [3, 6, 11, 48, 0.22538822116803361, 0.6987494361086152, 1.481349145698718, 4.185389615710886, 1], \"65\": [1, 2, 3, 10, 0, 0.09330773169945256, 0.1988909397087169, 1.2369203558558786, 2], \"143\": [2, 2, 4, 19, 0.047684838131185944, 0.047684838131185944, 0.17844755867744094, 1.687845020070129, 1], \"123\": [1, 1, 4, 16, 0, 0, 0.2835752904991275, 1.8319255109533896, 3], \"136\": [4, 7, 16, 63, 0.06611246338670829, 0.19005181762098883, 0.7388610774186368, 2.8878292527543596, 1], \"83\": [2, 3, 6, 30, 0.027455396452354876, 0.06074741913960751, 0.2235610007045341, 1.9827995777410268, 1], \"148\": [1, 4, 12, 26, 0, 0.19622624370172712, 1.0822184788924334, 2.318447772695385, 2], \"160\": [1, 1, 7, 29, 0, 0, 0.39616271544585085, 2.234654582172186, 3], \"75\": [3, 4, 14, 57, 0.04171132918628642, 0.0729918062364865, 0.6562710900323558, 2.795831644873392, 1], \"58\": [1, 3, 8, 15, 0, 0.03381238708415533, 0.21877790274608763, 0.6204491073033085, 2], \"24\": [3, 4, 6, 33, 0.09362342046209744, 0.16082720489992372, 0.33116138377607446, 2.555340382650645, 1], \"168\": [2, 3, 6, 24, 0.10734155493596446, 0.22710171311183888, 0.7030133634809992, 2.8517048730954286, 1], \"115\": [0, 2, 6, 15, 0, 0.1330864537962701, 0.8246747875869243, 2.1980150912113783, 2], \"72\": [1, 2, 4, 31, 0, 0.04873071290458883, 0.18211346190193325, 2.5647572714063935, 2], \"503\": [1, 2, 5, 21, 0, 0.09287412500644375, 0.47516062535545167, 2.4621434399093878, 2], \"130\": [1, 2, 3, 10, 0, 0.053921416793820044, 0.11747520126885172, 0.8692165460948499, 2], \"494\": [2, 2, 3, 14, 0.08701137698962977, 0.08701137698962977, 0.18610227963386067, 1.6964492894237302, 1], \"39\": [2, 6, 11, 53, 0.02511117506693104, 0.20608857615005308, 0.5705448584676129, 2.9369158538437174, 1], \"212\": [0, 2, 7, 53, 0, 0.08218174592228585, 0.7174741337840569, 4.113328111250517, 2], \"79\": [0, 2, 9, 50, 0, 0.03506055862573159, 0.5438168593563546, 3.1485184444245653, 2], \"234\": [3, 11, 20, 64, 0.06566910350785725, 0.6484211448113087, 1.3904335956280698, 3.462289170239006, 1], \"173\": [1, 2, 2, 16, 0, 0.08894748601649616, 0.08894748601649616, 1.939243457697124, 2], \"22\": [4, 7, 20, 89, 0.08368707237308971, 0.23690548493070412, 1.1575774789139326, 3.7890259091538527, 1], \"127\": [2, 4, 7, 50, 0.06713930283762853, 0.245122458032985, 0.6155609440298986, 3.7933020300437863, 1], \"153\": [3, 4, 8, 26, 0.051234881466595814, 0.08934510033584994, 0.31760375231683013, 1.599104330579555, 1], \"46\": [5, 8, 11, 74, 0.14819964372469757, 0.34284168490669276, 0.5727649232062814, 3.5832526623261916, 1], \"66\": [0, 3, 10, 40, 0, 0.033054790486442366, 0.31729887891314856, 1.9422761134185453, 2], \"57\": [3, 3, 6, 27, 0.0840831172105414, 0.0840831172105414, 0.3007541540191337, 2.092513623247189, 1], \"381\": [0, 0, 2, 8, 0, 0, 0.4013413909243023, 2.18618998261251, 3], \"74\": [3, 3, 13, 44, 0.048553225416990746, 0.048553225416990746, 0.6597030069723929, 2.4597636409622847, 1], \"567\": [2, 3, 5, 20, 0.04729013504145709, 0.1034215911531522, 0.26441096720075163, 1.765178472663999, 1], \"126\": [0, 1, 3, 10, 0, 0, 0.3416302106614813, 1.709262772592952, 3], \"154\": [2, 2, 3, 9, 0.1670540846631662, 0.1670540846631662, 0.3429447511268304, 1.5436865348713198, 1], \"37\": [1, 4, 10, 37, 0, 0.20964173188033805, 0.8992365108359155, 3.0424378007375097, 2], \"395\": [0, 2, 3, 15, 0, 0.23090555664969895, 0.4602156228795727, 2.747936693241469, 2], \"81\": [0, 5, 7, 14, 0, 0.29381079439315433, 0.5124636257702291, 1.302259176803307, 2], \"765\": [0, 0, 4, 30, 0, 0, 2.0014800002101243, 5.621925805523552, 3], \"207\": [8, 13, 18, 48, 0.40416724939256443, 0.8394853206504099, 1.2588588588047063, 2.940745909724886, 1], \"221\": [1, 1, 5, 24, 0, 0, 0.571885880527237, 2.9326741375868544, 3], \"257\": [0, 2, 2, 11, 0, 0.09531017980432487, 0.09531017980432487, 1.3925249108705267, 2], \"565\": [0, 0, 0, 2, 0, 0, 0, 0.5245244681241525, 4], \"124\": [1, 6, 9, 36, 0, 0.29700447772203814, 0.5755442439585287, 2.5989469660029565, 2], \"785\": [0, 1, 8, 14, 0, 0, 2.283879639147017, 3.6556408126382025, 3], \"926\": [0, 0, 2, 8, 0, 0, 0.48550781578170077, 2.3978952727983707, 3], \"116\": [2, 2, 3, 17, 0.08303522860999034, 0.08303522860999034, 0.17798315519535646, 1.9817475705202348, 1], \"209\": [0, 0, 6, 14, 0, 0, 0.25727327581549764, 0.954507869706425, 3], \"817\": [2, 5, 12, 44, 0.07133147800542972, 0.3798786889211724, 1.2979377678520694, 3.6051059818598317, 1], \"350\": [0, 2, 3, 23, 0, 0.07383426201105235, 0.15906469462968736, 2.410012436807535, 2], \"373\": [0, 0, 2, 9, 0, 0, 0.12323264042394814, 1.2962979072868075, 3], \"653\": [2, 3, 4, 9, 0.14008879317068168, 0.2914344220703314, 0.4709430374876713, 1.3975094319400305, 1], \"898\": [0, 1, 2, 16, 0, 0, 0.13862989729590636, 2.352967191699728, 3], \"31\": [6, 10, 24, 88, 0.21193341084059913, 0.5042466526679481, 1.5638230295877933, 3.947010306262643, 1], \"180\": [0, 0, 2, 7, 0, 0, 0.07020425867324853, 0.6370577139089018, 3], \"782\": [2, 2, 3, 30, 0.038136175190995616, 0.038136175190995616, 0.08384797247787562, 2.2768934392541587, 1], \"557\": [0, 1, 3, 25, 0, 0, 0.24783616390458124, 3.021948115684884, 3], \"448\": [0, 0, 3, 19, 0, 0, 0.14588927347112293, 1.9878982547274588, 3], \"617\": [1, 1, 3, 16, 0, 0, 0.2527333714065298, 2.2169088684391363, 3], \"729\": [0, 1, 2, 11, 0, 0, 0.41836851294407224, 2.816263785742443, 3], \"923\": [0, 1, 2, 9, 0, 0, 0.46813621507094005, 2.571814372981217, 3], \"328\": [4, 6, 10, 25, 0.17666954336260812, 0.36101334553733055, 0.7919645976288356, 2.145733506520149, 1], \"30\": [0, 0, 5, 17, 0, 0, 0.3262793719499249, 1.697426178367456, 3], \"721\": [2, 4, 8, 23, 0.11311480443783152, 0.3913945242112221, 1.0702703106658347, 2.8236574405138004, 1], \"274\": [0, 0, 3, 13, 0, 0, 0.10041874774704733, 1.0931199249200836, 3], \"73\": [1, 5, 9, 34, 0, 0.1424474356866873, 0.4028079782872754, 2.0892675719133114, 2], \"176\": [1, 1, 2, 25, 0, 0, 0.030606826736080846, 1.7675102962473432, 3], \"342\": [2, 2, 2, 9, 0.04450122467051005, 0.04450122467051005, 0.04450122467051005, 0.6531070191226231, 1], \"508\": [0, 0, 2, 8, 0, 0, 0.5042466526679481, 2.4416340228612787, 3], \"642\": [1, 1, 4, 17, 0, 0, 1.552005863348225, 4.222580953283889, 3], \"18\": [3, 5, 12, 50, 0.07735814230286744, 0.20164511697652365, 0.8271811278478636, 3.1502275895063554, 1], \"222\": [1, 2, 4, 8, 0, 0.056273635982108605, 0.20827230480570424, 0.6555459946274417, 2], \"233\": [1, 1, 5, 13, 0, 0, 1.238658362313826, 2.8661147802506046, 3], \"446\": [2, 2, 2, 8, 0.48550781578170077, 0.48550781578170077, 0.48550781578170077, 2.3978952727983707, 1], \"493\": [2, 4, 6, 18, 0.10591901888373739, 0.36944225585878276, 0.6959365826475239, 2.307600428109778, 1], \"258\": [1, 1, 3, 11, 0, 0, 0.09162049700888575, 0.8285425066225306, 3], \"866\": [0, 1, 3, 17, 0, 0, 0.6418538861723948, 3.3978584803966405, 3], \"943\": [3, 5, 6, 15, 0.2840257612486704, 0.648363577932972, 0.8389208480491557, 2.2204721172730335, 1], \"229\": [1, 2, 7, 24, 0, 0.04180336980436055, 0.42064633523841427, 1.966731661671628, 2], \"178\": [0, 1, 2, 11, 0, 0, 0.07315875518638974, 1.1927142176997425, 3], \"357\": [2, 3, 3, 9, 0.4096756406445079, 0.760450862456052, 0.760450862456052, 2.420649383046883, 1], \"77\": [1, 1, 2, 20, 0, 0, 0.0692317915693208, 2.1002802474243185, 3], \"100\": [0, 1, 6, 28, 0, 0, 0.12599654944140534, 1.3671834005723285, 3], \"193\": [2, 2, 3, 9, 0.27958486221916157, 0.27958486221916157, 0.5456944494168147, 2.019194872623806, 1], \"99\": [0, 1, 3, 14, 0, 0, 0.2840257612486704, 2.098420873241076, 3], \"438\": [0, 0, 2, 19, 0, 0, 0.0840831172105414, 2.187922184673906, 3], \"540\": [2, 4, 7, 24, 0.05421381659414747, 0.20117702458689246, 0.520251809446536, 2.1996975306830504, 1], \"998\": [0, 1, 3, 7, 0, 0, 0.401795379219202, 1.3062516534463542, 3], \"226\": [0, 2, 5, 29, 0, 0.02166932025237536, 0.12831518313086548, 1.7237831361247657, 2], \"443\": [11, 15, 27, 66, 0.8333599158416037, 1.2664210903482318, 2.2209467645250096, 3.9186375476218034, 1], \"908\": [3, 6, 11, 29, 0.05686939649689632, 0.21031782910428387, 0.5803905032766506, 1.866888654857706, 1], \"1014\": [1, 2, 3, 29, 0, 0.04873071290458883, 0.10648348040245009, 2.4422927539198764, 2], \"301\": [1, 1, 3, 15, 0, 0, 0.38776553100876343, 2.5527292461267614, 3], \"1019\": [1, 2, 5, 35, 0, 0.0036653573520393137, 0.022691116964608446, 0.7535719778972166, 2], \"67\": [2, 4, 8, 35, 0.028072018778686394, 0.10784852120640745, 0.375360486709056, 2.274068452139959, 1], \"134\": [2, 3, 6, 27, 0.03472571137382968, 0.07650288096841239, 0.2761315220005779, 2.006861349958745, 1], \"435\": [1, 2, 3, 13, 0, 0.07032774214205609, 0.15180601286800416, 1.4056861750892242, 2], \"627\": [1, 1, 2, 7, 0, 0, 0.0969281161332286, 0.8095155887346988, 3], \"1038\": [0, 0, 3, 9, 0, 0, 1.6274564179367788, 3.6327899874628926, 3], \"1013\": [3, 9, 15, 48, 0.061960627359177074, 0.45443563119232466, 0.9547462922328233, 2.854378155248259, 1], \"86\": [3, 4, 7, 23, 0.1670540846631662, 0.2800774730665616, 0.6880838786033986, 2.4584658770590866, 1], \"747\": [0, 0, 6, 19, 0, 0, 0.3224817407844981, 1.5719577555151945, 3], \"409\": [0, 1, 3, 11, 0, 0, 0.19714257713870645, 1.3685839745535584, 3], \"109\": [0, 1, 2, 10, 0, 0, 0.15355773584309076, 1.6388758517139523, 3], \"1056\": [1, 1, 3, 11, 0, 0, 0.16989903679539747, 1.2498191924513546, 3], \"407\": [1, 1, 2, 10, 0, 0, 0.5042466526679481, 2.856093274440672, 3], \"912\": [0, 1, 3, 30, 0, 0, 0.20157261209600713, 3.1498475043303937, 3], \"985\": [0, 0, 2, 3, 0, 0, 0.8286926725561692, 1.3618033411115948, 3], \"133\": [1, 2, 5, 27, 0, 0.039965358599302475, 0.22700966661909042, 2.1319382401265434, 2], \"931\": [0, 0, 6, 19, 0, 0, 2.005333569526114, 4.181504737664501, 3], \"128\": [6, 9, 17, 52, 0.14732471475685843, 0.30538164955118186, 0.8216505215936474, 2.558962130432212, 1], \"371\": [0, 0, 2, 14, 0, 0, 0.10109611687136877, 1.826606200558223, 3], \"948\": [2, 2, 6, 27, 0.053994220576736765, 0.053994220576736765, 0.4050026803542592, 2.4079317389301678, 1], \"40\": [1, 1, 2, 13, 0, 0, 0.036567145418419336, 0.9452889098187505, 3], \"1044\": [0, 1, 3, 17, 0, 0, 0.5020919437972361, 3.0884039294001346, 3], \"1122\": [0, 0, 3, 9, 0, 0, 1.33828514193353, 3.2700441114426, 3], \"27\": [7, 9, 13, 34, 0.10128434901653703, 0.16229049357577685, 0.3130800925768331, 1.2569494754706025, 1], \"201\": [1, 1, 3, 8, 0, 0, 0.15521621002929656, 0.7857399673877702, 3], \"465\": [0, 1, 2, 3, 0, 0, 0.4096756406445079, 0.760450862456052, 3], \"1078\": [1, 2, 2, 6, 0, 0.09440968447107469, 0.09440968447107469, 0.6371529112053704, 2], \"645\": [2, 2, 2, 7, 0.12099331128663167, 0.12099331128663167, 0.12099331128663167, 0.946068034889125, 1], \"658\": [1, 3, 7, 23, 0, 0.17869178874337593, 0.7252354951114459, 2.5257286443082556, 2], \"902\": [0, 0, 2, 10, 0, 0, 0.462623521948113, 2.7540353143440335, 3], \"1046\": [1, 1, 2, 11, 0, 0, 0.04137094624740334, 0.8231745532030782, 3], \"219\": [1, 4, 4, 22, 0, 0.13058459649485124, 0.13058459649485124, 1.6524406137959813, 2], \"44\": [1, 2, 5, 27, 0, 0.07988277164760574, 0.41854618964401735, 2.782286865103481, 2], \"96\": [0, 0, 5, 14, 0, 0, 0.5986563371390229, 2.005018261309723, 3], \"345\": [5, 6, 11, 25, 0.1798230348813852, 0.24973714088765747, 0.6696260643208028, 1.7792039616636393, 1], \"445\": [0, 2, 3, 18, 0, 0.22314355131420976, 0.44628710262841953, 3.056356895370426, 2], \"542\": [1, 4, 5, 19, 0, 0.2866441896393609, 0.4178363999107113, 2.1388450130209167, 2], \"64\": [1, 4, 4, 32, 0, 0.16917873135476025, 0.16917873135476025, 2.54922913376634, 2], \"556\": [1, 1, 2, 9, 0, 0, 0.2629424662760252, 1.9587171544117037, 3], \"205\": [1, 4, 5, 22, 0, 0.10763066419236544, 0.16344179897725258, 1.490091154801534, 2], \"224\": [2, 2, 6, 17, 0.08533960173261773, 0.08533960173261773, 0.5887760293162374, 2.0064037522014004, 1], \"584\": [2, 5, 5, 12, 0.017101742152143374, 0.10238065985435192, 0.10238065985435192, 0.4830169063086463, 1], \"694\": [0, 0, 2, 12, 0, 0, 0.49159426183810306, 3.172083663361442, 3], \"739\": [4, 9, 10, 29, 0.1387503085003144, 0.561607159320348, 0.6576404921030354, 2.1773909418073516, 1], \"945\": [0, 2, 2, 14, 0, 0.17666954336260812, 0.17666954336260812, 2.34838020827099, 2], \"309\": [2, 2, 2, 9, 0.11408368723037224, 0.11408368723037224, 0.11408368723037224, 1.2375419744850127, 1], \"637\": [1, 1, 2, 7, 0, 0, 0.08167803101426718, 0.7142005897577777, 3], \"1029\": [1, 1, 7, 24, 0, 0, 0.6752718287329821, 2.5127311558974297, 3], \"386\": [1, 1, 2, 5, 0, 0, 0.4274440148269396, 1.4663370687934272, 3], \"1184\": [1, 1, 4, 9, 0, 0, 1.0986122886681096, 2.409194828052304, 3], \"680\": [2, 2, 7, 17, 0.055569851154810765, 0.055569851154810765, 0.5306282510621704, 1.63482714643892, 1], \"807\": [2, 2, 4, 8, 0.12516314295400602, 0.12516314295400602, 0.4274440148269396, 1.1420974006078486, 1], \"223\": [0, 0, 2, 14, 0, 0, 0.2595111954850846, 2.7420340539178087, 3], \"1023\": [0, 3, 6, 29, 0, 0.20157261209600713, 0.638321469337774, 3.0850466211529772, 2], \"1205\": [0, 2, 3, 24, 0, 0.08894748601649616, 0.19004360288786493, 2.666905156991034, 2], \"203\": [1, 2, 5, 16, 0, 0.0492104205319947, 0.27403323336592444, 1.4417875248313805, 2], \"343\": [1, 2, 3, 16, 0, 0.15718558352241233, 0.32423966818557853, 2.4760018714450407, 2], \"63\": [1, 1, 2, 10, 0, 0, 0.05511036271051877, 0.8822914905583823, 3], \"137\": [2, 3, 5, 14, 0.09138775158942865, 0.1950000150537256, 0.4688067410118894, 1.7385336447259707, 1], \"783\": [0, 2, 2, 9, 0, 0.030795351138471906, 0.030795351138471906, 0.49060695997772313, 2], \"789\": [0, 3, 3, 12, 0, 0.16551443847757338, 0.16551443847757338, 1.355835153635182, 2], \"287\": [5, 6, 10, 46, 0.16216675481549436, 0.2259564926908244, 0.5331106685554257, 2.7664076871083467, 1], \"1072\": [1, 1, 2, 9, 0, 0, 0.2856138193877219, 2.040468731680326, 3], \"374\": [0, 0, 4, 12, 0, 0, 0.21588838043303785, 1.1533134243811665, 3], \"975\": [1, 1, 3, 22, 0, 0, 0.1339294025800255, 2.1641280313756415, 3], \"110\": [4, 4, 5, 17, 0.09793753498670578, 0.09793753498670578, 0.1490850461536468, 1.0503043233346705, 1], \"442\": [3, 5, 8, 24, 0.19977684065403373, 0.4788708330420155, 0.9448710254279418, 2.718154589548898, 1], \"826\": [0, 3, 3, 5, 0, 1.7553685915664563, 2.1357468111091107, 3.0834378539730967, 2], \"1185\": [1, 3, 4, 29, 0, 0.5858181603294468, 0.8820839764726192, 4.323135851809957, 2], \"476\": [0, 1, 2, 8, 0, 0, 0.19671029424605424, 1.499234772300486, 3], \"417\": [0, 1, 3, 16, 0, 0, 0.1950000150537256, 1.963525780719198, 3], \"860\": [1, 4, 6, 25, 0, 0.5543107357057295, 0.9808292530117262, 3.3990345506012134, 2], \"188\": [1, 2, 6, 18, 0, 0.09599691440839975, 0.6454269727502584, 2.2149781642997985, 2], \"792\": [3, 7, 18, 50, 0.03766135463631043, 0.1897565352814727, 0.8677990306229213, 2.4562482949004933, 1], \"485\": [2, 2, 3, 10, 0.031951599806602365, 0.031951599806602365, 0.0705068763181665, 0.5942591794077364, 1], \"459\": [0, 3, 6, 10, 0, 0.2115583769789802, 0.6639286345608053, 1.28586639572104, 2], \"1406\": [0, 0, 2, 5, 0, 0, 0.09396579241833143, 0.47980762934235643, 3], \"95\": [0, 2, 4, 17, 0, 0.1684645221325284, 0.5503991328304987, 2.657239648698449, 2], \"832\": [0, 0, 2, 11, 0, 0, 0.4519851237430572, 2.906120114864304, 3], \"132\": [0, 1, 2, 7, 0, 0, 0.21472498084861397, 1.3696902060678553, 3], \"768\": [0, 1, 2, 10, 0, 0, 0.14897379164772453, 1.61264561366087, 3], \"220\": [0, 1, 4, 13, 0, 0, 0.7698398013481997, 2.583724066856891, 3], \"695\": [0, 0, 3, 18, 0, 0, 0.15739217375142928, 1.9652033519899923, 3], \"1036\": [1, 2, 6, 20, 0, 0.04525659158812087, 0.3483066942682158, 1.7280436548419473, 2], \"1249\": [0, 0, 3, 10, 0, 0, 0.5668534552356532, 2.24861202924938, 3], \"1279\": [0, 0, 2, 4, 0, 0, 0.680877087968131, 1.589732841354768, 3], \"893\": [2, 4, 4, 14, 0.1147388932751553, 0.3963047387095001, 0.3963047387095001, 1.9398125691871948, 1], \"90\": [0, 1, 4, 13, 0, 0, 0.1810800917058897, 1.1303609869826898, 3], \"158\": [0, 0, 2, 11, 0, 0, 0.9315582040049435, 3.861539099996154, 3], \"1187\": [1, 2, 2, 6, 0, 0.38946476676172326, 0.38946476676172326, 1.6650077635889111, 2], \"1446\": [1, 3, 3, 9, 0, 0.9582549309731873, 0.9582549309731873, 2.738533217827286, 2], \"462\": [1, 1, 2, 3, 0, 0, 0.44183275227903923, 0.8109302162163288, 3], \"1165\": [1, 1, 3, 16, 0, 0, 1.55814461804655, 4.679040034554547, 3], \"87\": [0, 1, 2, 10, 0, 0, 0.2646925542270822, 2.1489393361767575, 3], \"1400\": [0, 1, 3, 11, 0, 0, 0.6876375247489758, 2.660028971995655, 3], \"1135\": [2, 2, 2, 3, 0.054883456985091984, 0.054883456985091984, 0.054883456985091984, 0.11950541923414716, 1], \"1250\": [0, 1, 7, 16, 0, 0, 0.4102843945441133, 1.2947555287452976, 3], \"954\": [1, 2, 2, 4, 0, 0.1603426500751794, 0.1603426500751794, 0.5280674302004967, 2], \"1482\": [1, 1, 2, 10, 0, 0, 0.07593779883079804, 1.0893651950353123, 3], \"85\": [1, 1, 3, 18, 0, 0, 0.29048712337938953, 2.5752675917399284, 3], \"525\": [1, 1, 4, 13, 0, 0, 0.4994248488146178, 2.0595073267790185, 3], \"145\": [1, 2, 3, 8, 0, 0.038245578995075004, 0.0840831172105414, 0.48475779699607313, 2], \"1016\": [1, 2, 2, 11, 0, 0.21825356602001797, 0.21825356602001797, 2.125615044958096, 2], \"80\": [2, 6, 7, 13, 0.02128872309084186, 0.17701793521114992, 0.23395099693746876, 0.6466271649250525, 1], \"410\": [1, 1, 4, 17, 0, 0, 0.3856624808119847, 2.2512917986064953, 3], \"778\": [2, 4, 5, 19, 0.11743683520286506, 0.4044261469757453, 0.5759480865259944, 2.5052080022918446, 1], \"455\": [5, 6, 8, 17, 0.4688067410118894, 0.6212450916536353, 0.9286541798934884, 2.0686176236188256, 1], \"1580\": [2, 2, 5, 21, 0.05603706810771108, 0.05603706810771108, 0.30765420563869617, 1.9953078645178213, 1], \"144\": [3, 3, 5, 10, 0.06810498069141027, 0.06810498069141027, 0.17879144918609313, 0.5783452100312003, 1], \"1478\": [1, 2, 3, 8, 0, 0.2363887780642304, 0.4700036292457356, 1.6613976513648114, 2], \"716\": [0, 0, 2, 6, 0, 0, 0.5245244681241525, 1.975038421978337, 3], \"730\": [0, 0, 2, 8, 0, 0, 1.4053425560905852, 3.9166277718148943, 3], \"496\": [4, 5, 6, 20, 0.2037476209666304, 0.3024036842771408, 0.4110989258264204, 1.8945743746864476, 1], \"420\": [0, 1, 2, 10, 0, 0, 0.36772478012531734, 2.4941233048929243, 3], \"523\": [2, 2, 7, 10, 0.11060987154397002, 0.11060987154397002, 0.8890217037586035, 1.367105580469022, 1], \"907\": [6, 8, 10, 27, 0.2820099074993145, 0.4569092206846744, 0.6444701321646286, 2.027790955559788, 1], \"633\": [1, 1, 2, 9, 0, 0, 0.2578291093020998, 1.9395876833158263, 3], \"1050\": [1, 1, 2, 8, 0, 0, 0.17135825199668508, 1.3839551787667184, 3], \"1111\": [0, 0, 2, 7, 0, 0, 0.7621400520468967, 2.70805020110221, 3], \"424\": [3, 4, 6, 20, 0.0876900332762814, 0.15094508186148964, 0.3123250091771612, 1.6239953874676598, 1], \"1217\": [0, 1, 2, 7, 0, 0, 0.30538164955118186, 1.6817585740137266, 3], \"1477\": [3, 3, 4, 12, 0.7472144018302211, 0.7472144018302211, 1.090347778818216, 2.9326741375868544, 1], \"1461\": [1, 2, 3, 4, 0, 0.7472144018302211, 1.252762968495368, 1.6945957207744073, 2], \"1603\": [4, 7, 10, 47, 0.15843334161925918, 0.42248679567759495, 0.7289782000868721, 3.206872744789416, 1], \"605\": [1, 3, 3, 12, 0, 0.058344477729916244, 0.058344477729916244, 0.6735981926566578, 2], \"643\": [5, 5, 6, 13, 0.21449380973472676, 0.21449380973472676, 0.29602041736893475, 0.9621145504571702, 1], \"355\": [1, 2, 2, 7, 0, 0.19384140062681604, 0.19384140062681604, 1.2865626560576884, 2], \"1283\": [0, 0, 2, 3, 0, 0, 0.3483066942682158, 0.661398482245365, 3], \"1476\": [1, 1, 2, 8, 0, 0, 0.14107859825990554, 1.2308802572458604, 3], \"1635\": [1, 1, 3, 14, 0, 0, 0.09051400754083183, 1.1194463755709516, 3], \"189\": [5, 12, 23, 51, 0.08004270767353643, 0.3920420877760237, 1.016437680479094, 2.269028309465203, 1], \"1128\": [0, 4, 5, 9, 0, 0.30774963550259016, 0.44664739807457976, 1.0382691587606412, 2], \"1669\": [1, 2, 4, 7, 0, 0.35774963506849783, 1.0007899955742643, 1.8355876931972364, 2], \"1713\": [1, 1, 2, 14, 0, 0, 0.12796988096337653, 2.039845331415177, 3], \"1008\": [1, 1, 2, 9, 0, 0, 0.4572413776318843, 2.5446783930879175, 3], \"1319\": [8, 20, 22, 125, 0.5855730502738052, 1.4985268951684432, 1.9487490437937383, 5.154397273441669, 1], \"547\": [1, 1, 5, 14, 0, 0, 0.29876251822835287, 1.3163559572028936, 3], \"532\": [0, 0, 2, 8, 0, 0, 0.2295744416445002, 1.6349169977350853, 3], \"611\": [0, 0, 2, 7, 0, 0, 0.31508104663989533, 1.7114595268264121, 3], \"1039\": [0, 0, 3, 13, 0, 0, 0.15739217375142928, 1.435264884204051, 3], \"1221\": [2, 2, 2, 6, 0.30774963550259016, 0.30774963550259016, 0.30774963550259016, 1.4453278927040836, 1], \"1340\": [0, 1, 2, 8, 0, 0, 0.5042466526679481, 2.4416340228612787, 3], \"803\": [1, 1, 3, 23, 0, 0, 0.10389959501815148, 2.0062689357901764, 3], \"1781\": [2, 2, 3, 6, 0.08252102368800351, 0.08252102368800351, 0.1769307081590782, 0.5733459807473247, 1], \"263\": [1, 2, 2, 8, 0, 0.08974628785627545, 0.08974628785627545, 0.9172292584564194, 2], \"1254\": [0, 1, 2, 8, 0, 0, 0.19105523676270922, 1.4744016286301573, 3], \"1331\": [0, 0, 2, 5, 0, 0, 0.5245244681241525, 1.6696567724271552, 3], \"278\": [3, 4, 12, 38, 0.10973238837921641, 0.1874629562943733, 1.0493065276839557, 2.975950264601953, 1], \"452\": [0, 0, 2, 7, 0, 0, 0.10161017641078245, 0.8373169713895237, 3], \"843\": [0, 0, 2, 3, 0, 0, 0.8109302162163288, 1.33828514193353, 3], \"1814\": [0, 0, 3, 7, 0, 0, 1.3618033411115948, 2.8217628372682206, 3], \"399\": [0, 1, 2, 10, 0, 0, 0.10648348040245009, 1.3373637376483105, 3], \"252\": [1, 2, 3, 5, 0, 0.22440062250426088, 0.4485486942444761, 0.9448109538225702, 2], \"290\": [0, 2, 2, 7, 0, 0.04455079698537381, 0.04455079698537381, 0.4434585045473791, 2], \"377\": [1, 1, 2, 12, 0, 0, 0.18400364297693944, 2.1129642337184795, 3], \"1582\": [0, 2, 3, 4, 0, 0.17904823144898546, 0.36545977349446523, 0.5790338737925242, 2], \"1791\": [2, 4, 8, 20, 0.05363215491579521, 0.19916693578028485, 0.6320920253059393, 1.873284442922057, 1], \"1025\": [0, 1, 2, 11, 0, 0, 0.24362208265775043, 2.234822990893227, 3], \"1034\": [0, 0, 2, 9, 0, 0, 0.2561688067457042, 1.9333181673579534, 3], \"433\": [0, 1, 2, 4, 0, 0, 0.2037476209666304, 0.6439331977785325, 3], \"1414\": [1, 2, 4, 9, 0, 0.291910408561302, 0.8569364892249722, 2.062347108320536, 2], \"1503\": [0, 0, 3, 6, 0, 0, 0.666478933477784, 1.5664205273504095, 3], \"1908\": [3, 4, 5, 17, 0.03275401966872916, 0.05750775882166745, 0.08845933546747507, 0.7271535485451404, 1], \"972\": [1, 1, 2, 6, 0, 0, 0.462623521948113, 1.83961549040569, 3], \"1738\": [0, 2, 2, 5, 0, 0.37117603462953225, 0.37117603462953225, 1.3373637376483105, 2], \"368\": [2, 3, 4, 13, 0.15355773584309076, 0.31732144188640793, 0.5091644938159141, 2.0809963489378593, 1], \"1463\": [0, 0, 2, 6, 0, 0, 0.31259842371631547, 1.4592548862171357, 3], \"1677\": [0, 1, 2, 8, 0, 0, 0.13353139262452263, 1.1895840668738362, 3], \"1510\": [0, 0, 2, 4, 0, 0, 0.2124355370417375, 0.6661590358422984, 3], \"1899\": [2, 3, 4, 8, 0.1720973230180951, 0.352440639799944, 0.5602862539343905, 1.387467381782254, 1], \"646\": [2, 3, 4, 10, 0.3101549283038395, 0.5978370007556205, 0.8979415932059586, 2.3116349285139637, 1], \"795\": [0, 0, 3, 10, 0, 0, 0.32306557634109756, 1.6558038329920262, 3], \"1444\": [0, 1, 2, 6, 0, 0, 0.057404567687345365, 0.42641593531725236, 3], \"129\": [0, 0, 2, 4, 0, 0, 0.05588045839445659, 0.20692071580732246, 3], \"1320\": [0, 0, 4, 9, 0, 0, 0.4962622595780941, 1.447627449136699, 3], \"376\": [0, 1, 2, 7, 0, 0, 0.2815658454343448, 1.6061805805637939, 3], \"740\": [2, 2, 3, 12, 0.20067069546215116, 0.20067069546215116, 0.4054651081081644, 2.1972245773362196, 1], \"761\": [1, 1, 4, 9, 0, 0, 1.552005863348225, 2.987559431798117, 3], \"1081\": [0, 0, 2, 3, 0, 0, 0.8472978603872036, 1.3862943611198906, 3], \"1407\": [1, 1, 3, 11, 0, 0, 0.5049690916532777, 2.285654250582239, 3], \"1748\": [0, 0, 2, 5, 0, 0, 0.5968160716215132, 1.8086232752800597, 3], \"1776\": [3, 3, 7, 9, 0.6563976383512038, 0.6563976383512038, 1.8003138413247135, 2.235431471611754, 1], \"1960\": [1, 1, 2, 5, 0, 0, 0.1100008952143285, 0.5462376619892466, 3], \"814\": [0, 0, 2, 4, 0, 0, 1.349926716949016, 2.5199979695992702, 3], \"1021\": [1, 1, 2, 8, 0, 0, 0.4978384282391795, 2.4267990189807196, 3], \"794\": [0, 0, 2, 7, 0, 0, 0.2876820724517809, 1.625967214385311, 3], \"1653\": [1, 1, 2, 3, 0, 0, 0.680877087968131, 1.1616252564968437, 3], \"216\": [1, 1, 2, 5, 0, 0, 0.0802032857549734, 0.41997313459774294, 3], \"620\": [1, 1, 2, 3, 0, 0, 0.02853260603557098, 0.06309029496120634, 3], \"678\": [1, 2, 6, 20, 0, 0.1451820098444979, 0.8780695190539574, 2.810907586541918, 2], \"722\": [0, 0, 4, 8, 0, 0, 1.9676501356917193, 3.243193132518907, 3], \"930\": [1, 2, 4, 14, 0, 0.42285685082003355, 1.133098464739279, 3.2880090373840822, 2], \"940\": [0, 0, 3, 8, 0, 0, 0.27029032973991174, 1.165303663166782, 3], \"659\": [0, 0, 2, 6, 0, 0, 0.9808292530117262, 2.772588722239781, 3], \"1586\": [1, 3, 3, 6, 0, 0.17086906306216687, 0.17086906306216687, 0.5569503043492827, 2], \"1352\": [2, 2, 3, 7, 0.15123096972392353, 0.15123096972392353, 0.3128723212803395, 1.0986122886681096, 1], \"1397\": [0, 1, 6, 14, 0, 0, 0.9264088620397397, 2.230560997603811, 3], \"1829\": [1, 3, 6, 8, 0, 0.4992480704235479, 1.2781321626208269, 1.7235371127400565, 2], \"957\": [1, 2, 3, 7, 0, 0.09622803209455377, 0.20479441264601322, 0.8053027393506005, 2], \"886\": [0, 1, 3, 9, 0, 0, 0.6325225587435105, 2.1906671767900603, 3], \"1833\": [0, 3, 4, 10, 0, 0.08345897538526194, 0.14387423888417297, 0.6765695215401308, 2], \"2028\": [0, 1, 2, 3, 0, 0, 0, 0, 3], \"1741\": [1, 2, 4, 5, 0, 0.35454501768090746, 0.9940394847485328, 1.2973468751033945, 2], \"183\": [1, 1, 7, 15, 0, 0, 0.4666606691350841, 1.3165643941890695, 3], \"583\": [0, 1, 6, 8, 0, 0, 1.3678322982801552, 1.8250736759120394, 3], \"572\": [1, 1, 3, 4, 0, 0, 0.11762891683046385, 0.20041848865123044, 3], \"2118\": [0, 0, 2, 3, 0, 0, 0.9315582040049435, 1.4954936530848826, 3], \"468\": [0, 2, 4, 9, 0, 0.31508104663989533, 0.9088557533866369, 2.1400661634962708, 2], \"2133\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1585\": [2, 2, 2, 4, 0.10763066419236544, 0.10763066419236544, 0.10763066419236544, 0.3746934494414107, 1], \"325\": [0, 0, 3, 6, 0, 0, 0.8430873278508602, 1.83961549040569, 3], \"1018\": [0, 1, 4, 11, 0, 0, 0.5855730502738052, 1.9487490437937383, 3], \"1801\": [1, 2, 2, 5, 0, 0.04184710993550044, 0.04184710993550044, 0.23672610308007871, 2], \"392\": [1, 1, 3, 12, 0, 0, 0.04717856027509048, 0.5726430547892012, 3], \"735\": [1, 2, 4, 14, 0, 0.050135812424355455, 0.18702342482783307, 1.2582564816700026, 2], \"2058\": [0, 1, 6, 13, 0, 0, 0.2536284200574761, 0.8566479855185837, 3], \"983\": [1, 1, 2, 4, 0, 0, 0.29849298855599654, 0.8718389693033213, 3], \"684\": [0, 1, 5, 8, 0, 0, 0.6046245444040388, 1.1398328748365039, 3], \"690\": [0, 0, 2, 3, 0, 0, 0.462623521948113, 0.8430873278508602, 3], \"1055\": [0, 0, 2, 8, 0, 0, 0.30774963550259016, 1.9118754504518005, 3], \"2219\": [0, 2, 2, 4, 0, 0.1093985944071066, 0.1093985944071066, 0.3800978942297413, 2], \"196\": [2, 2, 2, 6, 0.04541075318060711, 0.04541075318060711, 0.04541075318060711, 0.3493309696829739, 1], \"879\": [1, 1, 2, 6, 0, 0, 0.37117603462953225, 1.6183865180101145, 3], \"1212\": [2, 2, 2, 5, 0.1348842676899421, 0.1348842676899421, 0.1348842676899421, 0.6431830423540238, 1], \"1807\": [0, 1, 2, 4, 0, 0, 0.20479441264601322, 0.6466271649250525, 3], \"473\": [0, 1, 2, 4, 0, 0, 0.44183275227903923, 1.1700712526502546, 3], \"917\": [0, 0, 2, 5, 0, 0, 0.2664662333015083, 1.0676020519255496, 3], \"1054\": [2, 2, 7, 18, 0.11883400790235846, 0.11883400790235846, 0.9344218943926681, 2.4177709980711746, 1], \"1263\": [0, 0, 2, 7, 0, 0, 0.3201675275962693, 1.7268015729532826, 3], \"389\": [1, 2, 3, 9, 0, 0.057076831135436705, 0.12412606741381713, 0.783640008615226, 2], \"400\": [1, 2, 6, 9, 0, 0.41836851294407224, 1.7361277732419063, 2.4440395604558955, 2], \"697\": [0, 0, 3, 5, 0, 0, 0.48550781578170077, 1.0065376097219332, 3], \"1116\": [1, 2, 2, 3, 0, 0.09576690509200843, 0.09576690509200843, 0.20386340056870947, 2], \"2048\": [1, 2, 5, 17, 0, 0.04717856027509048, 0.2638495970836828, 1.5019280138961295, 2], \"2227\": [1, 1, 2, 4, 0, 0, 0.2561688067457042, 0.7737512129745747, 3], \"474\": [0, 0, 2, 5, 0, 0, 0.16989903679539747, 0.7689072264414809, 3], \"1528\": [0, 1, 6, 14, 0, 0, 0.23780070911418325, 0.9008098485715145, 3], \"1630\": [0, 1, 3, 11, 0, 0, 0.3429447511268304, 1.8718021769015913, 3], \"726\": [1, 2, 4, 7, 0, 0.9808292530117262, 2.03688192726104, 3.0641694351072197, 2], \"89\": [0, 2, 4, 8, 0, 0.15355773584309076, 0.5091644938159141, 1.2962606924455244, 2], \"421\": [0, 0, 2, 8, 0, 0, 0.3030501026800949, 1.8966774090875531, 3], \"2205\": [0, 1, 2, 2, 0, 0, 1.4053425560905852, 1.4053425560905852, 3], \"1127\": [0, 1, 2, 4, 0, 0, 0.08151149618728668, 0.29244776852479537, 3], \"367\": [2, 3, 8, 17, 0.0715869066639981, 0.15441568579144338, 0.7827063296283738, 1.8503083815539232, 1], \"1766\": [0, 1, 3, 3, 0, 0, 1.3156767939059373, 1.3156767939059373, 3], \"2383\": [5, 11, 18, 31, 0.31428229265358015, 1.025072272456275, 1.7554100607535563, 2.720964968218755, 1], \"595\": [1, 4, 7, 19, 0, 0.06613980250454501, 0.1901257822855362, 0.9332402901879284, 2], \"861\": [0, 0, 2, 9, 0, 0, 0.1451820098444979, 1.4264911602462274, 3], \"714\": [0, 2, 4, 11, 0, 0.12879510820557039, 0.43814407233118585, 1.6405635644619694, 2], \"1058\": [0, 1, 3, 3, 0, 0, 1.1616252564968437, 1.1616252564968437, 3], \"1489\": [0, 1, 2, 3, 0, 0, 1.1700712526502546, 1.791759469228055, 3], \"1512\": [1, 1, 2, 2, 0, 0, 0.6576404921030354, 0.6576404921030354, 3], \"1706\": [1, 1, 2, 2, 0, 0, 0.17435338714477774, 0.17435338714477774, 3], \"1966\": [3, 3, 4, 7, 0.3074846997479606, 0.3074846997479606, 0.49469624183610705, 1.085189268335969, 1], \"2210\": [1, 1, 4, 4, 0, 0, 0.5210297939402324, 0.5210297939402324, 3], \"816\": [0, 1, 3, 7, 0, 0, 0.3746934494414107, 1.2455218072388086, 3], \"1129\": [1, 1, 3, 9, 0, 0, 0.5108256237659907, 1.9459101490553132, 3], \"1236\": [0, 0, 2, 5, 0, 0, 0.05202733732865476, 0.288015795131334, 3], \"1983\": [1, 1, 2, 4, 0, 0, 0.4369283775639494, 1.1605790124173094, 3], \"586\": [0, 0, 2, 4, 0, 0, 0.0918075492531228, 0.325422400434628, 3], \"1724\": [1, 3, 4, 7, 0, 0.04509782218673358, 0.0788197072252094, 0.22406572976984887, 2], \"649\": [0, 3, 4, 4, 0, 0.20909179785855941, 0.3460241093921994, 0.3460241093921994, 2], \"1762\": [5, 5, 8, 15, 0.5800700359409745, 0.5800700359409745, 1.1027963951906838, 2.088831282029675, 1], \"2337\": [0, 1, 2, 2, 0, 0, 0.1629613095094132, 0.1629613095094132, 3], \"1408\": [1, 2, 3, 3, 0, 0.10318423623523076, 0.21878624594525403, 0.21878624594525403, 2], \"2119\": [1, 1, 2, 2, 0, 0, 0.30538164955118186, 0.30538164955118186, 3], \"2368\": [0, 2, 3, 6, 0, 0.6257058997644127, 1.084013489246957, 2.1777117631126375, 2], \"629\": [1, 1, 3, 5, 0, 0, 0.8430873278508602, 1.5425436776040702, 3], \"952\": [0, 0, 3, 4, 0, 0, 1.1962507582320256, 1.629743178594846, 3], \"1032\": [0, 0, 2, 2, 0, 0, 0.44685032427101873, 0.44685032427101873, 3], \"2095\": [0, 0, 2, 3, 0, 0, 0.39730179746900346, 0.7407752295491999, 3], \"1105\": [0, 1, 2, 3, 0, 0, 0.5543107357057295, 0.9808292530117262, 3], \"2137\": [1, 1, 2, 3, 0, 0, 0.06959329179919525, 0.15028220304933798, 3], \"2416\": [1, 1, 2, 2, 0, 0, 0.26121549926361765, 0.26121549926361765, 3], \"2152\": [1, 2, 3, 5, 0, 1.83981814696004, 2.562223618630578, 4.151039905898646, 2], \"774\": [0, 1, 2, 4, 0, 0, 0.19966567025192705, 0.633385446017691, 3], \"900\": [0, 0, 2, 3, 0, 0, 0.8472978603872036, 1.3862943611198906, 3], \"1294\": [1, 1, 2, 2, 0, 0, 1.6094379124341003, 1.6094379124341003, 3], \"2294\": [1, 1, 2, 5, 0, 0, 0.5543107357057295, 1.7280436548419473, 3], \"2384\": [0, 0, 2, 6, 0, 0, 0.08338160893905106, 0.5780778507751582, 3], \"883\": [0, 1, 2, 6, 0, 0, 0.10058723690516862, 0.6690496289808848, 3], \"1900\": [0, 0, 2, 2, 0, 0, 1.2992829841302609, 1.2992829841302609, 3], \"2449\": [1, 1, 2, 2, 0, 0, 1.1700712526502546, 1.1700712526502546, 3], \"2472\": [0, 1, 2, 3, 0, 0, 1.6094379124341003, 2.302585092994046, 3], \"1087\": [0, 1, 2, 4, 0, 0, 0.5108256237659907, 1.2992829841302609, 3], \"2482\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1896\": [0, 0, 2, 2, 0, 0, 0.6576404921030354, 0.6576404921030354, 3], \"2024\": [0, 0, 2, 5, 0, 0, 0.1506602748874898, 0.7012443907925647, 3], \"2162\": [0, 1, 3, 4, 0, 0, 0.7741883905630712, 1.1242547192814474, 3], \"2526\": [2, 2, 3, 4, 0.5968160716215132, 0.5968160716215132, 1.042653635020065, 1.4505139538541845, 1], \"566\": [0, 0, 2, 5, 0, 0, 0.1874629562943733, 0.8279664033688967, 3], \"1106\": [0, 1, 2, 2, 0, 0, 1.5339303599259553, 1.5339303599259553, 3], \"1356\": [0, 0, 2, 2, 0, 0, 1.2992829841302609, 1.2992829841302609, 3], \"2042\": [3, 4, 5, 8, 0.31732144188640793, 0.5091644938159141, 0.7116471943038656, 1.2962606924455244, 1], \"492\": [1, 1, 2, 2, 0, 0, 0.3007541540191337, 0.3007541540191337, 3], \"2264\": [1, 1, 2, 3, 0, 0, 0.16917873135476025, 0.3469503940467376, 3], \"334\": [1, 1, 2, 8, 0, 0, 0.037919234862293726, 0.4814117385596973, 3], \"1348\": [0, 1, 2, 2, 0, 0, 2.03688192726104, 2.03688192726104, 3], \"1258\": [1, 1, 2, 6, 0, 0, 0.013642776403786526, 0.11656128840606109, 3], \"1948\": [0, 0, 2, 2, 0, 0, 0.21588838043303785, 0.21588838043303785, 3], \"2571\": [1, 1, 2, 2, 0, 0, 0.27380672595816385, 0.27380672595816385, 3], \"797\": [1, 2, 3, 4, 0, 0.5623075796011341, 0.9925527167077854, 1.3910002521573033, 2], \"682\": [1, 3, 4, 6, 0, 0.15963014559188388, 0.26826398659467937, 0.5260930958967791, 2], \"1146\": [3, 4, 5, 13, 0.04720330913602542, 0.08243594174340435, 0.1259841869891397, 0.6458596462750483, 1], \"2634\": [1, 2, 2, 2, 0, 0.23922968906583414, 0.23922968906583414, 0.23922968906583414, 2], \"2428\": [1, 3, 3, 4, 0, 0.21878624594525403, 0.21878624594525403, 0.36101334553733055, 2], \"2720\": [0, 2, 2, 4, 0, 0.5790338737925242, 0.5790338737925242, 1.4200325007517407, 2], \"619\": [0, 2, 2, 3, 0, 0.05155780966485001, 0.05155780966485001, 0.11247798342669027, 2], \"1224\": [0, 2, 2, 2, 0, 0.7777045685880084, 0.7777045685880084, 0.7777045685880084, 2], \"1227\": [1, 2, 2, 2, 0, 0.538996500732687, 0.538996500732687, 0.538996500732687, 2], \"1746\": [1, 2, 2, 3, 0, 0.27193371548364176, 0.27193371548364176, 0.5324647988694718, 2], \"2732\": [2, 3, 3, 5, 0.03496859783774675, 0.07702694116580719, 0.07702694116580719, 0.20083244232865827, 1], \"1761\": [0, 2, 2, 4, 0, 0.3393540829961018, 0.3393540829961018, 0.9617082115649478, 2], \"1567\": [1, 2, 2, 5, 0, 0.039925462409183855, 0.039925462409183855, 0.22680283573899918, 2], \"2731\": [1, 2, 2, 2, 0, 0.13220542557941892, 0.13220542557941892, 0.13220542557941892, 2], \"2734\": [1, 2, 2, 3, 0, 0.11607217125275403, 0.11607217125275403, 0.24445333790096083, 2], \"2809\": [15, 18, 18, 35, 0.9255147550345562, 1.1947620719705891, 1.1947620719705891, 2.2727924325640356, 1], \"2502\": [0, 2, 2, 2, 0, 0.14787032803970862, 0.14787032803970862, 0.14787032803970862, 2], \"2491\": [1, 2, 2, 4, 0, 0.0918075492531228, 0.0918075492531228, 0.325422400434628, 2], \"1894\": [4, 11, 11, 29, 0.07547191871661688, 0.4655227574940605, 0.4655227574940605, 1.633257783784659, 1], \"1929\": [0, 6, 6, 7, 0, 1.719436582340393, 2.0998148018830474, 2.379546134130174, 2], \"1092\": [1, 2, 2, 4, 0, 0.16917873135476025, 0.16917873135476025, 0.5523478339075513, 2], \"2858\": [1, 2, 2, 2, 0, 0.2561688067457042, 0.2561688067457042, 0.2561688067457042, 2], \"2857\": [1, 2, 2, 2, 0, 0.4274440148269396, 0.4274440148269396, 0.4274440148269396, 2], \"1418\": [2, 3, 3, 3, 0.4013413909243023, 0.7472144018302211, 0.7472144018302211, 0.7472144018302211, 1], \"2101\": [1, 3, 3, 3, 0, 1.5505374715532254, 1.83961549040569, 1.83961549040569, 2], \"610\": [2, 3, 3, 3, 0.08252102368800351, 0.1769307081590782, 0.1769307081590782, 0.1769307081590782, 1], \"2747\": [1, 3, 3, 3, 0, 0.11566150129495613, 0.11566150129495613, 0.11566150129495613, 2], \"570\": [2, 3, 3, 5, 0.02582454680397029, 0.05719474774857283, 0.05719474774857283, 0.15143748173677285, 1], \"1349\": [1, 2, 2, 7, 0, 0.2595111954850846, 0.2595111954850846, 1.5324768712979722, 2], \"1798\": [1, 2, 2, 2, 0, 0.058581901624802396, 0.058581901624802396, 0.058581901624802396, 2], \"2808\": [1, 2, 2, 4, 0, 0.4978384282391795, 0.4978384282391795, 1.2755429968271879, 2], \"3017\": [0, 2, 2, 3, 0, 0.7621400520468967, 0.7621400520468967, 1.2729656758128876, 2], \"1390\": [2, 2, 2, 3, 0.033503971231401815, 0.033503971231401815, 0.033503971231401815, 0.07386457431876098, 1], \"877\": [2, 2, 2, 3, 0.538996500732687, 0.538996500732687, 0.538996500732687, 0.9582549309731873, 1], \"959\": [2, 2, 2, 6, 0.6576404921030354, 0.6576404921030354, 0.6576404921030354, 2.2377364462531206, 1], \"3062\": [2, 2, 2, 4, 0.05564717871439152, 0.05564717871439152, 0.05564717871439152, 0.2061181797504451, 1], \"1918\": [2, 2, 2, 3, 0.6157605169445252, 0.6157605169445252, 0.6157605169445252, 1.0698333241180664, 1], \"1292\": [2, 2, 2, 2, 0.05083686690269261, 0.05083686690269261, 0.05083686690269261, 0.05083686690269261, 1], \"2237\": [2, 2, 2, 2, 0.6061358035703156, 0.6061358035703156, 0.6061358035703156, 0.6061358035703156, 1], \"2265\": [2, 2, 2, 2, 0.4369283775639494, 0.4369283775639494, 0.4369283775639494, 0.4369283775639494, 1], \"1547\": [2, 2, 2, 3, 0.20479441264601322, 0.20479441264601322, 0.20479441264601322, 0.4130123137435473, 1], \"2733\": [3, 3, 3, 3, 0.1755467047088198, 0.1755467047088198, 0.1755467047088198, 0.1755467047088198, 1], \"1794\": [2, 2, 2, 3, 0.7328875092094594, 0.7328875092094594, 0.7328875092094594, 1.2332691738143668, 1], \"2724\": [2, 2, 2, 2, 0.19574457712609533, 0.19574457712609533, 0.19574457712609533, 0.19574457712609533, 1], \"3094\": [2, 2, 2, 4, 0.19574457712609533, 0.19574457712609533, 0.19574457712609533, 0.623188591953035, 1], \"3248\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3252\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2461\": [2, 2, 2, 3, 0.25452986513488046, 0.25452986513488046, 0.25452986513488046, 0.5020919437972361, 1], \"1469\": [2, 2, 2, 4, 0.18658595558041216, 0.18658595558041216, 0.18658595558041216, 0.5991182309116689, 1], \"2271\": [2, 2, 2, 9, 0.06222847139840936, 0.06222847139840936, 0.06222847139840936, 0.8329789090407187, 1], \"3312\": [2, 2, 2, 2, 0.1271551754852466, 0.1271551754852466, 0.1271551754852466, 0.1271551754852466, 1], \"3272\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1604\": [2, 2, 2, 2, 0.1541506798272583, 0.1541506798272583, 0.1541506798272583, 0.1541506798272583, 1], \"3318\": [2, 2, 2, 2, 0.27958486221916157, 0.27958486221916157, 0.27958486221916157, 0.27958486221916157, 1]}"
}