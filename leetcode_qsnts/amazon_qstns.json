{
    "name": "Amazon",
    "slug": "amazon",
    "questions": [
        {
            "status": "ac",
            "questionId": "1",
            "questionFrontendId": "1",
            "title": "Two Sum",
            "titleSlug": "two-sum",
            "acRate": "52.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2",
            "questionFrontendId": "2",
            "title": "Add Two Numbers",
            "titleSlug": "add-two-numbers",
            "acRate": "42.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "3",
            "questionFrontendId": "3",
            "title": "Longest Substring Without Repeating Characters",
            "titleSlug": "longest-substring-without-repeating-characters",
            "acRate": "34.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "4",
            "questionFrontendId": "4",
            "title": "Median of Two Sorted Arrays",
            "titleSlug": "median-of-two-sorted-arrays",
            "acRate": "39.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "5",
            "questionFrontendId": "5",
            "title": "Longest Palindromic Substring",
            "titleSlug": "longest-palindromic-substring",
            "acRate": "33.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "6",
            "questionFrontendId": "6",
            "title": "Zigzag Conversion",
            "titleSlug": "zigzag-conversion",
            "acRate": "47.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "7",
            "questionFrontendId": "7",
            "title": "Reverse Integer",
            "titleSlug": "reverse-integer",
            "acRate": "28.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "8",
            "questionFrontendId": "8",
            "title": "String to Integer (atoi)",
            "titleSlug": "string-to-integer-atoi",
            "acRate": "17.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "9",
            "questionFrontendId": "9",
            "title": "Palindrome Number",
            "titleSlug": "palindrome-number",
            "acRate": "55.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "10",
            "questionFrontendId": "10",
            "title": "Regular Expression Matching",
            "titleSlug": "regular-expression-matching",
            "acRate": "28.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "11",
            "questionFrontendId": "11",
            "title": "Container With Most Water",
            "titleSlug": "container-with-most-water",
            "acRate": "54.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "12",
            "questionFrontendId": "12",
            "title": "Integer to Roman",
            "titleSlug": "integer-to-roman",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "13",
            "questionFrontendId": "13",
            "title": "Roman to Integer",
            "titleSlug": "roman-to-integer",
            "acRate": "60.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "14",
            "questionFrontendId": "14",
            "title": "Longest Common Prefix",
            "titleSlug": "longest-common-prefix",
            "acRate": "42.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "15",
            "questionFrontendId": "15",
            "title": "3Sum",
            "titleSlug": "3sum",
            "acRate": "34.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "16",
            "questionFrontendId": "16",
            "title": "3Sum Closest",
            "titleSlug": "3sum-closest",
            "acRate": "45.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "17",
            "questionFrontendId": "17",
            "title": "Letter Combinations of a Phone Number",
            "titleSlug": "letter-combinations-of-a-phone-number",
            "acRate": "60.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "18",
            "questionFrontendId": "18",
            "title": "4Sum",
            "titleSlug": "4sum",
            "acRate": "36.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "19",
            "questionFrontendId": "19",
            "title": "Remove Nth Node From End of List",
            "titleSlug": "remove-nth-node-from-end-of-list",
            "acRate": "44.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "20",
            "questionFrontendId": "20",
            "title": "Valid Parentheses",
            "titleSlug": "valid-parentheses",
            "acRate": "40.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "21",
            "questionFrontendId": "21",
            "title": "Merge Two Sorted Lists",
            "titleSlug": "merge-two-sorted-lists",
            "acRate": "64.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "22",
            "questionFrontendId": "22",
            "title": "Generate Parentheses",
            "titleSlug": "generate-parentheses",
            "acRate": "74.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "23",
            "questionFrontendId": "23",
            "title": "Merge k Sorted Lists",
            "titleSlug": "merge-k-sorted-lists",
            "acRate": "52.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "24",
            "questionFrontendId": "24",
            "title": "Swap Nodes in Pairs",
            "titleSlug": "swap-nodes-in-pairs",
            "acRate": "64.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "25",
            "questionFrontendId": "25",
            "title": "Reverse Nodes in k-Group",
            "titleSlug": "reverse-nodes-in-k-group",
            "acRate": "58.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "26",
            "questionFrontendId": "26",
            "title": "Remove Duplicates from Sorted Array",
            "titleSlug": "remove-duplicates-from-sorted-array",
            "acRate": "55.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "27",
            "questionFrontendId": "27",
            "title": "Remove Element",
            "titleSlug": "remove-element",
            "acRate": "56.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "28",
            "questionFrontendId": "28",
            "title": "Find the Index of the First Occurrence in a String",
            "titleSlug": "find-the-index-of-the-first-occurrence-in-a-string",
            "acRate": "41.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "29",
            "questionFrontendId": "29",
            "title": "Divide Two Integers",
            "titleSlug": "divide-two-integers",
            "acRate": "17.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "30",
            "questionFrontendId": "30",
            "title": "Substring with Concatenation of All Words",
            "titleSlug": "substring-with-concatenation-of-all-words",
            "acRate": "32.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "31",
            "questionFrontendId": "31",
            "title": "Next Permutation",
            "titleSlug": "next-permutation",
            "acRate": "39.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "32",
            "questionFrontendId": "32",
            "title": "Longest Valid Parentheses",
            "titleSlug": "longest-valid-parentheses",
            "acRate": "33.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "33",
            "questionFrontendId": "33",
            "title": "Search in Rotated Sorted Array",
            "titleSlug": "search-in-rotated-sorted-array",
            "acRate": "40.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "34",
            "questionFrontendId": "34",
            "title": "Find First and Last Position of Element in Sorted Array",
            "titleSlug": "find-first-and-last-position-of-element-in-sorted-array",
            "acRate": "44.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "35",
            "questionFrontendId": "35",
            "title": "Search Insert Position",
            "titleSlug": "search-insert-position",
            "acRate": "45.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "36",
            "questionFrontendId": "36",
            "title": "Valid Sudoku",
            "titleSlug": "valid-sudoku",
            "acRate": "59.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "37",
            "questionFrontendId": "37",
            "title": "Sudoku Solver",
            "titleSlug": "sudoku-solver",
            "acRate": "60.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "38",
            "questionFrontendId": "38",
            "title": "Count and Say",
            "titleSlug": "count-and-say",
            "acRate": "54.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "39",
            "questionFrontendId": "39",
            "title": "Combination Sum",
            "titleSlug": "combination-sum",
            "acRate": "71.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "40",
            "questionFrontendId": "40",
            "title": "Combination Sum II",
            "titleSlug": "combination-sum-ii",
            "acRate": "54.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "41",
            "questionFrontendId": "41",
            "title": "First Missing Positive",
            "titleSlug": "first-missing-positive",
            "acRate": "37.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "42",
            "questionFrontendId": "42",
            "title": "Trapping Rain Water",
            "titleSlug": "trapping-rain-water",
            "acRate": "60.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "43",
            "questionFrontendId": "43",
            "title": "Multiply Strings",
            "titleSlug": "multiply-strings",
            "acRate": "40.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "44",
            "questionFrontendId": "44",
            "title": "Wildcard Matching",
            "titleSlug": "wildcard-matching",
            "acRate": "27.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "45",
            "questionFrontendId": "45",
            "title": "Jump Game II",
            "titleSlug": "jump-game-ii",
            "acRate": "40.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "46",
            "questionFrontendId": "46",
            "title": "Permutations",
            "titleSlug": "permutations",
            "acRate": "78.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "47",
            "questionFrontendId": "47",
            "title": "Permutations II",
            "titleSlug": "permutations-ii",
            "acRate": "58.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "48",
            "questionFrontendId": "48",
            "title": "Rotate Image",
            "titleSlug": "rotate-image",
            "acRate": "73.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "49",
            "questionFrontendId": "49",
            "title": "Group Anagrams",
            "titleSlug": "group-anagrams",
            "acRate": "68.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "50",
            "questionFrontendId": "50",
            "title": "Pow(x, n)",
            "titleSlug": "powx-n",
            "acRate": "34.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "51",
            "questionFrontendId": "51",
            "title": "N-Queens",
            "titleSlug": "n-queens",
            "acRate": "67.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "53",
            "questionFrontendId": "53",
            "title": "Maximum Subarray",
            "titleSlug": "maximum-subarray",
            "acRate": "50.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "54",
            "questionFrontendId": "54",
            "title": "Spiral Matrix",
            "titleSlug": "spiral-matrix",
            "acRate": "48.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "55",
            "questionFrontendId": "55",
            "title": "Jump Game",
            "titleSlug": "jump-game",
            "acRate": "38.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "56",
            "questionFrontendId": "56",
            "title": "Merge Intervals",
            "titleSlug": "merge-intervals",
            "acRate": "47.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "57",
            "questionFrontendId": "57",
            "title": "Insert Interval",
            "titleSlug": "insert-interval",
            "acRate": "40.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "58",
            "questionFrontendId": "58",
            "title": "Length of Last Word",
            "titleSlug": "length-of-last-word",
            "acRate": "49.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "59",
            "questionFrontendId": "59",
            "title": "Spiral Matrix II",
            "titleSlug": "spiral-matrix-ii",
            "acRate": "70.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "60",
            "questionFrontendId": "60",
            "title": "Permutation Sequence",
            "titleSlug": "permutation-sequence",
            "acRate": "46.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "61",
            "questionFrontendId": "61",
            "title": "Rotate List",
            "titleSlug": "rotate-list",
            "acRate": "37.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "62",
            "questionFrontendId": "62",
            "title": "Unique Paths",
            "titleSlug": "unique-paths",
            "acRate": "64.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "63",
            "questionFrontendId": "63",
            "title": "Unique Paths II",
            "titleSlug": "unique-paths-ii",
            "acRate": "41.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "64",
            "questionFrontendId": "64",
            "title": "Minimum Path Sum",
            "titleSlug": "minimum-path-sum",
            "acRate": "63.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "65",
            "questionFrontendId": "65",
            "title": "Valid Number",
            "titleSlug": "valid-number",
            "acRate": "19.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "66",
            "questionFrontendId": "66",
            "title": "Plus One",
            "titleSlug": "plus-one",
            "acRate": "45.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "67",
            "questionFrontendId": "67",
            "title": "Add Binary",
            "titleSlug": "add-binary",
            "acRate": "53.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "68",
            "questionFrontendId": "68",
            "title": "Text Justification",
            "titleSlug": "text-justification",
            "acRate": "42.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "69",
            "questionFrontendId": "69",
            "title": "Sqrt(x)",
            "titleSlug": "sqrtx",
            "acRate": "38.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "70",
            "questionFrontendId": "70",
            "title": "Climbing Stairs",
            "titleSlug": "climbing-stairs",
            "acRate": "52.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "71",
            "questionFrontendId": "71",
            "title": "Simplify Path",
            "titleSlug": "simplify-path",
            "acRate": "41.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "72",
            "questionFrontendId": "72",
            "title": "Edit Distance",
            "titleSlug": "edit-distance",
            "acRate": "56.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "73",
            "questionFrontendId": "73",
            "title": "Set Matrix Zeroes",
            "titleSlug": "set-matrix-zeroes",
            "acRate": "55.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "74",
            "questionFrontendId": "74",
            "title": "Search a 2D Matrix",
            "titleSlug": "search-a-2d-matrix",
            "acRate": "49.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "75",
            "questionFrontendId": "75",
            "title": "Sort Colors",
            "titleSlug": "sort-colors",
            "acRate": "61.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "76",
            "questionFrontendId": "76",
            "title": "Minimum Window Substring",
            "titleSlug": "minimum-window-substring",
            "acRate": "42.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "77",
            "questionFrontendId": "77",
            "title": "Combinations",
            "titleSlug": "combinations",
            "acRate": "70.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "78",
            "questionFrontendId": "78",
            "title": "Subsets",
            "titleSlug": "subsets",
            "acRate": "77.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "79",
            "questionFrontendId": "79",
            "title": "Word Search",
            "titleSlug": "word-search",
            "acRate": "41.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "80",
            "questionFrontendId": "80",
            "title": "Remove Duplicates from Sorted Array II",
            "titleSlug": "remove-duplicates-from-sorted-array-ii",
            "acRate": "57.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "81",
            "questionFrontendId": "81",
            "title": "Search in Rotated Sorted Array II",
            "titleSlug": "search-in-rotated-sorted-array-ii",
            "acRate": "37.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "82",
            "questionFrontendId": "82",
            "title": "Remove Duplicates from Sorted List II",
            "titleSlug": "remove-duplicates-from-sorted-list-ii",
            "acRate": "47.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "83",
            "questionFrontendId": "83",
            "title": "Remove Duplicates from Sorted List",
            "titleSlug": "remove-duplicates-from-sorted-list",
            "acRate": "52.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "84",
            "questionFrontendId": "84",
            "title": "Largest Rectangle in Histogram",
            "titleSlug": "largest-rectangle-in-histogram",
            "acRate": "44.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "85",
            "questionFrontendId": "85",
            "title": "Maximal Rectangle",
            "titleSlug": "maximal-rectangle",
            "acRate": "46.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "86",
            "questionFrontendId": "86",
            "title": "Partition List",
            "titleSlug": "partition-list",
            "acRate": "55.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "87",
            "questionFrontendId": "87",
            "title": "Scramble String",
            "titleSlug": "scramble-string",
            "acRate": "39.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "88",
            "questionFrontendId": "88",
            "title": "Merge Sorted Array",
            "titleSlug": "merge-sorted-array",
            "acRate": "49.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "89",
            "questionFrontendId": "89",
            "title": "Gray Code",
            "titleSlug": "gray-code",
            "acRate": "58.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "90",
            "questionFrontendId": "90",
            "title": "Subsets II",
            "titleSlug": "subsets-ii",
            "acRate": "57.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "91",
            "questionFrontendId": "91",
            "title": "Decode Ways",
            "titleSlug": "decode-ways",
            "acRate": "34.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "92",
            "questionFrontendId": "92",
            "title": "Reverse Linked List II",
            "titleSlug": "reverse-linked-list-ii",
            "acRate": "47.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "93",
            "questionFrontendId": "93",
            "title": "Restore IP Addresses",
            "titleSlug": "restore-ip-addresses",
            "acRate": "49.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "94",
            "questionFrontendId": "94",
            "title": "Binary Tree Inorder Traversal",
            "titleSlug": "binary-tree-inorder-traversal",
            "acRate": "75.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "95",
            "questionFrontendId": "95",
            "title": "Unique Binary Search Trees II",
            "titleSlug": "unique-binary-search-trees-ii",
            "acRate": "57.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "96",
            "questionFrontendId": "96",
            "title": "Unique Binary Search Trees",
            "titleSlug": "unique-binary-search-trees",
            "acRate": "60.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "97",
            "questionFrontendId": "97",
            "title": "Interleaving String",
            "titleSlug": "interleaving-string",
            "acRate": "39.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "98",
            "questionFrontendId": "98",
            "title": "Validate Binary Search Tree",
            "titleSlug": "validate-binary-search-tree",
            "acRate": "32.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "99",
            "questionFrontendId": "99",
            "title": "Recover Binary Search Tree",
            "titleSlug": "recover-binary-search-tree",
            "acRate": "52.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "100",
            "questionFrontendId": "100",
            "title": "Same Tree",
            "titleSlug": "same-tree",
            "acRate": "61.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "101",
            "questionFrontendId": "101",
            "title": "Symmetric Tree",
            "titleSlug": "symmetric-tree",
            "acRate": "56.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "102",
            "questionFrontendId": "102",
            "title": "Binary Tree Level Order Traversal",
            "titleSlug": "binary-tree-level-order-traversal",
            "acRate": "66.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "103",
            "questionFrontendId": "103",
            "title": "Binary Tree Zigzag Level Order Traversal",
            "titleSlug": "binary-tree-zigzag-level-order-traversal",
            "acRate": "58.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "104",
            "questionFrontendId": "104",
            "title": "Maximum Depth of Binary Tree",
            "titleSlug": "maximum-depth-of-binary-tree",
            "acRate": "75.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "105",
            "questionFrontendId": "105",
            "title": "Construct Binary Tree from Preorder and Inorder Traversal",
            "titleSlug": "construct-binary-tree-from-preorder-and-inorder-traversal",
            "acRate": "63.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "106",
            "questionFrontendId": "106",
            "title": "Construct Binary Tree from Inorder and Postorder Traversal",
            "titleSlug": "construct-binary-tree-from-inorder-and-postorder-traversal",
            "acRate": "62.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "107",
            "questionFrontendId": "107",
            "title": "Binary Tree Level Order Traversal II",
            "titleSlug": "binary-tree-level-order-traversal-ii",
            "acRate": "63.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "108",
            "questionFrontendId": "108",
            "title": "Convert Sorted Array to Binary Search Tree",
            "titleSlug": "convert-sorted-array-to-binary-search-tree",
            "acRate": "71.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "109",
            "questionFrontendId": "109",
            "title": "Convert Sorted List to Binary Search Tree",
            "titleSlug": "convert-sorted-list-to-binary-search-tree",
            "acRate": "61.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "110",
            "questionFrontendId": "110",
            "title": "Balanced Binary Tree",
            "titleSlug": "balanced-binary-tree",
            "acRate": "51.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "111",
            "questionFrontendId": "111",
            "title": "Minimum Depth of Binary Tree",
            "titleSlug": "minimum-depth-of-binary-tree",
            "acRate": "47.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "112",
            "questionFrontendId": "112",
            "title": "Path Sum",
            "titleSlug": "path-sum",
            "acRate": "50.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "113",
            "questionFrontendId": "113",
            "title": "Path Sum II",
            "titleSlug": "path-sum-ii",
            "acRate": "58.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "114",
            "questionFrontendId": "114",
            "title": "Flatten Binary Tree to Linked List",
            "titleSlug": "flatten-binary-tree-to-linked-list",
            "acRate": "64.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "115",
            "questionFrontendId": "115",
            "title": "Distinct Subsequences",
            "titleSlug": "distinct-subsequences",
            "acRate": "46.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "116",
            "questionFrontendId": "116",
            "title": "Populating Next Right Pointers in Each Node",
            "titleSlug": "populating-next-right-pointers-in-each-node",
            "acRate": "62.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "117",
            "questionFrontendId": "117",
            "title": "Populating Next Right Pointers in Each Node II",
            "titleSlug": "populating-next-right-pointers-in-each-node-ii",
            "acRate": "52.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "118",
            "questionFrontendId": "118",
            "title": "Pascal's Triangle",
            "titleSlug": "pascals-triangle",
            "acRate": "73.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "119",
            "questionFrontendId": "119",
            "title": "Pascal's Triangle II",
            "titleSlug": "pascals-triangle-ii",
            "acRate": "63.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "120",
            "questionFrontendId": "120",
            "title": "Triangle",
            "titleSlug": "triangle",
            "acRate": "56.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "121",
            "questionFrontendId": "121",
            "title": "Best Time to Buy and Sell Stock",
            "titleSlug": "best-time-to-buy-and-sell-stock",
            "acRate": "53.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "122",
            "questionFrontendId": "122",
            "title": "Best Time to Buy and Sell Stock II",
            "titleSlug": "best-time-to-buy-and-sell-stock-ii",
            "acRate": "66.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "123",
            "questionFrontendId": "123",
            "title": "Best Time to Buy and Sell Stock III",
            "titleSlug": "best-time-to-buy-and-sell-stock-iii",
            "acRate": "47.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "124",
            "questionFrontendId": "124",
            "title": "Binary Tree Maximum Path Sum",
            "titleSlug": "binary-tree-maximum-path-sum",
            "acRate": "39.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "125",
            "questionFrontendId": "125",
            "title": "Valid Palindrome",
            "titleSlug": "valid-palindrome",
            "acRate": "47.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "126",
            "questionFrontendId": "126",
            "title": "Word Ladder II",
            "titleSlug": "word-ladder-ii",
            "acRate": "27.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "127",
            "questionFrontendId": "127",
            "title": "Word Ladder",
            "titleSlug": "word-ladder",
            "acRate": "38.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "128",
            "questionFrontendId": "128",
            "title": "Longest Consecutive Sequence",
            "titleSlug": "longest-consecutive-sequence",
            "acRate": "47.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "129",
            "questionFrontendId": "129",
            "title": "Sum Root to Leaf Numbers",
            "titleSlug": "sum-root-to-leaf-numbers",
            "acRate": "63.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "130",
            "questionFrontendId": "130",
            "title": "Surrounded Regions",
            "titleSlug": "surrounded-regions",
            "acRate": "39.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "131",
            "questionFrontendId": "131",
            "title": "Palindrome Partitioning",
            "titleSlug": "palindrome-partitioning",
            "acRate": "67.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "132",
            "questionFrontendId": "132",
            "title": "Palindrome Partitioning II",
            "titleSlug": "palindrome-partitioning-ii",
            "acRate": "33.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "133",
            "questionFrontendId": "133",
            "title": "Clone Graph",
            "titleSlug": "clone-graph",
            "acRate": "56.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "134",
            "questionFrontendId": "134",
            "title": "Gas Station",
            "titleSlug": "gas-station",
            "acRate": "45.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "135",
            "questionFrontendId": "135",
            "title": "Candy",
            "titleSlug": "candy",
            "acRate": "43.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "136",
            "questionFrontendId": "136",
            "title": "Single Number",
            "titleSlug": "single-number",
            "acRate": "72.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "137",
            "questionFrontendId": "137",
            "title": "Single Number II",
            "titleSlug": "single-number-ii",
            "acRate": "62.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "138",
            "questionFrontendId": "138",
            "title": "Copy List with Random Pointer",
            "titleSlug": "copy-list-with-random-pointer",
            "acRate": "55.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "139",
            "questionFrontendId": "139",
            "title": "Word Break",
            "titleSlug": "word-break",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "140",
            "questionFrontendId": "140",
            "title": "Word Break II",
            "titleSlug": "word-break-ii",
            "acRate": "47.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "141",
            "questionFrontendId": "141",
            "title": "Linked List Cycle",
            "titleSlug": "linked-list-cycle",
            "acRate": "49.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "142",
            "questionFrontendId": "142",
            "title": "Linked List Cycle II",
            "titleSlug": "linked-list-cycle-ii",
            "acRate": "50.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "143",
            "questionFrontendId": "143",
            "title": "Reorder List",
            "titleSlug": "reorder-list",
            "acRate": "56.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "144",
            "questionFrontendId": "144",
            "title": "Binary Tree Preorder Traversal",
            "titleSlug": "binary-tree-preorder-traversal",
            "acRate": "69.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "145",
            "questionFrontendId": "145",
            "title": "Binary Tree Postorder Traversal",
            "titleSlug": "binary-tree-postorder-traversal",
            "acRate": "70.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "146",
            "questionFrontendId": "146",
            "title": "LRU Cache",
            "titleSlug": "lru-cache",
            "acRate": "42.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "148",
            "questionFrontendId": "148",
            "title": "Sort List",
            "titleSlug": "sort-list",
            "acRate": "57.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "149",
            "questionFrontendId": "149",
            "title": "Max Points on a Line",
            "titleSlug": "max-points-on-a-line",
            "acRate": "26.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "150",
            "questionFrontendId": "150",
            "title": "Evaluate Reverse Polish Notation",
            "titleSlug": "evaluate-reverse-polish-notation",
            "acRate": "51.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "151",
            "questionFrontendId": "151",
            "title": "Reverse Words in a String",
            "titleSlug": "reverse-words-in-a-string",
            "acRate": "40.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "152",
            "questionFrontendId": "152",
            "title": "Maximum Product Subarray",
            "titleSlug": "maximum-product-subarray",
            "acRate": "35.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "153",
            "questionFrontendId": "153",
            "title": "Find Minimum in Rotated Sorted Array",
            "titleSlug": "find-minimum-in-rotated-sorted-array",
            "acRate": "50.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "155",
            "questionFrontendId": "155",
            "title": "Min Stack",
            "titleSlug": "min-stack",
            "acRate": "53.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "157",
            "questionFrontendId": "157",
            "title": "Read N Characters Given Read4",
            "titleSlug": "read-n-characters-given-read4",
            "acRate": "41.4%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "159",
            "questionFrontendId": "159",
            "title": "Longest Substring with At Most Two Distinct Characters",
            "titleSlug": "longest-substring-with-at-most-two-distinct-characters",
            "acRate": "54.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "160",
            "questionFrontendId": "160",
            "title": "Intersection of Two Linked Lists",
            "titleSlug": "intersection-of-two-linked-lists",
            "acRate": "57.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "161",
            "questionFrontendId": "161",
            "title": "One Edit Distance",
            "titleSlug": "one-edit-distance",
            "acRate": "34.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "162",
            "questionFrontendId": "162",
            "title": "Find Peak Element",
            "titleSlug": "find-peak-element",
            "acRate": "45.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "165",
            "questionFrontendId": "165",
            "title": "Compare Version Numbers",
            "titleSlug": "compare-version-numbers",
            "acRate": "36.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "167",
            "questionFrontendId": "167",
            "title": "Two Sum II - Input Array Is Sorted",
            "titleSlug": "two-sum-ii-input-array-is-sorted",
            "acRate": "61.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "168",
            "questionFrontendId": "168",
            "title": "Excel Sheet Column Title",
            "titleSlug": "excel-sheet-column-title",
            "acRate": "40.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "169",
            "questionFrontendId": "169",
            "title": "Majority Element",
            "titleSlug": "majority-element",
            "acRate": "64.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "171",
            "questionFrontendId": "171",
            "title": "Excel Sheet Column Number",
            "titleSlug": "excel-sheet-column-number",
            "acRate": "63.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "173",
            "questionFrontendId": "173",
            "title": "Binary Search Tree Iterator",
            "titleSlug": "binary-search-tree-iterator",
            "acRate": "71.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "175",
            "questionFrontendId": "175",
            "title": "Combine Two Tables",
            "titleSlug": "combine-two-tables",
            "acRate": "75.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "176",
            "questionFrontendId": "176",
            "title": "Second Highest Salary",
            "titleSlug": "second-highest-salary",
            "acRate": "39.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "177",
            "questionFrontendId": "177",
            "title": "Nth Highest Salary",
            "titleSlug": "nth-highest-salary",
            "acRate": "38.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "178",
            "questionFrontendId": "178",
            "title": "Rank Scores",
            "titleSlug": "rank-scores",
            "acRate": "61.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "179",
            "questionFrontendId": "179",
            "title": "Largest Number",
            "titleSlug": "largest-number",
            "acRate": "35.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "180",
            "questionFrontendId": "180",
            "title": "Consecutive Numbers",
            "titleSlug": "consecutive-numbers",
            "acRate": "47.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "181",
            "questionFrontendId": "181",
            "title": "Employees Earning More Than Their Managers",
            "titleSlug": "employees-earning-more-than-their-managers",
            "acRate": "69.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "182",
            "questionFrontendId": "182",
            "title": "Duplicate Emails",
            "titleSlug": "duplicate-emails",
            "acRate": "70.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "183",
            "questionFrontendId": "183",
            "title": "Customers Who Never Order",
            "titleSlug": "customers-who-never-order",
            "acRate": "68.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "184",
            "questionFrontendId": "184",
            "title": "Department Highest Salary",
            "titleSlug": "department-highest-salary",
            "acRate": "51.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "185",
            "questionFrontendId": "185",
            "title": "Department Top Three Salaries",
            "titleSlug": "department-top-three-salaries",
            "acRate": "52.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "186",
            "questionFrontendId": "186",
            "title": "Reverse Words in a String II",
            "titleSlug": "reverse-words-in-a-string-ii",
            "acRate": "54.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "187",
            "questionFrontendId": "187",
            "title": "Repeated DNA Sequences",
            "titleSlug": "repeated-dna-sequences",
            "acRate": "48.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "188",
            "questionFrontendId": "188",
            "title": "Best Time to Buy and Sell Stock IV",
            "titleSlug": "best-time-to-buy-and-sell-stock-iv",
            "acRate": "42.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "189",
            "questionFrontendId": "189",
            "title": "Rotate Array",
            "titleSlug": "rotate-array",
            "acRate": "40.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "190",
            "questionFrontendId": "190",
            "title": "Reverse Bits",
            "titleSlug": "reverse-bits",
            "acRate": "57.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "191",
            "questionFrontendId": "191",
            "title": "Number of 1 Bits",
            "titleSlug": "number-of-1-bits",
            "acRate": "70.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "192",
            "questionFrontendId": "192",
            "title": "Word Frequency",
            "titleSlug": "word-frequency",
            "acRate": "25.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Shell",
                    "slug": "shell"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "193",
            "questionFrontendId": "193",
            "title": "Valid Phone Numbers",
            "titleSlug": "valid-phone-numbers",
            "acRate": "25.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Shell",
                    "slug": "shell"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "196",
            "questionFrontendId": "196",
            "title": "Delete Duplicate Emails",
            "titleSlug": "delete-duplicate-emails",
            "acRate": "61.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "197",
            "questionFrontendId": "197",
            "title": "Rising Temperature",
            "titleSlug": "rising-temperature",
            "acRate": "46.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "198",
            "questionFrontendId": "198",
            "title": "House Robber",
            "titleSlug": "house-robber",
            "acRate": "50.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "199",
            "questionFrontendId": "199",
            "title": "Binary Tree Right Side View",
            "titleSlug": "binary-tree-right-side-view",
            "acRate": "62.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "200",
            "questionFrontendId": "200",
            "title": "Number of Islands",
            "titleSlug": "number-of-islands",
            "acRate": "58.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "201",
            "questionFrontendId": "201",
            "title": "Bitwise AND of Numbers Range",
            "titleSlug": "bitwise-and-of-numbers-range",
            "acRate": "46.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "202",
            "questionFrontendId": "202",
            "title": "Happy Number",
            "titleSlug": "happy-number",
            "acRate": "55.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "203",
            "questionFrontendId": "203",
            "title": "Remove Linked List Elements",
            "titleSlug": "remove-linked-list-elements",
            "acRate": "48.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "204",
            "questionFrontendId": "204",
            "title": "Count Primes",
            "titleSlug": "count-primes",
            "acRate": "33.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "205",
            "questionFrontendId": "205",
            "title": "Isomorphic Strings",
            "titleSlug": "isomorphic-strings",
            "acRate": "43.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "206",
            "questionFrontendId": "206",
            "title": "Reverse Linked List",
            "titleSlug": "reverse-linked-list",
            "acRate": "75.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "207",
            "questionFrontendId": "207",
            "title": "Course Schedule",
            "titleSlug": "course-schedule",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "208",
            "questionFrontendId": "208",
            "title": "Implement Trie (Prefix Tree)",
            "titleSlug": "implement-trie-prefix-tree",
            "acRate": "64.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "209",
            "questionFrontendId": "209",
            "title": "Minimum Size Subarray Sum",
            "titleSlug": "minimum-size-subarray-sum",
            "acRate": "46.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "210",
            "questionFrontendId": "210",
            "title": "Course Schedule II",
            "titleSlug": "course-schedule-ii",
            "acRate": "50.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "211",
            "questionFrontendId": "211",
            "title": "Design Add and Search Words Data Structure",
            "titleSlug": "design-add-and-search-words-data-structure",
            "acRate": "45.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "212",
            "questionFrontendId": "212",
            "title": "Word Search II",
            "titleSlug": "word-search-ii",
            "acRate": "36.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "213",
            "questionFrontendId": "213",
            "title": "House Robber II",
            "titleSlug": "house-robber-ii",
            "acRate": "41.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "214",
            "questionFrontendId": "214",
            "title": "Shortest Palindrome",
            "titleSlug": "shortest-palindrome",
            "acRate": "33.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "215",
            "questionFrontendId": "215",
            "title": "Kth Largest Element in an Array",
            "titleSlug": "kth-largest-element-in-an-array",
            "acRate": "66.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "216",
            "questionFrontendId": "216",
            "title": "Combination Sum III",
            "titleSlug": "combination-sum-iii",
            "acRate": "69.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "217",
            "questionFrontendId": "217",
            "title": "Contains Duplicate",
            "titleSlug": "contains-duplicate",
            "acRate": "61.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "218",
            "questionFrontendId": "218",
            "title": "The Skyline Problem",
            "titleSlug": "the-skyline-problem",
            "acRate": "42.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Line Sweep",
                    "slug": "line-sweep"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "219",
            "questionFrontendId": "219",
            "title": "Contains Duplicate II",
            "titleSlug": "contains-duplicate-ii",
            "acRate": "44.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "220",
            "questionFrontendId": "220",
            "title": "Contains Duplicate III",
            "titleSlug": "contains-duplicate-iii",
            "acRate": "22.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "221",
            "questionFrontendId": "221",
            "title": "Maximal Square",
            "titleSlug": "maximal-square",
            "acRate": "46.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "222",
            "questionFrontendId": "222",
            "title": "Count Complete Tree Nodes",
            "titleSlug": "count-complete-tree-nodes",
            "acRate": "64.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "223",
            "questionFrontendId": "223",
            "title": "Rectangle Area",
            "titleSlug": "rectangle-area",
            "acRate": "46.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "224",
            "questionFrontendId": "224",
            "title": "Basic Calculator",
            "titleSlug": "basic-calculator",
            "acRate": "43.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "225",
            "questionFrontendId": "225",
            "title": "Implement Stack using Queues",
            "titleSlug": "implement-stack-using-queues",
            "acRate": "63.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "226",
            "questionFrontendId": "226",
            "title": "Invert Binary Tree",
            "titleSlug": "invert-binary-tree",
            "acRate": "76.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "227",
            "questionFrontendId": "227",
            "title": "Basic Calculator II",
            "titleSlug": "basic-calculator-ii",
            "acRate": "43.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "228",
            "questionFrontendId": "228",
            "title": "Summary Ranges",
            "titleSlug": "summary-ranges",
            "acRate": "50.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "229",
            "questionFrontendId": "229",
            "title": "Majority Element II",
            "titleSlug": "majority-element-ii",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "230",
            "questionFrontendId": "230",
            "title": "Kth Smallest Element in a BST",
            "titleSlug": "kth-smallest-element-in-a-bst",
            "acRate": "72.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "231",
            "questionFrontendId": "231",
            "title": "Power of Two",
            "titleSlug": "power-of-two",
            "acRate": "47.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "232",
            "questionFrontendId": "232",
            "title": "Implement Queue using Stacks",
            "titleSlug": "implement-queue-using-stacks",
            "acRate": "66.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "233",
            "questionFrontendId": "233",
            "title": "Number of Digit One",
            "titleSlug": "number-of-digit-one",
            "acRate": "34.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "234",
            "questionFrontendId": "234",
            "title": "Palindrome Linked List",
            "titleSlug": "palindrome-linked-list",
            "acRate": "51.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "235",
            "questionFrontendId": "235",
            "title": "Lowest Common Ancestor of a Binary Search Tree",
            "titleSlug": "lowest-common-ancestor-of-a-binary-search-tree",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "236",
            "questionFrontendId": "236",
            "title": "Lowest Common Ancestor of a Binary Tree",
            "titleSlug": "lowest-common-ancestor-of-a-binary-tree",
            "acRate": "61.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "237",
            "questionFrontendId": "237",
            "title": "Delete Node in a Linked List",
            "titleSlug": "delete-node-in-a-linked-list",
            "acRate": "78.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "238",
            "questionFrontendId": "238",
            "title": "Product of Array Except Self",
            "titleSlug": "product-of-array-except-self",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "239",
            "questionFrontendId": "239",
            "title": "Sliding Window Maximum",
            "titleSlug": "sliding-window-maximum",
            "acRate": "46.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "240",
            "questionFrontendId": "240",
            "title": "Search a 2D Matrix II",
            "titleSlug": "search-a-2d-matrix-ii",
            "acRate": "52.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "241",
            "questionFrontendId": "241",
            "title": "Different Ways to Add Parentheses",
            "titleSlug": "different-ways-to-add-parentheses",
            "acRate": "65.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "242",
            "questionFrontendId": "242",
            "title": "Valid Anagram",
            "titleSlug": "valid-anagram",
            "acRate": "64.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "243",
            "questionFrontendId": "243",
            "title": "Shortest Word Distance",
            "titleSlug": "shortest-word-distance",
            "acRate": "65.3%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "244",
            "questionFrontendId": "244",
            "title": "Shortest Word Distance II",
            "titleSlug": "shortest-word-distance-ii",
            "acRate": "61.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "249",
            "questionFrontendId": "249",
            "title": "Group Shifted Strings",
            "titleSlug": "group-shifted-strings",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "252",
            "questionFrontendId": "252",
            "title": "Meeting Rooms",
            "titleSlug": "meeting-rooms",
            "acRate": "57.9%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "253",
            "questionFrontendId": "253",
            "title": "Meeting Rooms II",
            "titleSlug": "meeting-rooms-ii",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "255",
            "questionFrontendId": "255",
            "title": "Verify Preorder Sequence in Binary Search Tree",
            "titleSlug": "verify-preorder-sequence-in-binary-search-tree",
            "acRate": "48.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "256",
            "questionFrontendId": "256",
            "title": "Paint House",
            "titleSlug": "paint-house",
            "acRate": "62.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "257",
            "questionFrontendId": "257",
            "title": "Binary Tree Paths",
            "titleSlug": "binary-tree-paths",
            "acRate": "63.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "258",
            "questionFrontendId": "258",
            "title": "Add Digits",
            "titleSlug": "add-digits",
            "acRate": "66.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "261",
            "questionFrontendId": "261",
            "title": "Graph Valid Tree",
            "titleSlug": "graph-valid-tree",
            "acRate": "47.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "262",
            "questionFrontendId": "262",
            "title": "Trips and Users",
            "titleSlug": "trips-and-users",
            "acRate": "36.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "263",
            "questionFrontendId": "263",
            "title": "Ugly Number",
            "titleSlug": "ugly-number",
            "acRate": "42.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "265",
            "questionFrontendId": "265",
            "title": "Paint House II",
            "titleSlug": "paint-house-ii",
            "acRate": "54.5%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "267",
            "questionFrontendId": "267",
            "title": "Palindrome Permutation II",
            "titleSlug": "palindrome-permutation-ii",
            "acRate": "41.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "268",
            "questionFrontendId": "268",
            "title": "Missing Number",
            "titleSlug": "missing-number",
            "acRate": "66.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "269",
            "questionFrontendId": "269",
            "title": "Alien Dictionary",
            "titleSlug": "alien-dictionary",
            "acRate": "35.7%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "270",
            "questionFrontendId": "270",
            "title": "Closest Binary Search Tree Value",
            "titleSlug": "closest-binary-search-tree-value",
            "acRate": "52.1%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "271",
            "questionFrontendId": "271",
            "title": "Encode and Decode Strings",
            "titleSlug": "encode-and-decode-strings",
            "acRate": "46.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "272",
            "questionFrontendId": "272",
            "title": "Closest Binary Search Tree Value II",
            "titleSlug": "closest-binary-search-tree-value-ii",
            "acRate": "58.9%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "273",
            "questionFrontendId": "273",
            "title": "Integer to English Words",
            "titleSlug": "integer-to-english-words",
            "acRate": "30.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "274",
            "questionFrontendId": "274",
            "title": "H-Index",
            "titleSlug": "h-index",
            "acRate": "38.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting Sort",
                    "slug": "counting-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "275",
            "questionFrontendId": "275",
            "title": "H-Index II",
            "titleSlug": "h-index-ii",
            "acRate": "38.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "277",
            "questionFrontendId": "277",
            "title": "Find the Celebrity",
            "titleSlug": "find-the-celebrity",
            "acRate": "47.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "278",
            "questionFrontendId": "278",
            "title": "First Bad Version",
            "titleSlug": "first-bad-version",
            "acRate": "44.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "279",
            "questionFrontendId": "279",
            "title": "Perfect Squares",
            "titleSlug": "perfect-squares",
            "acRate": "54.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "280",
            "questionFrontendId": "280",
            "title": "Wiggle Sort",
            "titleSlug": "wiggle-sort",
            "acRate": "67.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "282",
            "questionFrontendId": "282",
            "title": "Expression Add Operators",
            "titleSlug": "expression-add-operators",
            "acRate": "39.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "283",
            "questionFrontendId": "283",
            "title": "Move Zeroes",
            "titleSlug": "move-zeroes",
            "acRate": "61.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "286",
            "questionFrontendId": "286",
            "title": "Walls and Gates",
            "titleSlug": "walls-and-gates",
            "acRate": "61.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "287",
            "questionFrontendId": "287",
            "title": "Find the Duplicate Number",
            "titleSlug": "find-the-duplicate-number",
            "acRate": "59.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "289",
            "questionFrontendId": "289",
            "title": "Game of Life",
            "titleSlug": "game-of-life",
            "acRate": "68.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "290",
            "questionFrontendId": "290",
            "title": "Word Pattern",
            "titleSlug": "word-pattern",
            "acRate": "41.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "295",
            "questionFrontendId": "295",
            "title": "Find Median from Data Stream",
            "titleSlug": "find-median-from-data-stream",
            "acRate": "51.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "297",
            "questionFrontendId": "297",
            "title": "Serialize and Deserialize Binary Tree",
            "titleSlug": "serialize-and-deserialize-binary-tree",
            "acRate": "56.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "298",
            "questionFrontendId": "298",
            "title": "Binary Tree Longest Consecutive Sequence",
            "titleSlug": "binary-tree-longest-consecutive-sequence",
            "acRate": "53.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "299",
            "questionFrontendId": "299",
            "title": "Bulls and Cows",
            "titleSlug": "bulls-and-cows",
            "acRate": "50.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "300",
            "questionFrontendId": "300",
            "title": "Longest Increasing Subsequence",
            "titleSlug": "longest-increasing-subsequence",
            "acRate": "55.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "301",
            "questionFrontendId": "301",
            "title": "Remove Invalid Parentheses",
            "titleSlug": "remove-invalid-parentheses",
            "acRate": "48.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "303",
            "questionFrontendId": "303",
            "title": "Range Sum Query - Immutable",
            "titleSlug": "range-sum-query-immutable",
            "acRate": "62.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "304",
            "questionFrontendId": "304",
            "title": "Range Sum Query 2D - Immutable",
            "titleSlug": "range-sum-query-2d-immutable",
            "acRate": "54.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "305",
            "questionFrontendId": "305",
            "title": "Number of Islands II",
            "titleSlug": "number-of-islands-ii",
            "acRate": "39.6%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "307",
            "questionFrontendId": "307",
            "title": "Range Sum Query - Mutable",
            "titleSlug": "range-sum-query-mutable",
            "acRate": "40.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "309",
            "questionFrontendId": "309",
            "title": "Best Time to Buy and Sell Stock with Cooldown",
            "titleSlug": "best-time-to-buy-and-sell-stock-with-cooldown",
            "acRate": "57.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "310",
            "questionFrontendId": "310",
            "title": "Minimum Height Trees",
            "titleSlug": "minimum-height-trees",
            "acRate": "38.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "312",
            "questionFrontendId": "312",
            "title": "Burst Balloons",
            "titleSlug": "burst-balloons",
            "acRate": "58.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "314",
            "questionFrontendId": "314",
            "title": "Binary Tree Vertical Order Traversal",
            "titleSlug": "binary-tree-vertical-order-traversal",
            "acRate": "53.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "315",
            "questionFrontendId": "315",
            "title": "Count of Smaller Numbers After Self",
            "titleSlug": "count-of-smaller-numbers-after-self",
            "acRate": "42.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "316",
            "questionFrontendId": "316",
            "title": "Remove Duplicate Letters",
            "titleSlug": "remove-duplicate-letters",
            "acRate": "49.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "318",
            "questionFrontendId": "318",
            "title": "Maximum Product of Word Lengths",
            "titleSlug": "maximum-product-of-word-lengths",
            "acRate": "59.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "319",
            "questionFrontendId": "319",
            "title": "Bulb Switcher",
            "titleSlug": "bulb-switcher",
            "acRate": "52.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Brainteaser",
                    "slug": "brainteaser"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "322",
            "questionFrontendId": "322",
            "title": "Coin Change",
            "titleSlug": "coin-change",
            "acRate": "43.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "323",
            "questionFrontendId": "323",
            "title": "Number of Connected Components in an Undirected Graph",
            "titleSlug": "number-of-connected-components-in-an-undirected-graph",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "324",
            "questionFrontendId": "324",
            "title": "Wiggle Sort II",
            "titleSlug": "wiggle-sort-ii",
            "acRate": "34.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "325",
            "questionFrontendId": "325",
            "title": "Maximum Size Subarray Sum Equals k",
            "titleSlug": "maximum-size-subarray-sum-equals-k",
            "acRate": "49.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "326",
            "questionFrontendId": "326",
            "title": "Power of Three",
            "titleSlug": "power-of-three",
            "acRate": "46.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "327",
            "questionFrontendId": "327",
            "title": "Count of Range Sum",
            "titleSlug": "count-of-range-sum",
            "acRate": "35.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "328",
            "questionFrontendId": "328",
            "title": "Odd Even Linked List",
            "titleSlug": "odd-even-linked-list",
            "acRate": "61.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "329",
            "questionFrontendId": "329",
            "title": "Longest Increasing Path in a Matrix",
            "titleSlug": "longest-increasing-path-in-a-matrix",
            "acRate": "53.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "332",
            "questionFrontendId": "332",
            "title": "Reconstruct Itinerary",
            "titleSlug": "reconstruct-itinerary",
            "acRate": "43.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Eulerian Circuit",
                    "slug": "eulerian-circuit"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "333",
            "questionFrontendId": "333",
            "title": "Largest BST Subtree",
            "titleSlug": "largest-bst-subtree",
            "acRate": "43.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "334",
            "questionFrontendId": "334",
            "title": "Increasing Triplet Subsequence",
            "titleSlug": "increasing-triplet-subsequence",
            "acRate": "40.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "336",
            "questionFrontendId": "336",
            "title": "Palindrome Pairs",
            "titleSlug": "palindrome-pairs",
            "acRate": "35.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "337",
            "questionFrontendId": "337",
            "title": "House Robber III",
            "titleSlug": "house-robber-iii",
            "acRate": "54.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "338",
            "questionFrontendId": "338",
            "title": "Counting Bits",
            "titleSlug": "counting-bits",
            "acRate": "78.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "339",
            "questionFrontendId": "339",
            "title": "Nested List Weight Sum",
            "titleSlug": "nested-list-weight-sum",
            "acRate": "83.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "340",
            "questionFrontendId": "340",
            "title": "Longest Substring with At Most K Distinct Characters",
            "titleSlug": "longest-substring-with-at-most-k-distinct-characters",
            "acRate": "48.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "341",
            "questionFrontendId": "341",
            "title": "Flatten Nested List Iterator",
            "titleSlug": "flatten-nested-list-iterator",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "342",
            "questionFrontendId": "342",
            "title": "Power of Four",
            "titleSlug": "power-of-four",
            "acRate": "47.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "343",
            "questionFrontendId": "343",
            "title": "Integer Break",
            "titleSlug": "integer-break",
            "acRate": "60.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "344",
            "questionFrontendId": "344",
            "title": "Reverse String",
            "titleSlug": "reverse-string",
            "acRate": "77.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "345",
            "questionFrontendId": "345",
            "title": "Reverse Vowels of a String",
            "titleSlug": "reverse-vowels-of-a-string",
            "acRate": "52.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "346",
            "questionFrontendId": "346",
            "title": "Moving Average from Data Stream",
            "titleSlug": "moving-average-from-data-stream",
            "acRate": "78.1%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "347",
            "questionFrontendId": "347",
            "title": "Top K Frequent Elements",
            "titleSlug": "top-k-frequent-elements",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "348",
            "questionFrontendId": "348",
            "title": "Design Tic-Tac-Toe",
            "titleSlug": "design-tic-tac-toe",
            "acRate": "57.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "349",
            "questionFrontendId": "349",
            "title": "Intersection of Two Arrays",
            "titleSlug": "intersection-of-two-arrays",
            "acRate": "72.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "350",
            "questionFrontendId": "350",
            "title": "Intersection of Two Arrays II",
            "titleSlug": "intersection-of-two-arrays-ii",
            "acRate": "56.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "352",
            "questionFrontendId": "352",
            "title": "Data Stream as Disjoint Intervals",
            "titleSlug": "data-stream-as-disjoint-intervals",
            "acRate": "60.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "353",
            "questionFrontendId": "353",
            "title": "Design Snake Game",
            "titleSlug": "design-snake-game",
            "acRate": "38.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "354",
            "questionFrontendId": "354",
            "title": "Russian Doll Envelopes",
            "titleSlug": "russian-doll-envelopes",
            "acRate": "37.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "355",
            "questionFrontendId": "355",
            "title": "Design Twitter",
            "titleSlug": "design-twitter",
            "acRate": "39.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "359",
            "questionFrontendId": "359",
            "title": "Logger Rate Limiter",
            "titleSlug": "logger-rate-limiter",
            "acRate": "75.8%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "362",
            "questionFrontendId": "362",
            "title": "Design Hit Counter",
            "titleSlug": "design-hit-counter",
            "acRate": "68.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "363",
            "questionFrontendId": "363",
            "title": "Max Sum of Rectangle No Larger Than K",
            "titleSlug": "max-sum-of-rectangle-no-larger-than-k",
            "acRate": "44.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "366",
            "questionFrontendId": "366",
            "title": "Find Leaves of Binary Tree",
            "titleSlug": "find-leaves-of-binary-tree",
            "acRate": "80.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "367",
            "questionFrontendId": "367",
            "title": "Valid Perfect Square",
            "titleSlug": "valid-perfect-square",
            "acRate": "43.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "368",
            "questionFrontendId": "368",
            "title": "Largest Divisible Subset",
            "titleSlug": "largest-divisible-subset",
            "acRate": "45.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "370",
            "questionFrontendId": "370",
            "title": "Range Addition",
            "titleSlug": "range-addition",
            "acRate": "71.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "371",
            "questionFrontendId": "371",
            "title": "Sum of Two Integers",
            "titleSlug": "sum-of-two-integers",
            "acRate": "51.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "373",
            "questionFrontendId": "373",
            "title": "Find K Pairs with Smallest Sums",
            "titleSlug": "find-k-pairs-with-smallest-sums",
            "acRate": "40.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "374",
            "questionFrontendId": "374",
            "title": "Guess Number Higher or Lower",
            "titleSlug": "guess-number-higher-or-lower",
            "acRate": "53.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "376",
            "questionFrontendId": "376",
            "title": "Wiggle Subsequence",
            "titleSlug": "wiggle-subsequence",
            "acRate": "48.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "377",
            "questionFrontendId": "377",
            "title": "Combination Sum IV",
            "titleSlug": "combination-sum-iv",
            "acRate": "54.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "378",
            "questionFrontendId": "378",
            "title": "Kth Smallest Element in a Sorted Matrix",
            "titleSlug": "kth-smallest-element-in-a-sorted-matrix",
            "acRate": "62.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "380",
            "questionFrontendId": "380",
            "title": "Insert Delete GetRandom O(1)",
            "titleSlug": "insert-delete-getrandom-o1",
            "acRate": "54.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "381",
            "questionFrontendId": "381",
            "title": "Insert Delete GetRandom O(1) - Duplicates allowed",
            "titleSlug": "insert-delete-getrandom-o1-duplicates-allowed",
            "acRate": "35.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "383",
            "questionFrontendId": "383",
            "title": "Ransom Note",
            "titleSlug": "ransom-note",
            "acRate": "60.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "386",
            "questionFrontendId": "386",
            "title": "Lexicographical Numbers",
            "titleSlug": "lexicographical-numbers",
            "acRate": "63.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "387",
            "questionFrontendId": "387",
            "title": "First Unique Character in a String",
            "titleSlug": "first-unique-character-in-a-string",
            "acRate": "62.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "388",
            "questionFrontendId": "388",
            "title": "Longest Absolute File Path",
            "titleSlug": "longest-absolute-file-path",
            "acRate": "47.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "389",
            "questionFrontendId": "389",
            "title": "Find the Difference",
            "titleSlug": "find-the-difference",
            "acRate": "59.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "390",
            "questionFrontendId": "390",
            "title": "Elimination Game",
            "titleSlug": "elimination-game",
            "acRate": "45.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "392",
            "questionFrontendId": "392",
            "title": "Is Subsequence",
            "titleSlug": "is-subsequence",
            "acRate": "47.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "393",
            "questionFrontendId": "393",
            "title": "UTF-8 Validation",
            "titleSlug": "utf-8-validation",
            "acRate": "45.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "394",
            "questionFrontendId": "394",
            "title": "Decode String",
            "titleSlug": "decode-string",
            "acRate": "59.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "395",
            "questionFrontendId": "395",
            "title": "Longest Substring with At Least K Repeating Characters",
            "titleSlug": "longest-substring-with-at-least-k-repeating-characters",
            "acRate": "44.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "396",
            "questionFrontendId": "396",
            "title": "Rotate Function",
            "titleSlug": "rotate-function",
            "acRate": "42.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "397",
            "questionFrontendId": "397",
            "title": "Integer Replacement",
            "titleSlug": "integer-replacement",
            "acRate": "35.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "399",
            "questionFrontendId": "399",
            "title": "Evaluate Division",
            "titleSlug": "evaluate-division",
            "acRate": "61.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "402",
            "questionFrontendId": "402",
            "title": "Remove K Digits",
            "titleSlug": "remove-k-digits",
            "acRate": "31.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "403",
            "questionFrontendId": "403",
            "title": "Frog Jump",
            "titleSlug": "frog-jump",
            "acRate": "46.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "404",
            "questionFrontendId": "404",
            "title": "Sum of Left Leaves",
            "titleSlug": "sum-of-left-leaves",
            "acRate": "57.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "406",
            "questionFrontendId": "406",
            "title": "Queue Reconstruction by Height",
            "titleSlug": "queue-reconstruction-by-height",
            "acRate": "73.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "407",
            "questionFrontendId": "407",
            "title": "Trapping Rain Water II",
            "titleSlug": "trapping-rain-water-ii",
            "acRate": "47.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "408",
            "questionFrontendId": "408",
            "title": "Valid Word Abbreviation",
            "titleSlug": "valid-word-abbreviation",
            "acRate": "35.5%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "409",
            "questionFrontendId": "409",
            "title": "Longest Palindrome",
            "titleSlug": "longest-palindrome",
            "acRate": "53.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "410",
            "questionFrontendId": "410",
            "title": "Split Array Largest Sum",
            "titleSlug": "split-array-largest-sum",
            "acRate": "55.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "412",
            "questionFrontendId": "412",
            "title": "Fizz Buzz",
            "titleSlug": "fizz-buzz",
            "acRate": "71.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "413",
            "questionFrontendId": "413",
            "title": "Arithmetic Slices",
            "titleSlug": "arithmetic-slices",
            "acRate": "65.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "414",
            "questionFrontendId": "414",
            "title": "Third Maximum Number",
            "titleSlug": "third-maximum-number",
            "acRate": "34.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "415",
            "questionFrontendId": "415",
            "title": "Add Strings",
            "titleSlug": "add-strings",
            "acRate": "51.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "416",
            "questionFrontendId": "416",
            "title": "Partition Equal Subset Sum",
            "titleSlug": "partition-equal-subset-sum",
            "acRate": "46.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "417",
            "questionFrontendId": "417",
            "title": "Pacific Atlantic Water Flow",
            "titleSlug": "pacific-atlantic-water-flow",
            "acRate": "55.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "419",
            "questionFrontendId": "419",
            "title": "Battleships in a Board",
            "titleSlug": "battleships-in-a-board",
            "acRate": "75.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "420",
            "questionFrontendId": "420",
            "title": "Strong Password Checker",
            "titleSlug": "strong-password-checker",
            "acRate": "13.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "421",
            "questionFrontendId": "421",
            "title": "Maximum XOR of Two Numbers in an Array",
            "titleSlug": "maximum-xor-of-two-numbers-in-an-array",
            "acRate": "53.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "424",
            "questionFrontendId": "424",
            "title": "Longest Repeating Character Replacement",
            "titleSlug": "longest-repeating-character-replacement",
            "acRate": "53.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "432",
            "questionFrontendId": "432",
            "title": "All O`one Data Structure",
            "titleSlug": "all-oone-data-structure",
            "acRate": "36.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "433",
            "questionFrontendId": "433",
            "title": "Minimum Genetic Mutation",
            "titleSlug": "minimum-genetic-mutation",
            "acRate": "53.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "435",
            "questionFrontendId": "435",
            "title": "Non-overlapping Intervals",
            "titleSlug": "non-overlapping-intervals",
            "acRate": "52.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "436",
            "questionFrontendId": "436",
            "title": "Find Right Interval",
            "titleSlug": "find-right-interval",
            "acRate": "51.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "437",
            "questionFrontendId": "437",
            "title": "Path Sum III",
            "titleSlug": "path-sum-iii",
            "acRate": "46.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "438",
            "questionFrontendId": "438",
            "title": "Find All Anagrams in a String",
            "titleSlug": "find-all-anagrams-in-a-string",
            "acRate": "50.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "441",
            "questionFrontendId": "441",
            "title": "Arranging Coins",
            "titleSlug": "arranging-coins",
            "acRate": "46.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "442",
            "questionFrontendId": "442",
            "title": "Find All Duplicates in an Array",
            "titleSlug": "find-all-duplicates-in-an-array",
            "acRate": "73.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "443",
            "questionFrontendId": "443",
            "title": "String Compression",
            "titleSlug": "string-compression",
            "acRate": "54.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "445",
            "questionFrontendId": "445",
            "title": "Add Two Numbers II",
            "titleSlug": "add-two-numbers-ii",
            "acRate": "61.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "446",
            "questionFrontendId": "446",
            "title": "Arithmetic Slices II - Subsequence",
            "titleSlug": "arithmetic-slices-ii-subsequence",
            "acRate": "54.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "448",
            "questionFrontendId": "448",
            "title": "Find All Numbers Disappeared in an Array",
            "titleSlug": "find-all-numbers-disappeared-in-an-array",
            "acRate": "60.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "449",
            "questionFrontendId": "449",
            "title": "Serialize and Deserialize BST",
            "titleSlug": "serialize-and-deserialize-bst",
            "acRate": "57.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "450",
            "questionFrontendId": "450",
            "title": "Delete Node in a BST",
            "titleSlug": "delete-node-in-a-bst",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "451",
            "questionFrontendId": "451",
            "title": "Sort Characters By Frequency",
            "titleSlug": "sort-characters-by-frequency",
            "acRate": "72.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "452",
            "questionFrontendId": "452",
            "title": "Minimum Number of Arrows to Burst Balloons",
            "titleSlug": "minimum-number-of-arrows-to-burst-balloons",
            "acRate": "56.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "453",
            "questionFrontendId": "453",
            "title": "Minimum Moves to Equal Array Elements",
            "titleSlug": "minimum-moves-to-equal-array-elements",
            "acRate": "56.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "454",
            "questionFrontendId": "454",
            "title": "4Sum II",
            "titleSlug": "4sum-ii",
            "acRate": "57.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "455",
            "questionFrontendId": "455",
            "title": "Assign Cookies",
            "titleSlug": "assign-cookies",
            "acRate": "52.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "456",
            "questionFrontendId": "456",
            "title": "132 Pattern",
            "titleSlug": "132-pattern",
            "acRate": "33.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "458",
            "questionFrontendId": "458",
            "title": "Poor Pigs",
            "titleSlug": "poor-pigs",
            "acRate": "59.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "459",
            "questionFrontendId": "459",
            "title": "Repeated Substring Pattern",
            "titleSlug": "repeated-substring-pattern",
            "acRate": "46.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "460",
            "questionFrontendId": "460",
            "title": "LFU Cache",
            "titleSlug": "lfu-cache",
            "acRate": "44.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "462",
            "questionFrontendId": "462",
            "title": "Minimum Moves to Equal Array Elements II",
            "titleSlug": "minimum-moves-to-equal-array-elements-ii",
            "acRate": "60.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "463",
            "questionFrontendId": "463",
            "title": "Island Perimeter",
            "titleSlug": "island-perimeter",
            "acRate": "70.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "465",
            "questionFrontendId": "465",
            "title": "Optimal Account Balancing",
            "titleSlug": "optimal-account-balancing",
            "acRate": "49.5%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "468",
            "questionFrontendId": "468",
            "title": "Validate IP Address",
            "titleSlug": "validate-ip-address",
            "acRate": "26.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "472",
            "questionFrontendId": "472",
            "title": "Concatenated Words",
            "titleSlug": "concatenated-words",
            "acRate": "49.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "473",
            "questionFrontendId": "473",
            "title": "Matchsticks to Square",
            "titleSlug": "matchsticks-to-square",
            "acRate": "40.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "474",
            "questionFrontendId": "474",
            "title": "Ones and Zeroes",
            "titleSlug": "ones-and-zeroes",
            "acRate": "47.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "475",
            "questionFrontendId": "475",
            "title": "Heaters",
            "titleSlug": "heaters",
            "acRate": "37.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "476",
            "questionFrontendId": "476",
            "title": "Number Complement",
            "titleSlug": "number-complement",
            "acRate": "67.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "480",
            "questionFrontendId": "480",
            "title": "Sliding Window Median",
            "titleSlug": "sliding-window-median",
            "acRate": "39.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "485",
            "questionFrontendId": "485",
            "title": "Max Consecutive Ones",
            "titleSlug": "max-consecutive-ones",
            "acRate": "58.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "486",
            "questionFrontendId": "486",
            "title": "Predict the Winner",
            "titleSlug": "predict-the-winner",
            "acRate": "55.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Game Theory",
                    "slug": "game-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "490",
            "questionFrontendId": "490",
            "title": "The Maze",
            "titleSlug": "the-maze",
            "acRate": "57.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "491",
            "questionFrontendId": "491",
            "title": "Non-decreasing Subsequences",
            "titleSlug": "non-decreasing-subsequences",
            "acRate": "60.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "493",
            "questionFrontendId": "493",
            "title": "Reverse Pairs",
            "titleSlug": "reverse-pairs",
            "acRate": "30.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "494",
            "questionFrontendId": "494",
            "title": "Target Sum",
            "titleSlug": "target-sum",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "496",
            "questionFrontendId": "496",
            "title": "Next Greater Element I",
            "titleSlug": "next-greater-element-i",
            "acRate": "72.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "498",
            "questionFrontendId": "498",
            "title": "Diagonal Traverse",
            "titleSlug": "diagonal-traverse",
            "acRate": "59.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "500",
            "questionFrontendId": "500",
            "title": "Keyboard Row",
            "titleSlug": "keyboard-row",
            "acRate": "70.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "501",
            "questionFrontendId": "501",
            "title": "Find Mode in Binary Search Tree",
            "titleSlug": "find-mode-in-binary-search-tree",
            "acRate": "55.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "502",
            "questionFrontendId": "502",
            "title": "IPO",
            "titleSlug": "ipo",
            "acRate": "49.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "503",
            "questionFrontendId": "503",
            "title": "Next Greater Element II",
            "titleSlug": "next-greater-element-ii",
            "acRate": "63.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "505",
            "questionFrontendId": "505",
            "title": "The Maze II",
            "titleSlug": "the-maze-ii",
            "acRate": "53.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "506",
            "questionFrontendId": "506",
            "title": "Relative Ranks",
            "titleSlug": "relative-ranks",
            "acRate": "63.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "507",
            "questionFrontendId": "507",
            "title": "Perfect Number",
            "titleSlug": "perfect-number",
            "acRate": "39.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "508",
            "questionFrontendId": "508",
            "title": "Most Frequent Subtree Sum",
            "titleSlug": "most-frequent-subtree-sum",
            "acRate": "66.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "512",
            "questionFrontendId": "2036",
            "title": "Maximum Alternating Subarray Sum",
            "titleSlug": "maximum-alternating-subarray-sum",
            "acRate": "40.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "513",
            "questionFrontendId": "513",
            "title": "Find Bottom Left Tree Value",
            "titleSlug": "find-bottom-left-tree-value",
            "acRate": "71.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "515",
            "questionFrontendId": "515",
            "title": "Find Largest Value in Each Tree Row",
            "titleSlug": "find-largest-value-in-each-tree-row",
            "acRate": "65.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "516",
            "questionFrontendId": "516",
            "title": "Longest Palindromic Subsequence",
            "titleSlug": "longest-palindromic-subsequence",
            "acRate": "62.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "517",
            "questionFrontendId": "517",
            "title": "Super Washing Machines",
            "titleSlug": "super-washing-machines",
            "acRate": "41.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "518",
            "questionFrontendId": "518",
            "title": "Coin Change II",
            "titleSlug": "coin-change-ii",
            "acRate": "63.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "523",
            "questionFrontendId": "523",
            "title": "Continuous Subarray Sum",
            "titleSlug": "continuous-subarray-sum",
            "acRate": "28.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "525",
            "questionFrontendId": "525",
            "title": "Contiguous Array",
            "titleSlug": "contiguous-array",
            "acRate": "46.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "526",
            "questionFrontendId": "526",
            "title": "Beautiful Arrangement",
            "titleSlug": "beautiful-arrangement",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "527",
            "questionFrontendId": "527",
            "title": "Word Abbreviation",
            "titleSlug": "word-abbreviation",
            "acRate": "61.0%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "528",
            "questionFrontendId": "1721",
            "title": "Swapping Nodes in a Linked List",
            "titleSlug": "swapping-nodes-in-a-linked-list",
            "acRate": "68.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "529",
            "questionFrontendId": "529",
            "title": "Minesweeper",
            "titleSlug": "minesweeper",
            "acRate": "66.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "530",
            "questionFrontendId": "530",
            "title": "Minimum Absolute Difference in BST",
            "titleSlug": "minimum-absolute-difference-in-bst",
            "acRate": "58.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "531",
            "questionFrontendId": "531",
            "title": "Lonely Pixel I",
            "titleSlug": "lonely-pixel-i",
            "acRate": "62.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "532",
            "questionFrontendId": "532",
            "title": "K-diff Pairs in an Array",
            "titleSlug": "k-diff-pairs-in-an-array",
            "acRate": "42.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "535",
            "questionFrontendId": "535",
            "title": "Encode and Decode TinyURL",
            "titleSlug": "encode-and-decode-tinyurl",
            "acRate": "86.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "536",
            "questionFrontendId": "536",
            "title": "Construct Binary Tree from String",
            "titleSlug": "construct-binary-tree-from-string",
            "acRate": "56.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "537",
            "questionFrontendId": "537",
            "title": "Complex Number Multiplication",
            "titleSlug": "complex-number-multiplication",
            "acRate": "71.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "538",
            "questionFrontendId": "538",
            "title": "Convert BST to Greater Tree",
            "titleSlug": "convert-bst-to-greater-tree",
            "acRate": "68.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "539",
            "questionFrontendId": "539",
            "title": "Minimum Time Difference",
            "titleSlug": "minimum-time-difference",
            "acRate": "56.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "540",
            "questionFrontendId": "540",
            "title": "Single Element in a Sorted Array",
            "titleSlug": "single-element-in-a-sorted-array",
            "acRate": "59.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "541",
            "questionFrontendId": "541",
            "title": "Reverse String II",
            "titleSlug": "reverse-string-ii",
            "acRate": "50.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "542",
            "questionFrontendId": "542",
            "title": "01 Matrix",
            "titleSlug": "01-matrix",
            "acRate": "48.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "543",
            "questionFrontendId": "543",
            "title": "Diameter of Binary Tree",
            "titleSlug": "diameter-of-binary-tree",
            "acRate": "59.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "545",
            "questionFrontendId": "545",
            "title": "Boundary of Binary Tree",
            "titleSlug": "boundary-of-binary-tree",
            "acRate": "45.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "546",
            "questionFrontendId": "546",
            "title": "Remove Boxes",
            "titleSlug": "remove-boxes",
            "acRate": "47.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "547",
            "questionFrontendId": "547",
            "title": "Number of Provinces",
            "titleSlug": "number-of-provinces",
            "acRate": "65.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "550",
            "questionFrontendId": "1730",
            "title": "Shortest Path to Get Food",
            "titleSlug": "shortest-path-to-get-food",
            "acRate": "54.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "553",
            "questionFrontendId": "553",
            "title": "Optimal Division",
            "titleSlug": "optimal-division",
            "acRate": "60.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "554",
            "questionFrontendId": "554",
            "title": "Brick Wall",
            "titleSlug": "brick-wall",
            "acRate": "54.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "556",
            "questionFrontendId": "556",
            "title": "Next Greater Element III",
            "titleSlug": "next-greater-element-iii",
            "acRate": "33.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "557",
            "questionFrontendId": "557",
            "title": "Reverse Words in a String III",
            "titleSlug": "reverse-words-in-a-string-iii",
            "acRate": "83.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "560",
            "questionFrontendId": "560",
            "title": "Subarray Sum Equals K",
            "titleSlug": "subarray-sum-equals-k",
            "acRate": "43.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "561",
            "questionFrontendId": "561",
            "title": "Array Partition",
            "titleSlug": "array-partition",
            "acRate": "78.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting Sort",
                    "slug": "counting-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "564",
            "questionFrontendId": "564",
            "title": "Find the Closest Palindrome",
            "titleSlug": "find-the-closest-palindrome",
            "acRate": "22.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "567",
            "questionFrontendId": "567",
            "title": "Permutation in String",
            "titleSlug": "permutation-in-string",
            "acRate": "44.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "570",
            "questionFrontendId": "570",
            "title": "Managers with at Least 5 Direct Reports",
            "titleSlug": "managers-with-at-least-5-direct-reports",
            "acRate": "51.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "572",
            "questionFrontendId": "572",
            "title": "Subtree of Another Tree",
            "titleSlug": "subtree-of-another-tree",
            "acRate": "47.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "576",
            "questionFrontendId": "576",
            "title": "Out of Boundary Paths",
            "titleSlug": "out-of-boundary-paths",
            "acRate": "48.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "577",
            "questionFrontendId": "577",
            "title": "Employee Bonus",
            "titleSlug": "employee-bonus",
            "acRate": "74.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "579",
            "questionFrontendId": "579",
            "title": "Find Cumulative Salary of an Employee",
            "titleSlug": "find-cumulative-salary-of-an-employee",
            "acRate": "46.5%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "581",
            "questionFrontendId": "581",
            "title": "Shortest Unsorted Continuous Subarray",
            "titleSlug": "shortest-unsorted-continuous-subarray",
            "acRate": "36.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "582",
            "questionFrontendId": "582",
            "title": "Kill Process",
            "titleSlug": "kill-process",
            "acRate": "69.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "583",
            "questionFrontendId": "583",
            "title": "Delete Operation for Two Strings",
            "titleSlug": "delete-operation-for-two-strings",
            "acRate": "61.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "584",
            "questionFrontendId": "584",
            "title": "Find Customer Referee",
            "titleSlug": "find-customer-referee",
            "acRate": "69.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "587",
            "questionFrontendId": "587",
            "title": "Erect the Fence",
            "titleSlug": "erect-the-fence",
            "acRate": "51.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "588",
            "questionFrontendId": "588",
            "title": "Design In-Memory File System",
            "titleSlug": "design-in-memory-file-system",
            "acRate": "48.2%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "594",
            "questionFrontendId": "594",
            "title": "Longest Harmonious Subsequence",
            "titleSlug": "longest-harmonious-subsequence",
            "acRate": "54.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "595",
            "questionFrontendId": "595",
            "title": "Big Countries",
            "titleSlug": "big-countries",
            "acRate": "68.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "601",
            "questionFrontendId": "601",
            "title": "Human Traffic of Stadium",
            "titleSlug": "human-traffic-of-stadium",
            "acRate": "48.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "602",
            "questionFrontendId": "602",
            "title": "Friend Requests II: Who Has the Most Friends",
            "titleSlug": "friend-requests-ii-who-has-the-most-friends",
            "acRate": "57.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "603",
            "questionFrontendId": "603",
            "title": "Consecutive Available Seats",
            "titleSlug": "consecutive-available-seats",
            "acRate": "66.3%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "605",
            "questionFrontendId": "605",
            "title": "Can Place Flowers",
            "titleSlug": "can-place-flowers",
            "acRate": "29.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "606",
            "questionFrontendId": "606",
            "title": "Construct String from Binary Tree",
            "titleSlug": "construct-string-from-binary-tree",
            "acRate": "69.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "609",
            "questionFrontendId": "609",
            "title": "Find Duplicate File in System",
            "titleSlug": "find-duplicate-file-in-system",
            "acRate": "67.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "610",
            "questionFrontendId": "610",
            "title": "Triangle Judgement",
            "titleSlug": "triangle-judgement",
            "acRate": "71.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "611",
            "questionFrontendId": "611",
            "title": "Valid Triangle Number",
            "titleSlug": "valid-triangle-number",
            "acRate": "51.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "617",
            "questionFrontendId": "617",
            "title": "Merge Two Binary Trees",
            "titleSlug": "merge-two-binary-trees",
            "acRate": "78.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "618",
            "questionFrontendId": "618",
            "title": "Students Report By Geography",
            "titleSlug": "students-report-by-geography",
            "acRate": "63.7%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "620",
            "questionFrontendId": "620",
            "title": "Not Boring Movies",
            "titleSlug": "not-boring-movies",
            "acRate": "73.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "621",
            "questionFrontendId": "621",
            "title": "Task Scheduler",
            "titleSlug": "task-scheduler",
            "acRate": "58.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "623",
            "questionFrontendId": "623",
            "title": "Add One Row to Tree",
            "titleSlug": "add-one-row-to-tree",
            "acRate": "59.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "626",
            "questionFrontendId": "626",
            "title": "Exchange Seats",
            "titleSlug": "exchange-seats",
            "acRate": "69.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "628",
            "questionFrontendId": "628",
            "title": "Maximum Product of Three Numbers",
            "titleSlug": "maximum-product-of-three-numbers",
            "acRate": "45.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "630",
            "questionFrontendId": "630",
            "title": "Course Schedule III",
            "titleSlug": "course-schedule-iii",
            "acRate": "40.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "632",
            "questionFrontendId": "632",
            "title": "Smallest Range Covering Elements from K Lists",
            "titleSlug": "smallest-range-covering-elements-from-k-lists",
            "acRate": "62.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "633",
            "questionFrontendId": "633",
            "title": "Sum of Square Numbers",
            "titleSlug": "sum-of-square-numbers",
            "acRate": "34.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "634",
            "questionFrontendId": "634",
            "title": "Find the Derangement of An Array",
            "titleSlug": "find-the-derangement-of-an-array",
            "acRate": "41.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "636",
            "questionFrontendId": "636",
            "title": "Exclusive Time of Functions",
            "titleSlug": "exclusive-time-of-functions",
            "acRate": "62.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "637",
            "questionFrontendId": "637",
            "title": "Average of Levels in Binary Tree",
            "titleSlug": "average-of-levels-in-binary-tree",
            "acRate": "72.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "640",
            "questionFrontendId": "640",
            "title": "Solve the Equation",
            "titleSlug": "solve-the-equation",
            "acRate": "43.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "642",
            "questionFrontendId": "642",
            "title": "Design Search Autocomplete System",
            "titleSlug": "design-search-autocomplete-system",
            "acRate": "48.9%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "643",
            "questionFrontendId": "643",
            "title": "Maximum Average Subarray I",
            "titleSlug": "maximum-average-subarray-i",
            "acRate": "43.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "645",
            "questionFrontendId": "645",
            "title": "Set Mismatch",
            "titleSlug": "set-mismatch",
            "acRate": "44.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "646",
            "questionFrontendId": "646",
            "title": "Maximum Length of Pair Chain",
            "titleSlug": "maximum-length-of-pair-chain",
            "acRate": "59.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "647",
            "questionFrontendId": "647",
            "title": "Palindromic Substrings",
            "titleSlug": "palindromic-substrings",
            "acRate": "69.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "648",
            "questionFrontendId": "648",
            "title": "Replace Words",
            "titleSlug": "replace-words",
            "acRate": "62.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "649",
            "questionFrontendId": "649",
            "title": "Dota2 Senate",
            "titleSlug": "dota2-senate",
            "acRate": "47.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "652",
            "questionFrontendId": "652",
            "title": "Find Duplicate Subtrees",
            "titleSlug": "find-duplicate-subtrees",
            "acRate": "59.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "653",
            "questionFrontendId": "653",
            "title": "Two Sum IV - Input is a BST",
            "titleSlug": "two-sum-iv-input-is-a-bst",
            "acRate": "61.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "655",
            "questionFrontendId": "655",
            "title": "Print Binary Tree",
            "titleSlug": "print-binary-tree",
            "acRate": "63.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "657",
            "questionFrontendId": "657",
            "title": "Robot Return to Origin",
            "titleSlug": "robot-return-to-origin",
            "acRate": "75.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "658",
            "questionFrontendId": "658",
            "title": "Find K Closest Elements",
            "titleSlug": "find-k-closest-elements",
            "acRate": "47.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "661",
            "questionFrontendId": "661",
            "title": "Image Smoother",
            "titleSlug": "image-smoother",
            "acRate": "67.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "662",
            "questionFrontendId": "662",
            "title": "Maximum Width of Binary Tree",
            "titleSlug": "maximum-width-of-binary-tree",
            "acRate": "42.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "663",
            "questionFrontendId": "663",
            "title": "Equal Tree Partition",
            "titleSlug": "equal-tree-partition",
            "acRate": "41.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "664",
            "questionFrontendId": "664",
            "title": "Strange Printer",
            "titleSlug": "strange-printer",
            "acRate": "55.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "665",
            "questionFrontendId": "665",
            "title": "Non-decreasing Array",
            "titleSlug": "non-decreasing-array",
            "acRate": "24.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "669",
            "questionFrontendId": "669",
            "title": "Trim a Binary Search Tree",
            "titleSlug": "trim-a-binary-search-tree",
            "acRate": "66.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "670",
            "questionFrontendId": "670",
            "title": "Maximum Swap",
            "titleSlug": "maximum-swap",
            "acRate": "48.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "673",
            "questionFrontendId": "673",
            "title": "Number of Longest Increasing Subsequence",
            "titleSlug": "number-of-longest-increasing-subsequence",
            "acRate": "47.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "674",
            "questionFrontendId": "674",
            "title": "Longest Continuous Increasing Subsequence",
            "titleSlug": "longest-continuous-increasing-subsequence",
            "acRate": "50.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "675",
            "questionFrontendId": "675",
            "title": "Cut Off Trees for Golf Event",
            "titleSlug": "cut-off-trees-for-golf-event",
            "acRate": "34.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "677",
            "questionFrontendId": "677",
            "title": "Map Sum Pairs",
            "titleSlug": "map-sum-pairs",
            "acRate": "56.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "678",
            "questionFrontendId": "678",
            "title": "Valid Parenthesis String",
            "titleSlug": "valid-parenthesis-string",
            "acRate": "34.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "680",
            "questionFrontendId": "680",
            "title": "Valid Palindrome II",
            "titleSlug": "valid-palindrome-ii",
            "acRate": "40.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "681",
            "questionFrontendId": "681",
            "title": "Next Closest Time",
            "titleSlug": "next-closest-time",
            "acRate": "46.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "682",
            "questionFrontendId": "682",
            "title": "Baseball Game",
            "titleSlug": "baseball-game",
            "acRate": "75.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "684",
            "questionFrontendId": "684",
            "title": "Redundant Connection",
            "titleSlug": "redundant-connection",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "685",
            "questionFrontendId": "685",
            "title": "Redundant Connection II",
            "titleSlug": "redundant-connection-ii",
            "acRate": "34.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "686",
            "questionFrontendId": "686",
            "title": "Repeated String Match",
            "titleSlug": "repeated-string-match",
            "acRate": "34.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "687",
            "questionFrontendId": "687",
            "title": "Longest Univalue Path",
            "titleSlug": "longest-univalue-path",
            "acRate": "41.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "688",
            "questionFrontendId": "688",
            "title": "Knight Probability in Chessboard",
            "titleSlug": "knight-probability-in-chessboard",
            "acRate": "56.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "689",
            "questionFrontendId": "689",
            "title": "Maximum Sum of 3 Non-Overlapping Subarrays",
            "titleSlug": "maximum-sum-of-3-non-overlapping-subarrays",
            "acRate": "49.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "690",
            "questionFrontendId": "690",
            "title": "Employee Importance",
            "titleSlug": "employee-importance",
            "acRate": "66.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "692",
            "questionFrontendId": "692",
            "title": "Top K Frequent Words",
            "titleSlug": "top-k-frequent-words",
            "acRate": "57.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "694",
            "questionFrontendId": "694",
            "title": "Number of Distinct Islands",
            "titleSlug": "number-of-distinct-islands",
            "acRate": "61.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "695",
            "questionFrontendId": "695",
            "title": "Max Area of Island",
            "titleSlug": "max-area-of-island",
            "acRate": "71.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "696",
            "questionFrontendId": "696",
            "title": "Count Binary Substrings",
            "titleSlug": "count-binary-substrings",
            "acRate": "65.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "698",
            "questionFrontendId": "698",
            "title": "Partition to K Equal Sum Subsets",
            "titleSlug": "partition-to-k-equal-sum-subsets",
            "acRate": "38.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "711",
            "questionFrontendId": "711",
            "title": "Number of Distinct Islands II",
            "titleSlug": "number-of-distinct-islands-ii",
            "acRate": "52.8%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "713",
            "questionFrontendId": "713",
            "title": "Subarray Product Less Than K",
            "titleSlug": "subarray-product-less-than-k",
            "acRate": "47.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "714",
            "questionFrontendId": "714",
            "title": "Best Time to Buy and Sell Stock with Transaction Fee",
            "titleSlug": "best-time-to-buy-and-sell-stock-with-transaction-fee",
            "acRate": "68.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "715",
            "questionFrontendId": "715",
            "title": "Range Module",
            "titleSlug": "range-module",
            "acRate": "44.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "716",
            "questionFrontendId": "716",
            "title": "Max Stack",
            "titleSlug": "max-stack",
            "acRate": "45.0%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "718",
            "questionFrontendId": "718",
            "title": "Maximum Length of Repeated Subarray",
            "titleSlug": "maximum-length-of-repeated-subarray",
            "acRate": "51.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "719",
            "questionFrontendId": "719",
            "title": "Find K-th Smallest Pair Distance",
            "titleSlug": "find-k-th-smallest-pair-distance",
            "acRate": "37.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "720",
            "questionFrontendId": "720",
            "title": "Longest Word in Dictionary",
            "titleSlug": "longest-word-in-dictionary",
            "acRate": "52.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "721",
            "questionFrontendId": "721",
            "title": "Accounts Merge",
            "titleSlug": "accounts-merge",
            "acRate": "56.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "724",
            "questionFrontendId": "724",
            "title": "Find Pivot Index",
            "titleSlug": "find-pivot-index",
            "acRate": "57.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "725",
            "questionFrontendId": "725",
            "title": "Split Linked List in Parts",
            "titleSlug": "split-linked-list-in-parts",
            "acRate": "63.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "726",
            "questionFrontendId": "726",
            "title": "Number of Atoms",
            "titleSlug": "number-of-atoms",
            "acRate": "52.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "728",
            "questionFrontendId": "728",
            "title": "Self Dividing Numbers",
            "titleSlug": "self-dividing-numbers",
            "acRate": "78.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "729",
            "questionFrontendId": "729",
            "title": "My Calendar I",
            "titleSlug": "my-calendar-i",
            "acRate": "56.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "733",
            "questionFrontendId": "733",
            "title": "Flood Fill",
            "titleSlug": "flood-fill",
            "acRate": "63.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "735",
            "questionFrontendId": "735",
            "title": "Asteroid Collision",
            "titleSlug": "asteroid-collision",
            "acRate": "44.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "738",
            "questionFrontendId": "738",
            "title": "Monotone Increasing Digits",
            "titleSlug": "monotone-increasing-digits",
            "acRate": "47.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "739",
            "questionFrontendId": "739",
            "title": "Daily Temperatures",
            "titleSlug": "daily-temperatures",
            "acRate": "66.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "740",
            "questionFrontendId": "740",
            "title": "Delete and Earn",
            "titleSlug": "delete-and-earn",
            "acRate": "56.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "741",
            "questionFrontendId": "741",
            "title": "Cherry Pickup",
            "titleSlug": "cherry-pickup",
            "acRate": "36.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "743",
            "questionFrontendId": "742",
            "title": "Closest Leaf in a Binary Tree",
            "titleSlug": "closest-leaf-in-a-binary-tree",
            "acRate": "46.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "744",
            "questionFrontendId": "743",
            "title": "Network Delay Time",
            "titleSlug": "network-delay-time",
            "acRate": "53.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "745",
            "questionFrontendId": "744",
            "title": "Find Smallest Letter Greater Than Target",
            "titleSlug": "find-smallest-letter-greater-than-target",
            "acRate": "51.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "747",
            "questionFrontendId": "746",
            "title": "Min Cost Climbing Stairs",
            "titleSlug": "min-cost-climbing-stairs",
            "acRate": "65.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "753",
            "questionFrontendId": "752",
            "title": "Open the Lock",
            "titleSlug": "open-the-lock",
            "acRate": "56.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "755",
            "questionFrontendId": "754",
            "title": "Reach a Number",
            "titleSlug": "reach-a-number",
            "acRate": "43.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "756",
            "questionFrontendId": "755",
            "title": "Pour Water",
            "titleSlug": "pour-water",
            "acRate": "46.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "758",
            "questionFrontendId": "426",
            "title": "Convert Binary Search Tree to Sorted Doubly Linked List",
            "titleSlug": "convert-binary-search-tree-to-sorted-doubly-linked-list",
            "acRate": "64.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "764",
            "questionFrontendId": "429",
            "title": "N-ary Tree Level Order Traversal",
            "titleSlug": "n-ary-tree-level-order-traversal",
            "acRate": "70.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "765",
            "questionFrontendId": "428",
            "title": "Serialize and Deserialize N-ary Tree",
            "titleSlug": "serialize-and-deserialize-n-ary-tree",
            "acRate": "66.7%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "766",
            "questionFrontendId": "430",
            "title": "Flatten a Multilevel Doubly Linked List",
            "titleSlug": "flatten-a-multilevel-doubly-linked-list",
            "acRate": "60.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "767",
            "questionFrontendId": "762",
            "title": "Prime Number of Set Bits in Binary Representation",
            "titleSlug": "prime-number-of-set-bits-in-binary-representation",
            "acRate": "69.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "768",
            "questionFrontendId": "763",
            "title": "Partition Labels",
            "titleSlug": "partition-labels",
            "acRate": "79.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "770",
            "questionFrontendId": "765",
            "title": "Couples Holding Hands",
            "titleSlug": "couples-holding-hands",
            "acRate": "57.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "772",
            "questionFrontendId": "427",
            "title": "Construct Quad Tree",
            "titleSlug": "construct-quad-tree",
            "acRate": "75.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "778",
            "questionFrontendId": "767",
            "title": "Reorganize String",
            "titleSlug": "reorganize-string",
            "acRate": "54.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "782",
            "questionFrontendId": "771",
            "title": "Jewels and Stones",
            "titleSlug": "jewels-and-stones",
            "acRate": "88.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "783",
            "questionFrontendId": "700",
            "title": "Search in a Binary Search Tree",
            "titleSlug": "search-in-a-binary-search-tree",
            "acRate": "79.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "784",
            "questionFrontendId": "701",
            "title": "Insert into a Binary Search Tree",
            "titleSlug": "insert-into-a-binary-search-tree",
            "acRate": "73.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "785",
            "questionFrontendId": "772",
            "title": "Basic Calculator III",
            "titleSlug": "basic-calculator-iii",
            "acRate": "50.2%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "787",
            "questionFrontendId": "773",
            "title": "Sliding Puzzle",
            "titleSlug": "sliding-puzzle",
            "acRate": "64.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "789",
            "questionFrontendId": "703",
            "title": "Kth Largest Element in a Stream",
            "titleSlug": "kth-largest-element-in-a-stream",
            "acRate": "56.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "790",
            "questionFrontendId": "775",
            "title": "Global and Local Inversions",
            "titleSlug": "global-and-local-inversions",
            "acRate": "42.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "791",
            "questionFrontendId": "776",
            "title": "Split BST",
            "titleSlug": "split-bst",
            "acRate": "82.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "792",
            "questionFrontendId": "704",
            "title": "Binary Search",
            "titleSlug": "binary-search",
            "acRate": "57.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "793",
            "questionFrontendId": "777",
            "title": "Swap Adjacent in LR String",
            "titleSlug": "swap-adjacent-in-lr-string",
            "acRate": "36.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "794",
            "questionFrontendId": "778",
            "title": "Swim in Rising Water",
            "titleSlug": "swim-in-rising-water",
            "acRate": "60.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "795",
            "questionFrontendId": "779",
            "title": "K-th Symbol in Grammar",
            "titleSlug": "k-th-symbol-in-grammar",
            "acRate": "46.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "797",
            "questionFrontendId": "781",
            "title": "Rabbits in Forest",
            "titleSlug": "rabbits-in-forest",
            "acRate": "53.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "800",
            "questionFrontendId": "784",
            "title": "Letter Case Permutation",
            "titleSlug": "letter-case-permutation",
            "acRate": "74.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "801",
            "questionFrontendId": "785",
            "title": "Is Graph Bipartite?",
            "titleSlug": "is-graph-bipartite",
            "acRate": "55.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "803",
            "questionFrontendId": "787",
            "title": "Cheapest Flights Within K Stops",
            "titleSlug": "cheapest-flights-within-k-stops",
            "acRate": "39.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "806",
            "questionFrontendId": "790",
            "title": "Domino and Tromino Tiling",
            "titleSlug": "domino-and-tromino-tiling",
            "acRate": "50.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "807",
            "questionFrontendId": "791",
            "title": "Custom Sort String",
            "titleSlug": "custom-sort-string",
            "acRate": "69.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "808",
            "questionFrontendId": "792",
            "title": "Number of Matching Subsequences",
            "titleSlug": "number-of-matching-subsequences",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "811",
            "questionFrontendId": "795",
            "title": "Number of Subarrays with Bounded Maximum",
            "titleSlug": "number-of-subarrays-with-bounded-maximum",
            "acRate": "53.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "812",
            "questionFrontendId": "796",
            "title": "Rotate String",
            "titleSlug": "rotate-string",
            "acRate": "57.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "813",
            "questionFrontendId": "797",
            "title": "All Paths From Source to Target",
            "titleSlug": "all-paths-from-source-to-target",
            "acRate": "82.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "815",
            "questionFrontendId": "799",
            "title": "Champagne Tower",
            "titleSlug": "champagne-tower",
            "acRate": "58.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "816",
            "questionFrontendId": "705",
            "title": "Design HashSet",
            "titleSlug": "design-hashset",
            "acRate": "67.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "817",
            "questionFrontendId": "706",
            "title": "Design HashMap",
            "titleSlug": "design-hashmap",
            "acRate": "65.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "819",
            "questionFrontendId": "801",
            "title": "Minimum Swaps To Make Sequences Increasing",
            "titleSlug": "minimum-swaps-to-make-sequences-increasing",
            "acRate": "39.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "820",
            "questionFrontendId": "802",
            "title": "Find Eventual Safe States",
            "titleSlug": "find-eventual-safe-states",
            "acRate": "62.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "822",
            "questionFrontendId": "804",
            "title": "Unique Morse Code Words",
            "titleSlug": "unique-morse-code-words",
            "acRate": "82.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "826",
            "questionFrontendId": "808",
            "title": "Soup Servings",
            "titleSlug": "soup-servings",
            "acRate": "54.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Probability and Statistics",
                    "slug": "probability-and-statistics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "830",
            "questionFrontendId": "812",
            "title": "Largest Triangle Area",
            "titleSlug": "largest-triangle-area",
            "acRate": "60.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "832",
            "questionFrontendId": "814",
            "title": "Binary Tree Pruning",
            "titleSlug": "binary-tree-pruning",
            "acRate": "72.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "833",
            "questionFrontendId": "815",
            "title": "Bus Routes",
            "titleSlug": "bus-routes",
            "acRate": "48.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "835",
            "questionFrontendId": "817",
            "title": "Linked List Components",
            "titleSlug": "linked-list-components",
            "acRate": "57.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "836",
            "questionFrontendId": "818",
            "title": "Race Car",
            "titleSlug": "race-car",
            "acRate": "43.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "837",
            "questionFrontendId": "819",
            "title": "Most Common Word",
            "titleSlug": "most-common-word",
            "acRate": "44.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "838",
            "questionFrontendId": "707",
            "title": "Design Linked List",
            "titleSlug": "design-linked-list",
            "acRate": "28.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "841",
            "questionFrontendId": "821",
            "title": "Shortest Distance to a Character",
            "titleSlug": "shortest-distance-to-a-character",
            "acRate": "71.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "843",
            "questionFrontendId": "823",
            "title": "Binary Trees With Factors",
            "titleSlug": "binary-trees-with-factors",
            "acRate": "52.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "853",
            "questionFrontendId": "826",
            "title": "Most Profit Assigning Work",
            "titleSlug": "most-profit-assigning-work",
            "acRate": "45.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "854",
            "questionFrontendId": "827",
            "title": "Making A Large Island",
            "titleSlug": "making-a-large-island",
            "acRate": "46.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "855",
            "questionFrontendId": "828",
            "title": "Count Unique Characters of All Substrings of a Given String",
            "titleSlug": "count-unique-characters-of-all-substrings-of-a-given-string",
            "acRate": "52.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "860",
            "questionFrontendId": "622",
            "title": "Design Circular Queue",
            "titleSlug": "design-circular-queue",
            "acRate": "51.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "861",
            "questionFrontendId": "832",
            "title": "Flipping an Image",
            "titleSlug": "flipping-an-image",
            "acRate": "81.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "865",
            "questionFrontendId": "489",
            "title": "Robot Room Cleaner",
            "titleSlug": "robot-room-cleaner",
            "acRate": "76.6%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "866",
            "questionFrontendId": "836",
            "title": "Rectangle Overlap",
            "titleSlug": "rectangle-overlap",
            "acRate": "44.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "868",
            "questionFrontendId": "838",
            "title": "Push Dominoes",
            "titleSlug": "push-dominoes",
            "acRate": "57.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "871",
            "questionFrontendId": "841",
            "title": "Keys and Rooms",
            "titleSlug": "keys-and-rooms",
            "acRate": "72.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "872",
            "questionFrontendId": "842",
            "title": "Split Array into Fibonacci Sequence",
            "titleSlug": "split-array-into-fibonacci-sequence",
            "acRate": "39.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "874",
            "questionFrontendId": "844",
            "title": "Backspace String Compare",
            "titleSlug": "backspace-string-compare",
            "acRate": "49.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "877",
            "questionFrontendId": "847",
            "title": "Shortest Path Visiting All Nodes",
            "titleSlug": "shortest-path-visiting-all-nodes",
            "acRate": "65.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "879",
            "questionFrontendId": "849",
            "title": "Maximize Distance to Closest Person",
            "titleSlug": "maximize-distance-to-closest-person",
            "acRate": "48.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "881",
            "questionFrontendId": "851",
            "title": "Loud and Rich",
            "titleSlug": "loud-and-rich",
            "acRate": "59.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "882",
            "questionFrontendId": "852",
            "title": "Peak Index in a Mountain Array",
            "titleSlug": "peak-index-in-a-mountain-array",
            "acRate": "68.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "883",
            "questionFrontendId": "853",
            "title": "Car Fleet",
            "titleSlug": "car-fleet",
            "acRate": "50.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "886",
            "questionFrontendId": "856",
            "title": "Score of Parentheses",
            "titleSlug": "score-of-parentheses",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "887",
            "questionFrontendId": "857",
            "title": "Minimum Cost to Hire K Workers",
            "titleSlug": "minimum-cost-to-hire-k-workers",
            "acRate": "52.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "889",
            "questionFrontendId": "859",
            "title": "Buddy Strings",
            "titleSlug": "buddy-strings",
            "acRate": "33.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "892",
            "questionFrontendId": "862",
            "title": "Shortest Subarray with Sum at Least K",
            "titleSlug": "shortest-subarray-with-sum-at-least-k",
            "acRate": "26.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "893",
            "questionFrontendId": "863",
            "title": "All Nodes Distance K in Binary Tree",
            "titleSlug": "all-nodes-distance-k-in-binary-tree",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "894",
            "questionFrontendId": "710",
            "title": "Random Pick with Blacklist",
            "titleSlug": "random-pick-with-blacklist",
            "acRate": "33.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "896",
            "questionFrontendId": "865",
            "title": "Smallest Subtree with all the Deepest Nodes",
            "titleSlug": "smallest-subtree-with-all-the-deepest-nodes",
            "acRate": "70.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "898",
            "questionFrontendId": "867",
            "title": "Transpose Matrix",
            "titleSlug": "transpose-matrix",
            "acRate": "71.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "900",
            "questionFrontendId": "869",
            "title": "Reordered Power of 2",
            "titleSlug": "reordered-power-of-2",
            "acRate": "62.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "902",
            "questionFrontendId": "871",
            "title": "Minimum Number of Refueling Stops",
            "titleSlug": "minimum-number-of-refueling-stops",
            "acRate": "40.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "903",
            "questionFrontendId": "470",
            "title": "Implement Rand10() Using Rand7()",
            "titleSlug": "implement-rand10-using-rand7",
            "acRate": "45.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Rejection Sampling",
                    "slug": "rejection-sampling"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                },
                {
                    "name": "Probability and Statistics",
                    "slug": "probability-and-statistics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "904",
            "questionFrontendId": "872",
            "title": "Leaf-Similar Trees",
            "titleSlug": "leaf-similar-trees",
            "acRate": "70.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "907",
            "questionFrontendId": "875",
            "title": "Koko Eating Bananas",
            "titleSlug": "koko-eating-bananas",
            "acRate": "49.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "908",
            "questionFrontendId": "876",
            "title": "Middle of the Linked List",
            "titleSlug": "middle-of-the-linked-list",
            "acRate": "77.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "909",
            "questionFrontendId": "877",
            "title": "Stone Game",
            "titleSlug": "stone-game",
            "acRate": "70.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Game Theory",
                    "slug": "game-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "910",
            "questionFrontendId": "878",
            "title": "Nth Magical Number",
            "titleSlug": "nth-magical-number",
            "acRate": "35.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "911",
            "questionFrontendId": "879",
            "title": "Profitable Schemes",
            "titleSlug": "profitable-schemes",
            "acRate": "48.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "912",
            "questionFrontendId": "528",
            "title": "Random Pick with Weight",
            "titleSlug": "random-pick-with-weight",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "916",
            "questionFrontendId": "880",
            "title": "Decoded String at Index",
            "titleSlug": "decoded-string-at-index",
            "acRate": "36.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "917",
            "questionFrontendId": "881",
            "title": "Boats to Save People",
            "titleSlug": "boats-to-save-people",
            "acRate": "56.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "922",
            "questionFrontendId": "886",
            "title": "Possible Bipartition",
            "titleSlug": "possible-bipartition",
            "acRate": "50.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "923",
            "questionFrontendId": "887",
            "title": "Super Egg Drop",
            "titleSlug": "super-egg-drop",
            "acRate": "27.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "924",
            "questionFrontendId": "888",
            "title": "Fair Candy Swap",
            "titleSlug": "fair-candy-swap",
            "acRate": "61.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "925",
            "questionFrontendId": "889",
            "title": "Construct Binary Tree from Preorder and Postorder Traversal",
            "titleSlug": "construct-binary-tree-from-preorder-and-postorder-traversal",
            "acRate": "71.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "926",
            "questionFrontendId": "890",
            "title": "Find and Replace Pattern",
            "titleSlug": "find-and-replace-pattern",
            "acRate": "76.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "927",
            "questionFrontendId": "891",
            "title": "Sum of Subsequence Widths",
            "titleSlug": "sum-of-subsequence-widths",
            "acRate": "37.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "930",
            "questionFrontendId": "894",
            "title": "All Possible Full Binary Trees",
            "titleSlug": "all-possible-full-binary-trees",
            "acRate": "82.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "931",
            "questionFrontendId": "895",
            "title": "Maximum Frequency Stack",
            "titleSlug": "maximum-frequency-stack",
            "acRate": "66.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "932",
            "questionFrontendId": "896",
            "title": "Monotonic Array",
            "titleSlug": "monotonic-array",
            "acRate": "61.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "933",
            "questionFrontendId": "897",
            "title": "Increasing Order Search Tree",
            "titleSlug": "increasing-order-search-tree",
            "acRate": "78.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "935",
            "questionFrontendId": "899",
            "title": "Orderly Queue",
            "titleSlug": "orderly-queue",
            "acRate": "66.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "937",
            "questionFrontendId": "901",
            "title": "Online Stock Span",
            "titleSlug": "online-stock-span",
            "acRate": "65.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "938",
            "questionFrontendId": "902",
            "title": "Numbers At Most N Given Digit Set",
            "titleSlug": "numbers-at-most-n-given-digit-set",
            "acRate": "42.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "939",
            "questionFrontendId": "903",
            "title": "Valid Permutations for DI Sequence",
            "titleSlug": "valid-permutations-for-di-sequence",
            "acRate": "57.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "940",
            "questionFrontendId": "904",
            "title": "Fruit Into Baskets",
            "titleSlug": "fruit-into-baskets",
            "acRate": "44.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "941",
            "questionFrontendId": "905",
            "title": "Sort Array By Parity",
            "titleSlug": "sort-array-by-parity",
            "acRate": "76.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "943",
            "questionFrontendId": "907",
            "title": "Sum of Subarray Minimums",
            "titleSlug": "sum-of-subarray-minimums",
            "acRate": "37.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "945",
            "questionFrontendId": "909",
            "title": "Snakes and Ladders",
            "titleSlug": "snakes-and-ladders",
            "acRate": "43.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "946",
            "questionFrontendId": "910",
            "title": "Smallest Range II",
            "titleSlug": "smallest-range-ii",
            "acRate": "36.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "948",
            "questionFrontendId": "912",
            "title": "Sort an Array",
            "titleSlug": "sort-an-array",
            "acRate": "56.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Radix Sort",
                    "slug": "radix-sort"
                },
                {
                    "name": "Counting Sort",
                    "slug": "counting-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "951",
            "questionFrontendId": "915",
            "title": "Partition Array into Disjoint Intervals",
            "titleSlug": "partition-array-into-disjoint-intervals",
            "acRate": "48.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "953",
            "questionFrontendId": "917",
            "title": "Reverse Only Letters",
            "titleSlug": "reverse-only-letters",
            "acRate": "64.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "954",
            "questionFrontendId": "918",
            "title": "Maximum Sum Circular Subarray",
            "titleSlug": "maximum-sum-circular-subarray",
            "acRate": "44.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "956",
            "questionFrontendId": "920",
            "title": "Number of Music Playlists",
            "titleSlug": "number-of-music-playlists",
            "acRate": "60.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "957",
            "questionFrontendId": "921",
            "title": "Minimum Add to Make Parentheses Valid",
            "titleSlug": "minimum-add-to-make-parentheses-valid",
            "acRate": "75.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "958",
            "questionFrontendId": "922",
            "title": "Sort Array By Parity II",
            "titleSlug": "sort-array-by-parity-ii",
            "acRate": "70.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "959",
            "questionFrontendId": "923",
            "title": "3Sum With Multiplicity",
            "titleSlug": "3sum-with-multiplicity",
            "acRate": "45.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "962",
            "questionFrontendId": "926",
            "title": "Flip String to Monotone Increasing",
            "titleSlug": "flip-string-to-monotone-increasing",
            "acRate": "61.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "965",
            "questionFrontendId": "929",
            "title": "Unique Email Addresses",
            "titleSlug": "unique-email-addresses",
            "acRate": "67.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "967",
            "questionFrontendId": "931",
            "title": "Minimum Falling Path Sum",
            "titleSlug": "minimum-falling-path-sum",
            "acRate": "64.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "969",
            "questionFrontendId": "933",
            "title": "Number of Recent Calls",
            "titleSlug": "number-of-recent-calls",
            "acRate": "74.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "971",
            "questionFrontendId": "934",
            "title": "Shortest Bridge",
            "titleSlug": "shortest-bridge",
            "acRate": "57.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "972",
            "questionFrontendId": "935",
            "title": "Knight Dialer",
            "titleSlug": "knight-dialer",
            "acRate": "59.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "974",
            "questionFrontendId": "937",
            "title": "Reorder Data in Log Files",
            "titleSlug": "reorder-data-in-log-files",
            "acRate": "56.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "975",
            "questionFrontendId": "938",
            "title": "Range Sum of BST",
            "titleSlug": "range-sum-of-bst",
            "acRate": "86.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "978",
            "questionFrontendId": "941",
            "title": "Valid Mountain Array",
            "titleSlug": "valid-mountain-array",
            "acRate": "33.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "983",
            "questionFrontendId": "946",
            "title": "Validate Stack Sequences",
            "titleSlug": "validate-stack-sequences",
            "acRate": "69.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "984",
            "questionFrontendId": "947",
            "title": "Most Stones Removed with Same Row or Column",
            "titleSlug": "most-stones-removed-with-same-row-or-column",
            "acRate": "58.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "986",
            "questionFrontendId": "949",
            "title": "Largest Time for Given Digits",
            "titleSlug": "largest-time-for-given-digits",
            "acRate": "35.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "988",
            "questionFrontendId": "951",
            "title": "Flip Equivalent Binary Trees",
            "titleSlug": "flip-equivalent-binary-trees",
            "acRate": "67.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "990",
            "questionFrontendId": "953",
            "title": "Verifying an Alien Dictionary",
            "titleSlug": "verifying-an-alien-dictionary",
            "acRate": "54.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "994",
            "questionFrontendId": "957",
            "title": "Prison Cells After N Days",
            "titleSlug": "prison-cells-after-n-days",
            "acRate": "39.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "998",
            "questionFrontendId": "958",
            "title": "Check Completeness of a Binary Tree",
            "titleSlug": "check-completeness-of-a-binary-tree",
            "acRate": "56.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "999",
            "questionFrontendId": "959",
            "title": "Regions Cut By Slashes",
            "titleSlug": "regions-cut-by-slashes",
            "acRate": "69.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1002",
            "questionFrontendId": "962",
            "title": "Maximum Width Ramp",
            "titleSlug": "maximum-width-ramp",
            "acRate": "49.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1007",
            "questionFrontendId": "967",
            "title": "Numbers With Same Consecutive Differences",
            "titleSlug": "numbers-with-same-consecutive-differences",
            "acRate": "57.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1008",
            "questionFrontendId": "968",
            "title": "Binary Tree Cameras",
            "titleSlug": "binary-tree-cameras",
            "acRate": "46.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1009",
            "questionFrontendId": "969",
            "title": "Pancake Sorting",
            "titleSlug": "pancake-sorting",
            "acRate": "70.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1013",
            "questionFrontendId": "509",
            "title": "Fibonacci Number",
            "titleSlug": "fibonacci-number",
            "acRate": "70.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1014",
            "questionFrontendId": "973",
            "title": "K Closest Points to Origin",
            "titleSlug": "k-closest-points-to-origin",
            "acRate": "66.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1016",
            "questionFrontendId": "974",
            "title": "Subarray Sums Divisible by K",
            "titleSlug": "subarray-sums-divisible-by-k",
            "acRate": "54.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1019",
            "questionFrontendId": "977",
            "title": "Squares of a Sorted Array",
            "titleSlug": "squares-of-a-sorted-array",
            "acRate": "72.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1021",
            "questionFrontendId": "979",
            "title": "Distribute Coins in Binary Tree",
            "titleSlug": "distribute-coins-in-binary-tree",
            "acRate": "72.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1023",
            "questionFrontendId": "981",
            "title": "Time Based Key-Value Store",
            "titleSlug": "time-based-key-value-store",
            "acRate": "49.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1025",
            "questionFrontendId": "983",
            "title": "Minimum Cost For Tickets",
            "titleSlug": "minimum-cost-for-tickets",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1028",
            "questionFrontendId": "986",
            "title": "Interval List Intersections",
            "titleSlug": "interval-list-intersections",
            "acRate": "71.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1029",
            "questionFrontendId": "987",
            "title": "Vertical Order Traversal of a Binary Tree",
            "titleSlug": "vertical-order-traversal-of-a-binary-tree",
            "acRate": "47.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1032",
            "questionFrontendId": "990",
            "title": "Satisfiability of Equality Equations",
            "titleSlug": "satisfiability-of-equality-equations",
            "acRate": "50.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1034",
            "questionFrontendId": "992",
            "title": "Subarrays with K Different Integers",
            "titleSlug": "subarrays-with-k-different-integers",
            "acRate": "56.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1035",
            "questionFrontendId": "993",
            "title": "Cousins in Binary Tree",
            "titleSlug": "cousins-in-binary-tree",
            "acRate": "55.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1036",
            "questionFrontendId": "994",
            "title": "Rotting Oranges",
            "titleSlug": "rotting-oranges",
            "acRate": "53.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1039",
            "questionFrontendId": "997",
            "title": "Find the Town Judge",
            "titleSlug": "find-the-town-judge",
            "acRate": "49.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1042",
            "questionFrontendId": "1000",
            "title": "Minimum Cost to Merge Stones",
            "titleSlug": "minimum-cost-to-merge-stones",
            "acRate": "43.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1044",
            "questionFrontendId": "1002",
            "title": "Find Common Characters",
            "titleSlug": "find-common-characters",
            "acRate": "68.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1045",
            "questionFrontendId": "1003",
            "title": "Check If Word Is Valid After Substitutions",
            "titleSlug": "check-if-word-is-valid-after-substitutions",
            "acRate": "59.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1046",
            "questionFrontendId": "1004",
            "title": "Max Consecutive Ones III",
            "titleSlug": "max-consecutive-ones-iii",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1048",
            "questionFrontendId": "1006",
            "title": "Clumsy Factorial",
            "titleSlug": "clumsy-factorial",
            "acRate": "56.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1049",
            "questionFrontendId": "1007",
            "title": "Minimum Domino Rotations For Equal Row",
            "titleSlug": "minimum-domino-rotations-for-equal-row",
            "acRate": "52.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1050",
            "questionFrontendId": "1008",
            "title": "Construct Binary Search Tree from Preorder Traversal",
            "titleSlug": "construct-binary-search-tree-from-preorder-traversal",
            "acRate": "81.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1054",
            "questionFrontendId": "1009",
            "title": "Complement of Base 10 Integer",
            "titleSlug": "complement-of-base-10-integer",
            "acRate": "60.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1055",
            "questionFrontendId": "1010",
            "title": "Pairs of Songs With Total Durations Divisible by 60",
            "titleSlug": "pairs-of-songs-with-total-durations-divisible-by-60",
            "acRate": "52.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1056",
            "questionFrontendId": "1011",
            "title": "Capacity To Ship Packages Within D Days",
            "titleSlug": "capacity-to-ship-packages-within-d-days",
            "acRate": "69.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1059",
            "questionFrontendId": "1060",
            "title": "Missing Element in Sorted Array",
            "titleSlug": "missing-element-in-sorted-array",
            "acRate": "56.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1060",
            "questionFrontendId": "1062",
            "title": "Longest Repeating Substring",
            "titleSlug": "longest-repeating-substring",
            "acRate": "60.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Suffix Array",
                    "slug": "suffix-array"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1061",
            "questionFrontendId": "1063",
            "title": "Number of Valid Subarrays",
            "titleSlug": "number-of-valid-subarrays",
            "acRate": "78.2%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1065",
            "questionFrontendId": "1016",
            "title": "Binary String With Substrings Representing 1 To N",
            "titleSlug": "binary-string-with-substrings-representing-1-to-n",
            "acRate": "57.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1068",
            "questionFrontendId": "1067",
            "title": "Digit Count in Range",
            "titleSlug": "digit-count-in-range",
            "acRate": "46.4%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1072",
            "questionFrontendId": "1019",
            "title": "Next Greater Node In Linked List",
            "titleSlug": "next-greater-node-in-linked-list",
            "acRate": "60.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1073",
            "questionFrontendId": "1020",
            "title": "Number of Enclaves",
            "titleSlug": "number-of-enclaves",
            "acRate": "68.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1074",
            "questionFrontendId": "1086",
            "title": "High Five",
            "titleSlug": "high-five",
            "acRate": "74.7%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1075",
            "questionFrontendId": "1065",
            "title": "Index Pairs of a String",
            "titleSlug": "index-pairs-of-a-string",
            "acRate": "67.2%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1078",
            "questionFrontendId": "1021",
            "title": "Remove Outermost Parentheses",
            "titleSlug": "remove-outermost-parentheses",
            "acRate": "82.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1079",
            "questionFrontendId": "1022",
            "title": "Sum of Root To Leaf Binary Numbers",
            "titleSlug": "sum-of-root-to-leaf-binary-numbers",
            "acRate": "73.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1080",
            "questionFrontendId": "1023",
            "title": "Camelcase Matching",
            "titleSlug": "camelcase-matching",
            "acRate": "62.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1082",
            "questionFrontendId": "1085",
            "title": "Sum of Digits in the Minimum Number",
            "titleSlug": "sum-of-digits-in-the-minimum-number",
            "acRate": "76.5%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1083",
            "questionFrontendId": "1099",
            "title": "Two Sum Less Than K",
            "titleSlug": "two-sum-less-than-k",
            "acRate": "61.8%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1084",
            "questionFrontendId": "1100",
            "title": "Find K-Length Substrings With No Repeated Characters",
            "titleSlug": "find-k-length-substrings-with-no-repeated-characters",
            "acRate": "74.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1087",
            "questionFrontendId": "1027",
            "title": "Longest Arithmetic Subsequence",
            "titleSlug": "longest-arithmetic-subsequence",
            "acRate": "49.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1088",
            "questionFrontendId": "1118",
            "title": "Number of Days in a Month",
            "titleSlug": "number-of-days-in-a-month",
            "acRate": "58.1%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1089",
            "questionFrontendId": "1119",
            "title": "Remove Vowels from a String",
            "titleSlug": "remove-vowels-from-a-string",
            "acRate": "90.8%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1090",
            "questionFrontendId": "1134",
            "title": "Armstrong Number",
            "titleSlug": "armstrong-number",
            "acRate": "77.8%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1091",
            "questionFrontendId": "1120",
            "title": "Maximum Average Subtree",
            "titleSlug": "maximum-average-subtree",
            "acRate": "66.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1092",
            "questionFrontendId": "1026",
            "title": "Maximum Difference Between Node and Ancestor",
            "titleSlug": "maximum-difference-between-node-and-ancestor",
            "acRate": "78.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1093",
            "questionFrontendId": "1028",
            "title": "Recover a Tree From Preorder Traversal",
            "titleSlug": "recover-a-tree-from-preorder-traversal",
            "acRate": "74.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1095",
            "questionFrontendId": "1029",
            "title": "Two City Scheduling",
            "titleSlug": "two-city-scheduling",
            "acRate": "66.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1097",
            "questionFrontendId": "1032",
            "title": "Stream of Characters",
            "titleSlug": "stream-of-characters",
            "acRate": "51.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1098",
            "questionFrontendId": "1133",
            "title": "Largest Unique Number",
            "titleSlug": "largest-unique-number",
            "acRate": "68.7%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1099",
            "questionFrontendId": "1102",
            "title": "Path With Maximum Minimum Value",
            "titleSlug": "path-with-maximum-minimum-value",
            "acRate": "53.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1100",
            "questionFrontendId": "1135",
            "title": "Connecting Cities With Minimum Cost",
            "titleSlug": "connecting-cities-with-minimum-cost",
            "acRate": "61.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Minimum Spanning Tree",
                    "slug": "minimum-spanning-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1105",
            "questionFrontendId": "1035",
            "title": "Uncrossed Lines",
            "titleSlug": "uncrossed-lines",
            "acRate": "62.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1107",
            "questionFrontendId": "1151",
            "title": "Minimum Swaps to Group All 1's Together",
            "titleSlug": "minimum-swaps-to-group-all-1s-together",
            "acRate": "60.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1108",
            "questionFrontendId": "1152",
            "title": "Analyze User Website Visit Pattern",
            "titleSlug": "analyze-user-website-visit-pattern",
            "acRate": "42.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1111",
            "questionFrontendId": "1039",
            "title": "Minimum Score Triangulation of Polygon",
            "titleSlug": "minimum-score-triangulation-of-polygon",
            "acRate": "58.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1112",
            "questionFrontendId": "1160",
            "title": "Find Words That Can Be Formed by Characters",
            "titleSlug": "find-words-that-can-be-formed-by-characters",
            "acRate": "70.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1114",
            "questionFrontendId": "1038",
            "title": "Binary Search Tree to Greater Sum Tree",
            "titleSlug": "binary-search-tree-to-greater-sum-tree",
            "acRate": "85.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1116",
            "questionFrontendId": "1161",
            "title": "Maximum Level Sum of a Binary Tree",
            "titleSlug": "maximum-level-sum-of-a-binary-tree",
            "acRate": "67.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1117",
            "questionFrontendId": "1162",
            "title": "As Far from Land as Possible",
            "titleSlug": "as-far-from-land-as-possible",
            "acRate": "51.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1119",
            "questionFrontendId": "1041",
            "title": "Robot Bounded In Circle",
            "titleSlug": "robot-bounded-in-circle",
            "acRate": "55.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1120",
            "questionFrontendId": "1042",
            "title": "Flower Planting With No Adjacent",
            "titleSlug": "flower-planting-with-no-adjacent",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1121",
            "questionFrontendId": "1043",
            "title": "Partition Array for Maximum Sum",
            "titleSlug": "partition-array-for-maximum-sum",
            "acRate": "76.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1122",
            "questionFrontendId": "1044",
            "title": "Longest Duplicate Substring",
            "titleSlug": "longest-duplicate-substring",
            "acRate": "30.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Suffix Array",
                    "slug": "suffix-array"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1125",
            "questionFrontendId": "1166",
            "title": "Design File System",
            "titleSlug": "design-file-system",
            "acRate": "62.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1126",
            "questionFrontendId": "1167",
            "title": "Minimum Cost to Connect Sticks",
            "titleSlug": "minimum-cost-to-connect-sticks",
            "acRate": "69.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1127",
            "questionFrontendId": "1046",
            "title": "Last Stone Weight",
            "titleSlug": "last-stone-weight",
            "acRate": "65.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1128",
            "questionFrontendId": "1047",
            "title": "Remove All Adjacent Duplicates In String",
            "titleSlug": "remove-all-adjacent-duplicates-in-string",
            "acRate": "69.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1129",
            "questionFrontendId": "1048",
            "title": "Longest String Chain",
            "titleSlug": "longest-string-chain",
            "acRate": "61.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1135",
            "questionFrontendId": "1045",
            "title": "Customers Who Bought All Products",
            "titleSlug": "customers-who-bought-all-products",
            "acRate": "61.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1136",
            "questionFrontendId": "1050",
            "title": "Actors and Directors Who Cooperated At Least Three Times",
            "titleSlug": "actors-and-directors-who-cooperated-at-least-three-times",
            "acRate": "69.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1140",
            "questionFrontendId": "1054",
            "title": "Distant Barcodes",
            "titleSlug": "distant-barcodes",
            "acRate": "46.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1142",
            "questionFrontendId": "1197",
            "title": "Minimum Knight Moves",
            "titleSlug": "minimum-knight-moves",
            "acRate": "40.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1145",
            "questionFrontendId": "1074",
            "title": "Number of Submatrices That Sum to Target",
            "titleSlug": "number-of-submatrices-that-sum-to-target",
            "acRate": "74.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1146",
            "questionFrontendId": "1071",
            "title": "Greatest Common Divisor of Strings",
            "titleSlug": "greatest-common-divisor-of-strings",
            "acRate": "51.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1150",
            "questionFrontendId": "1214",
            "title": "Two Sum BSTs",
            "titleSlug": "two-sum-bsts",
            "acRate": "67.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1153",
            "questionFrontendId": "1068",
            "title": "Product Sales Analysis I",
            "titleSlug": "product-sales-analysis-i",
            "acRate": "81.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1154",
            "questionFrontendId": "1069",
            "title": "Product Sales Analysis II",
            "titleSlug": "product-sales-analysis-ii",
            "acRate": "81.8%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1155",
            "questionFrontendId": "1070",
            "title": "Product Sales Analysis III",
            "titleSlug": "product-sales-analysis-iii",
            "acRate": "42.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1157",
            "questionFrontendId": "1080",
            "title": "Insufficient Nodes in Root to Leaf Paths",
            "titleSlug": "insufficient-nodes-in-root-to-leaf-paths",
            "acRate": "55.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1159",
            "questionFrontendId": "1081",
            "title": "Smallest Subsequence of Distinct Characters",
            "titleSlug": "smallest-subsequence-of-distinct-characters",
            "acRate": "60.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1161",
            "questionFrontendId": "1075",
            "title": "Project Employees I",
            "titleSlug": "project-employees-i",
            "acRate": "61.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1165",
            "questionFrontendId": "1229",
            "title": "Meeting Scheduler",
            "titleSlug": "meeting-scheduler",
            "acRate": "55.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1168",
            "questionFrontendId": "1089",
            "title": "Duplicate Zeros",
            "titleSlug": "duplicate-zeros",
            "acRate": "51.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1170",
            "questionFrontendId": "1092",
            "title": "Shortest Common Supersequence ",
            "titleSlug": "shortest-common-supersequence",
            "acRate": "59.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1171",
            "questionFrontendId": "1091",
            "title": "Shortest Path in Binary Matrix",
            "titleSlug": "shortest-path-in-binary-matrix",
            "acRate": "47.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1172",
            "questionFrontendId": "1082",
            "title": "Sales Analysis I",
            "titleSlug": "sales-analysis-i",
            "acRate": "74.2%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1173",
            "questionFrontendId": "1083",
            "title": "Sales Analysis II",
            "titleSlug": "sales-analysis-ii",
            "acRate": "49.6%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1174",
            "questionFrontendId": "1084",
            "title": "Sales Analysis III",
            "titleSlug": "sales-analysis-iii",
            "acRate": "46.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1176",
            "questionFrontendId": "1244",
            "title": "Design A Leaderboard",
            "titleSlug": "design-a-leaderboard",
            "acRate": "67.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1178",
            "questionFrontendId": "1216",
            "title": "Valid Palindrome III",
            "titleSlug": "valid-palindrome-iii",
            "acRate": "50.0%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1179",
            "questionFrontendId": "511",
            "title": "Game Play Analysis I",
            "titleSlug": "game-play-analysis-i",
            "acRate": "74.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1184",
            "questionFrontendId": "1094",
            "title": "Car Pooling",
            "titleSlug": "car-pooling",
            "acRate": "56.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1185",
            "questionFrontendId": "1095",
            "title": "Find in Mountain Array",
            "titleSlug": "find-in-mountain-array",
            "acRate": "40.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1191",
            "questionFrontendId": "1258",
            "title": "Synonymous Sentences",
            "titleSlug": "synonymous-sentences",
            "acRate": "56.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1196",
            "questionFrontendId": "1105",
            "title": "Filling Bookcase Shelves",
            "titleSlug": "filling-bookcase-shelves",
            "acRate": "59.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1205",
            "questionFrontendId": "1108",
            "title": "Defanging an IP Address",
            "titleSlug": "defanging-an-ip-address",
            "acRate": "88.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1206",
            "questionFrontendId": "1109",
            "title": "Corporate Flight Bookings",
            "titleSlug": "corporate-flight-bookings",
            "acRate": "61.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1207",
            "questionFrontendId": "1110",
            "title": "Delete Nodes And Return Forest",
            "titleSlug": "delete-nodes-and-return-forest",
            "acRate": "69.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1212",
            "questionFrontendId": "1291",
            "title": "Sequential Digits",
            "titleSlug": "sequential-digits",
            "acRate": "65.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1213",
            "questionFrontendId": "1259",
            "title": "Handshakes That Don't Cross",
            "titleSlug": "handshakes-that-dont-cross",
            "acRate": "60.6%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1217",
            "questionFrontendId": "1122",
            "title": "Relative Sort Array",
            "titleSlug": "relative-sort-array",
            "acRate": "68.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting Sort",
                    "slug": "counting-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1218",
            "questionFrontendId": "1123",
            "title": "Lowest Common Ancestor of Deepest Leaves",
            "titleSlug": "lowest-common-ancestor-of-deepest-leaves",
            "acRate": "71.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1220",
            "questionFrontendId": "1125",
            "title": "Smallest Sufficient Team",
            "titleSlug": "smallest-sufficient-team",
            "acRate": "56.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1221",
            "questionFrontendId": "1287",
            "title": "Element Appearing More Than 25% In Sorted Array",
            "titleSlug": "element-appearing-more-than-25-in-sorted-array",
            "acRate": "61.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1222",
            "questionFrontendId": "1288",
            "title": "Remove Covered Intervals",
            "titleSlug": "remove-covered-intervals",
            "acRate": "56.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1227",
            "questionFrontendId": "1128",
            "title": "Number of Equivalent Domino Pairs",
            "titleSlug": "number-of-equivalent-domino-pairs",
            "acRate": "48.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1228",
            "questionFrontendId": "1130",
            "title": "Minimum Cost Tree From Leaf Values",
            "titleSlug": "minimum-cost-tree-from-leaf-values",
            "acRate": "67.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1229",
            "questionFrontendId": "1129",
            "title": "Shortest Path with Alternating Colors",
            "titleSlug": "shortest-path-with-alternating-colors",
            "acRate": "47.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1231",
            "questionFrontendId": "1299",
            "title": "Replace Elements with Greatest Element on Right Side",
            "titleSlug": "replace-elements-with-greatest-element-on-right-side",
            "acRate": "71.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1238",
            "questionFrontendId": "1138",
            "title": "Alphabet Board Path",
            "titleSlug": "alphabet-board-path",
            "acRate": "51.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1241",
            "questionFrontendId": "1313",
            "title": "Decompress Run-Length Encoded List",
            "titleSlug": "decompress-run-length-encoded-list",
            "acRate": "85.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1243",
            "questionFrontendId": "1315",
            "title": "Sum of Nodes with Even-Valued Grandparent",
            "titleSlug": "sum-of-nodes-with-even-valued-grandparent",
            "acRate": "85.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1249",
            "questionFrontendId": "1146",
            "title": "Snapshot Array",
            "titleSlug": "snapshot-array",
            "acRate": "37.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1250",
            "questionFrontendId": "1143",
            "title": "Longest Common Subsequence",
            "titleSlug": "longest-common-subsequence",
            "acRate": "57.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1253",
            "questionFrontendId": "1329",
            "title": "Sort the Matrix Diagonally",
            "titleSlug": "sort-the-matrix-diagonally",
            "acRate": "82.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1254",
            "questionFrontendId": "1302",
            "title": "Deepest Leaves Sum",
            "titleSlug": "deepest-leaves-sum",
            "acRate": "86.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1258",
            "questionFrontendId": "1148",
            "title": "Article Views I",
            "titleSlug": "article-views-i",
            "acRate": "74.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1261",
            "questionFrontendId": "1156",
            "title": "Swap For Longest Repeated Character Substring",
            "titleSlug": "swap-for-longest-repeated-character-substring",
            "acRate": "44.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1263",
            "questionFrontendId": "1155",
            "title": "Number of Dice Rolls With Target Sum",
            "titleSlug": "number-of-dice-rolls-with-target-sum",
            "acRate": "60.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1267",
            "questionFrontendId": "1171",
            "title": "Remove Zero Sum Consecutive Nodes from Linked List",
            "titleSlug": "remove-zero-sum-consecutive-nodes-from-linked-list",
            "acRate": "43.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1272",
            "questionFrontendId": "1169",
            "title": "Invalid Transactions",
            "titleSlug": "invalid-transactions",
            "acRate": "31.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1274",
            "questionFrontendId": "1360",
            "title": "Number of Days Between Two Dates",
            "titleSlug": "number-of-days-between-two-dates",
            "acRate": "49.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1275",
            "questionFrontendId": "1361",
            "title": "Validate Binary Tree Nodes",
            "titleSlug": "validate-binary-tree-nodes",
            "acRate": "44.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1276",
            "questionFrontendId": "1362",
            "title": "Closest Divisors",
            "titleSlug": "closest-divisors",
            "acRate": "60.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1277",
            "questionFrontendId": "1363",
            "title": "Largest Multiple of Three",
            "titleSlug": "largest-multiple-of-three",
            "acRate": "32.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1278",
            "questionFrontendId": "1164",
            "title": "Product Price at a Given Date",
            "titleSlug": "product-price-at-a-given-date",
            "acRate": "55.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1279",
            "questionFrontendId": "1175",
            "title": "Prime Arrangements",
            "titleSlug": "prime-arrangements",
            "acRate": "56.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "1280",
            "questionFrontendId": "1176",
            "title": "Diet Plan Performance",
            "titleSlug": "diet-plan-performance",
            "acRate": "53.3%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1285",
            "questionFrontendId": "1382",
            "title": "Balance a Binary Search Tree",
            "titleSlug": "balance-a-binary-search-tree",
            "acRate": "81.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1286",
            "questionFrontendId": "1425",
            "title": "Constrained Subsequence Sum",
            "titleSlug": "constrained-subsequence-sum",
            "acRate": "56.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1288",
            "questionFrontendId": "1186",
            "title": "Maximum Subarray Sum with One Deletion",
            "titleSlug": "maximum-subarray-sum-with-one-deletion",
            "acRate": "43.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1295",
            "questionFrontendId": "1954",
            "title": "Minimum Garden Perimeter to Collect Enough Apples",
            "titleSlug": "minimum-garden-perimeter-to-collect-enough-apples",
            "acRate": "53.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "1296",
            "questionFrontendId": "1483",
            "title": "Kth Ancestor of a Tree Node",
            "titleSlug": "kth-ancestor-of-a-tree-node",
            "acRate": "34.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1298",
            "questionFrontendId": "1190",
            "title": "Reverse Substrings Between Each Pair of Parentheses",
            "titleSlug": "reverse-substrings-between-each-pair-of-parentheses",
            "acRate": "66.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1299",
            "questionFrontendId": "1191",
            "title": "K-Concatenation Maximum Sum",
            "titleSlug": "k-concatenation-maximum-sum",
            "acRate": "23.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1300",
            "questionFrontendId": "1192",
            "title": "Critical Connections in a Network",
            "titleSlug": "critical-connections-in-a-network",
            "acRate": "55.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Biconnected Component",
                    "slug": "biconnected-component"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1301",
            "questionFrontendId": "1179",
            "title": "Reformat Department Table",
            "titleSlug": "reformat-department-table",
            "acRate": "77.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1303",
            "questionFrontendId": "2139",
            "title": "Minimum Moves to Reach Target Score",
            "titleSlug": "minimum-moves-to-reach-target-score",
            "acRate": "50.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1304",
            "questionFrontendId": "1405",
            "title": "Longest Happy String",
            "titleSlug": "longest-happy-string",
            "acRate": "57.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1305",
            "questionFrontendId": "1944",
            "title": "Number of Visible People in a Queue",
            "titleSlug": "number-of-visible-people-in-a-queue",
            "acRate": "68.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1306",
            "questionFrontendId": "1200",
            "title": "Minimum Absolute Difference",
            "titleSlug": "minimum-absolute-difference",
            "acRate": "69.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1308",
            "questionFrontendId": "1202",
            "title": "Smallest String With Swaps",
            "titleSlug": "smallest-string-with-swaps",
            "acRate": "58.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1309",
            "questionFrontendId": "1203",
            "title": "Sort Items by Groups Respecting Dependencies",
            "titleSlug": "sort-items-by-groups-respecting-dependencies",
            "acRate": "66.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1316",
            "questionFrontendId": "1195",
            "title": "Fizz Buzz Multithreaded",
            "titleSlug": "fizz-buzz-multithreaded",
            "acRate": "72.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Concurrency",
                    "slug": "concurrency"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1319",
            "questionFrontendId": "1207",
            "title": "Unique Number of Occurrences",
            "titleSlug": "unique-number-of-occurrences",
            "acRate": "77.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1320",
            "questionFrontendId": "1209",
            "title": "Remove All Adjacent Duplicates in String II",
            "titleSlug": "remove-all-adjacent-duplicates-in-string-ii",
            "acRate": "57.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1324",
            "questionFrontendId": "1706",
            "title": "Where Will the Ball Fall",
            "titleSlug": "where-will-the-ball-fall",
            "acRate": "71.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1327",
            "questionFrontendId": "1204",
            "title": "Last Person to Fit in the Bus",
            "titleSlug": "last-person-to-fit-in-the-bus",
            "acRate": "66.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1330",
            "questionFrontendId": "1218",
            "title": "Longest Arithmetic Subsequence of Given Difference",
            "titleSlug": "longest-arithmetic-subsequence-of-given-difference",
            "acRate": "54.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1331",
            "questionFrontendId": "1219",
            "title": "Path with Maximum Gold",
            "titleSlug": "path-with-maximum-gold",
            "acRate": "63.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1332",
            "questionFrontendId": "1220",
            "title": "Count Vowels Permutation",
            "titleSlug": "count-vowels-permutation",
            "acRate": "62.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1338",
            "questionFrontendId": "1211",
            "title": "Queries Quality and Percentage",
            "titleSlug": "queries-quality-and-percentage",
            "acRate": "52.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1349",
            "questionFrontendId": "1232",
            "title": "Check If It Is a Straight Line",
            "titleSlug": "check-if-it-is-a-straight-line",
            "acRate": "39.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1350",
            "questionFrontendId": "1233",
            "title": "Remove Sub-Folders from the Filesystem",
            "titleSlug": "remove-sub-folders-from-the-filesystem",
            "acRate": "65.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1351",
            "questionFrontendId": "1234",
            "title": "Replace the Substring for Balanced String",
            "titleSlug": "replace-the-substring-for-balanced-string",
            "acRate": "38.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1352",
            "questionFrontendId": "1235",
            "title": "Maximum Profit in Job Scheduling",
            "titleSlug": "maximum-profit-in-job-scheduling",
            "acRate": "54.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1353",
            "questionFrontendId": "2273",
            "title": "Find Resultant Array After Removing Anagrams",
            "titleSlug": "find-resultant-array-after-removing-anagrams",
            "acRate": "58.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1354",
            "questionFrontendId": "2225",
            "title": "Find Players With Zero or One Losses",
            "titleSlug": "find-players-with-zero-or-one-losses",
            "acRate": "73.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1355",
            "questionFrontendId": "2216",
            "title": "Minimum Deletions to Make Array Beautiful",
            "titleSlug": "minimum-deletions-to-make-array-beautiful",
            "acRate": "48.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1356",
            "questionFrontendId": "2193",
            "title": "Minimum Number of Moves to Make Palindrome",
            "titleSlug": "minimum-number-of-moves-to-make-palindrome",
            "acRate": "51.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1360",
            "questionFrontendId": "1239",
            "title": "Maximum Length of a Concatenated String with Unique Characters",
            "titleSlug": "maximum-length-of-a-concatenated-string-with-unique-characters",
            "acRate": "54.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1364",
            "questionFrontendId": "1726",
            "title": "Tuple with Same Product",
            "titleSlug": "tuple-with-same-product",
            "acRate": "61.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1366",
            "questionFrontendId": "1429",
            "title": "First Unique Number",
            "titleSlug": "first-unique-number",
            "acRate": "53.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1370",
            "questionFrontendId": "1248",
            "title": "Count Number of Nice Subarrays",
            "titleSlug": "count-number-of-nice-subarrays",
            "acRate": "64.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1371",
            "questionFrontendId": "1249",
            "title": "Minimum Remove to Make Valid Parentheses",
            "titleSlug": "minimum-remove-to-make-valid-parentheses",
            "acRate": "67.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1374",
            "questionFrontendId": "1428",
            "title": "Leftmost Column with at Least a One",
            "titleSlug": "leftmost-column-with-at-least-a-one",
            "acRate": "54.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1380",
            "questionFrontendId": "1254",
            "title": "Number of Closed Islands",
            "titleSlug": "number-of-closed-islands",
            "acRate": "66.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1381",
            "questionFrontendId": "1255",
            "title": "Maximum Score Words Formed by Letters",
            "titleSlug": "maximum-score-words-formed-by-letters",
            "acRate": "72.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1386",
            "questionFrontendId": "1260",
            "title": "Shift 2D Grid",
            "titleSlug": "shift-2d-grid",
            "acRate": "67.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1390",
            "questionFrontendId": "1251",
            "title": "Average Selling Price",
            "titleSlug": "average-selling-price",
            "acRate": "43.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1392",
            "questionFrontendId": "2215",
            "title": "Find the Difference of Two Arrays",
            "titleSlug": "find-the-difference-of-two-arrays",
            "acRate": "78.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1393",
            "questionFrontendId": "2218",
            "title": "Maximum Value of K Coins From Piles",
            "titleSlug": "maximum-value-of-k-coins-from-piles",
            "acRate": "60.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1397",
            "questionFrontendId": "1268",
            "title": "Search Suggestions System",
            "titleSlug": "search-suggestions-system",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1400",
            "questionFrontendId": "1275",
            "title": "Find Winner on a Tic Tac Toe Game",
            "titleSlug": "find-winner-on-a-tic-tac-toe-game",
            "acRate": "54.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1402",
            "questionFrontendId": "1277",
            "title": "Count Square Submatrices with All Ones",
            "titleSlug": "count-square-submatrices-with-all-ones",
            "acRate": "75.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1407",
            "questionFrontendId": "1282",
            "title": "Group the People Given the Group Size They Belong To",
            "titleSlug": "group-the-people-given-the-group-size-they-belong-to",
            "acRate": "87.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1410",
            "questionFrontendId": "1279",
            "title": "Traffic Light Controlled Intersection",
            "titleSlug": "traffic-light-controlled-intersection",
            "acRate": "73.2%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Concurrency",
                    "slug": "concurrency"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1411",
            "questionFrontendId": "1290",
            "title": "Convert Binary Number in a Linked List to Integer",
            "titleSlug": "convert-binary-number-in-a-linked-list-to-integer",
            "acRate": "81.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1414",
            "questionFrontendId": "1293",
            "title": "Shortest Path in a Grid with Obstacles Elimination",
            "titleSlug": "shortest-path-in-a-grid-with-obstacles-elimination",
            "acRate": "45.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1415",
            "questionFrontendId": "1280",
            "title": "Students and Examinations",
            "titleSlug": "students-and-examinations",
            "acRate": "56.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1418",
            "questionFrontendId": "2305",
            "title": "Fair Distribution of Cookies",
            "titleSlug": "fair-distribution-of-cookies",
            "acRate": "69.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1421",
            "questionFrontendId": "1295",
            "title": "Find Numbers with Even Number of Digits",
            "titleSlug": "find-numbers-with-even-number-of-digits",
            "acRate": "77.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1423",
            "questionFrontendId": "1297",
            "title": "Maximum Number of Occurrences of a Substring",
            "titleSlug": "maximum-number-of-occurrences-of-a-substring",
            "acRate": "51.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1426",
            "questionFrontendId": "1304",
            "title": "Find N Unique Integers Sum up to Zero",
            "titleSlug": "find-n-unique-integers-sum-up-to-zero",
            "acRate": "76.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1427",
            "questionFrontendId": "1305",
            "title": "All Elements in Two Binary Search Trees",
            "titleSlug": "all-elements-in-two-binary-search-trees",
            "acRate": "79.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1428",
            "questionFrontendId": "1306",
            "title": "Jump Game III",
            "titleSlug": "jump-game-iii",
            "acRate": "64.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1436",
            "questionFrontendId": "1311",
            "title": "Get Watched Videos by Your Friends",
            "titleSlug": "get-watched-videos-by-your-friends",
            "acRate": "46.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1437",
            "questionFrontendId": "1312",
            "title": "Minimum Insertion Steps to Make a String Palindrome",
            "titleSlug": "minimum-insertion-steps-to-make-a-string-palindrome",
            "acRate": "70.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1438",
            "questionFrontendId": "1303",
            "title": "Find the Team Size",
            "titleSlug": "find-the-team-size",
            "acRate": "89.5%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1446",
            "questionFrontendId": "1344",
            "title": "Angle Between Hands of a Clock",
            "titleSlug": "angle-between-hands-of-a-clock",
            "acRate": "63.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1447",
            "questionFrontendId": "1345",
            "title": "Jump Game IV",
            "titleSlug": "jump-game-iv",
            "acRate": "46.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1450",
            "questionFrontendId": "1325",
            "title": "Delete Leaves With a Given Value",
            "titleSlug": "delete-leaves-with-a-given-value",
            "acRate": "74.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1451",
            "questionFrontendId": "1326",
            "title": "Minimum Number of Taps to Open to Water a Garden",
            "titleSlug": "minimum-number-of-taps-to-open-to-water-a-garden",
            "acRate": "51.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1454",
            "questionFrontendId": "1332",
            "title": "Remove Palindromic Subsequences",
            "titleSlug": "remove-palindromic-subsequences",
            "acRate": "76.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1456",
            "questionFrontendId": "1334",
            "title": "Find the City With the Smallest Number of Neighbors at a Threshold Distance",
            "titleSlug": "find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",
            "acRate": "59.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1457",
            "questionFrontendId": "1335",
            "title": "Minimum Difficulty of a Job Schedule",
            "titleSlug": "minimum-difficulty-of-a-job-schedule",
            "acRate": "59.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1460",
            "questionFrontendId": "1358",
            "title": "Number of Substrings Containing All Three Characters",
            "titleSlug": "number-of-substrings-containing-all-three-characters",
            "acRate": "66.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1461",
            "questionFrontendId": "1359",
            "title": "Count All Valid Pickup and Delivery Options",
            "titleSlug": "count-all-valid-pickup-and-delivery-options",
            "acRate": "65.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1462",
            "questionFrontendId": "1327",
            "title": "List the Products Ordered in a Period",
            "titleSlug": "list-the-products-ordered-in-a-period",
            "acRate": "70.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1463",
            "questionFrontendId": "1337",
            "title": "The K Weakest Rows in a Matrix",
            "titleSlug": "the-k-weakest-rows-in-a-matrix",
            "acRate": "73.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1464",
            "questionFrontendId": "1338",
            "title": "Reduce Array Size to The Half",
            "titleSlug": "reduce-array-size-to-the-half",
            "acRate": "69.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1465",
            "questionFrontendId": "1339",
            "title": "Maximum Product of Splitted Binary Tree",
            "titleSlug": "maximum-product-of-splitted-binary-tree",
            "acRate": "47.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1466",
            "questionFrontendId": "1340",
            "title": "Jump Game V",
            "titleSlug": "jump-game-v",
            "acRate": "63.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1468",
            "questionFrontendId": "1346",
            "title": "Check If N and Its Double Exist",
            "titleSlug": "check-if-n-and-its-double-exist",
            "acRate": "37.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1469",
            "questionFrontendId": "1347",
            "title": "Minimum Number of Steps to Make Two Strings Anagram",
            "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram",
            "acRate": "82.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1474",
            "questionFrontendId": "1372",
            "title": "Longest ZigZag Path in a Binary Tree",
            "titleSlug": "longest-zigzag-path-in-a-binary-tree",
            "acRate": "66.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1475",
            "questionFrontendId": "1373",
            "title": "Maximum Sum BST in Binary Tree",
            "titleSlug": "maximum-sum-bst-in-binary-tree",
            "acRate": "40.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1476",
            "questionFrontendId": "1351",
            "title": "Count Negative Numbers in a Sorted Matrix",
            "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
            "acRate": "77.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1477",
            "questionFrontendId": "1352",
            "title": "Product of the Last K Numbers",
            "titleSlug": "product-of-the-last-k-numbers",
            "acRate": "50.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1478",
            "questionFrontendId": "1353",
            "title": "Maximum Number of Events That Can Be Attended",
            "titleSlug": "maximum-number-of-events-that-can-be-attended",
            "acRate": "32.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1479",
            "questionFrontendId": "1354",
            "title": "Construct Target Array With Multiple Sums",
            "titleSlug": "construct-target-array-with-multiple-sums",
            "acRate": "36.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1481",
            "questionFrontendId": "1350",
            "title": "Students With Invalid Departments",
            "titleSlug": "students-with-invalid-departments",
            "acRate": "89.6%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1482",
            "questionFrontendId": "1365",
            "title": "How Many Numbers Are Smaller Than the Current Number",
            "titleSlug": "how-many-numbers-are-smaller-than-the-current-number",
            "acRate": "86.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1484",
            "questionFrontendId": "1367",
            "title": "Linked List in Binary Tree",
            "titleSlug": "linked-list-in-binary-tree",
            "acRate": "43.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1486",
            "questionFrontendId": "1385",
            "title": "Find the Distance Value Between Two Arrays",
            "titleSlug": "find-the-distance-value-between-two-arrays",
            "acRate": "68.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1487",
            "questionFrontendId": "1386",
            "title": "Cinema Seat Allocation",
            "titleSlug": "cinema-seat-allocation",
            "acRate": "41.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1492",
            "questionFrontendId": "1376",
            "title": "Time Needed to Inform All Employees",
            "titleSlug": "time-needed-to-inform-all-employees",
            "acRate": "60.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1498",
            "questionFrontendId": "1379",
            "title": "Find a Corresponding Node of a Binary Tree in a Clone of That Tree",
            "titleSlug": "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",
            "acRate": "85.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1499",
            "questionFrontendId": "1383",
            "title": "Maximum Performance of a Team",
            "titleSlug": "maximum-performance-of-a-team",
            "acRate": "47.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1508",
            "questionFrontendId": "1392",
            "title": "Longest Happy Prefix",
            "titleSlug": "longest-happy-prefix",
            "acRate": "45.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1509",
            "questionFrontendId": "1378",
            "title": "Replace Employee ID With The Unique Identifier",
            "titleSlug": "replace-employee-id-with-the-unique-identifier",
            "acRate": "82.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1511",
            "questionFrontendId": "1395",
            "title": "Count Number of Teams",
            "titleSlug": "count-number-of-teams",
            "acRate": "66.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1512",
            "questionFrontendId": "1396",
            "title": "Design Underground System",
            "titleSlug": "design-underground-system",
            "acRate": "74.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1514",
            "questionFrontendId": "1413",
            "title": "Minimum Value to Get Positive Step by Step Sum",
            "titleSlug": "minimum-value-to-get-positive-step-by-step-sum",
            "acRate": "65.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1515",
            "questionFrontendId": "1414",
            "title": "Find the Minimum Number of Fibonacci Numbers Whose Sum Is K",
            "titleSlug": "find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1520",
            "questionFrontendId": "1404",
            "title": "Number of Steps to Reduce a Number in Binary Representation to One",
            "titleSlug": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one",
            "acRate": "52.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1523",
            "questionFrontendId": "1393",
            "title": "Capital Gain/Loss",
            "titleSlug": "capital-gainloss",
            "acRate": "85.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1524",
            "questionFrontendId": "1408",
            "title": "String Matching in an Array",
            "titleSlug": "string-matching-in-an-array",
            "acRate": "63.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1525",
            "questionFrontendId": "1409",
            "title": "Queries on a Permutation With Key",
            "titleSlug": "queries-on-a-permutation-with-key",
            "acRate": "84.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1528",
            "questionFrontendId": "1431",
            "title": "Kids With the Greatest Number of Candies",
            "titleSlug": "kids-with-the-greatest-number-of-candies",
            "acRate": "87.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1534",
            "questionFrontendId": "1419",
            "title": "Minimum Number of Frogs Croaking",
            "titleSlug": "minimum-number-of-frogs-croaking",
            "acRate": "50.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1535",
            "questionFrontendId": "1420",
            "title": "Build Array Where You Can Find The Maximum Exactly K Comparisons",
            "titleSlug": "build-array-where-you-can-find-the-maximum-exactly-k-comparisons",
            "acRate": "69.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1538",
            "questionFrontendId": "1423",
            "title": "Maximum Points You Can Obtain from Cards",
            "titleSlug": "maximum-points-you-can-obtain-from-cards",
            "acRate": "52.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1544",
            "questionFrontendId": "1448",
            "title": "Count Good Nodes in Binary Tree",
            "titleSlug": "count-good-nodes-in-binary-tree",
            "acRate": "73.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1547",
            "questionFrontendId": "1436",
            "title": "Destination City",
            "titleSlug": "destination-city",
            "acRate": "79.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1549",
            "questionFrontendId": "1438",
            "title": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",
            "titleSlug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
            "acRate": "49.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1551",
            "questionFrontendId": "1421",
            "title": "NPV Queries",
            "titleSlug": "npv-queries",
            "acRate": "82.5%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1557",
            "questionFrontendId": "1461",
            "title": "Check If a String Contains All Binary Codes of Size K",
            "titleSlug": "check-if-a-string-contains-all-binary-codes-of-size-k",
            "acRate": "56.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1559",
            "questionFrontendId": "1463",
            "title": "Cherry Pickup II",
            "titleSlug": "cherry-pickup-ii",
            "acRate": "72.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1567",
            "questionFrontendId": "1456",
            "title": "Maximum Number of Vowels in a Substring of Given Length",
            "titleSlug": "maximum-number-of-vowels-in-a-substring-of-given-length",
            "acRate": "58.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1568",
            "questionFrontendId": "1457",
            "title": "Pseudo-Palindromic Paths in a Binary Tree",
            "titleSlug": "pseudo-palindromic-paths-in-a-binary-tree",
            "acRate": "68.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1574",
            "questionFrontendId": "1464",
            "title": "Maximum Product of Two Elements in an Array",
            "titleSlug": "maximum-product-of-two-elements-in-an-array",
            "acRate": "82.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1575",
            "questionFrontendId": "1465",
            "title": "Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts",
            "titleSlug": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts",
            "acRate": "41.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1579",
            "questionFrontendId": "1454",
            "title": "Active Users",
            "titleSlug": "active-users",
            "acRate": "36.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1580",
            "questionFrontendId": "1470",
            "title": "Shuffle the Array",
            "titleSlug": "shuffle-the-array",
            "acRate": "88.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1582",
            "questionFrontendId": "1472",
            "title": "Design Browser History",
            "titleSlug": "design-browser-history",
            "acRate": "77.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1584",
            "questionFrontendId": "1491",
            "title": "Average Salary Excluding the Minimum and Maximum Salary",
            "titleSlug": "average-salary-excluding-the-minimum-and-maximum-salary",
            "acRate": "63.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1585",
            "questionFrontendId": "1492",
            "title": "The kth Factor of n",
            "titleSlug": "the-kth-factor-of-n",
            "acRate": "66.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1586",
            "questionFrontendId": "1493",
            "title": "Longest Subarray of 1's After Deleting One Element",
            "titleSlug": "longest-subarray-of-1s-after-deleting-one-element",
            "acRate": "67.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1603",
            "questionFrontendId": "1480",
            "title": "Running Sum of 1d Array",
            "titleSlug": "running-sum-of-1d-array",
            "acRate": "86.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1604",
            "questionFrontendId": "1481",
            "title": "Least Number of Unique Integers after K Removals",
            "titleSlug": "least-number-of-unique-integers-after-k-removals",
            "acRate": "62.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1605",
            "questionFrontendId": "1482",
            "title": "Minimum Number of Days to Make m Bouquets",
            "titleSlug": "minimum-number-of-days-to-make-m-bouquets",
            "acRate": "51.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1612",
            "questionFrontendId": "1488",
            "title": "Avoid Flood in The City",
            "titleSlug": "avoid-flood-in-the-city",
            "acRate": "27.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1613",
            "questionFrontendId": "1489",
            "title": "Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree",
            "titleSlug": "find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",
            "acRate": "68.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Minimum Spanning Tree",
                    "slug": "minimum-spanning-tree"
                },
                {
                    "name": "Strongly Connected Component",
                    "slug": "strongly-connected-component"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1616",
            "questionFrontendId": "1509",
            "title": "Minimum Difference Between Largest and Smallest Value in Three Moves",
            "titleSlug": "minimum-difference-between-largest-and-smallest-value-in-three-moves",
            "acRate": "55.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1619",
            "questionFrontendId": "1496",
            "title": "Path Crossing",
            "titleSlug": "path-crossing",
            "acRate": "62.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1620",
            "questionFrontendId": "1497",
            "title": "Check If Array Pairs Are Divisible by k",
            "titleSlug": "check-if-array-pairs-are-divisible-by-k",
            "acRate": "38.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1621",
            "questionFrontendId": "1498",
            "title": "Number of Subsequences That Satisfy the Given Sum Condition",
            "titleSlug": "number-of-subsequences-that-satisfy-the-given-sum-condition",
            "acRate": "43.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1623",
            "questionFrontendId": "1479",
            "title": "Sales by Day of the Week",
            "titleSlug": "sales-by-day-of-the-week",
            "acRate": "78.5%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1624",
            "questionFrontendId": "1485",
            "title": "Clone Binary Tree With Random Pointer",
            "titleSlug": "clone-binary-tree-with-random-pointer",
            "acRate": "80.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1626",
            "questionFrontendId": "1502",
            "title": "Can Make Arithmetic Progression From Sequence",
            "titleSlug": "can-make-arithmetic-progression-from-sequence",
            "acRate": "69.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1630",
            "questionFrontendId": "1523",
            "title": "Count Odd Numbers in an Interval Range",
            "titleSlug": "count-odd-numbers-in-an-interval-range",
            "acRate": "49.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1632",
            "questionFrontendId": "1525",
            "title": "Number of Good Ways to Split a String",
            "titleSlug": "number-of-good-ways-to-split-a-string",
            "acRate": "68.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1634",
            "questionFrontendId": "1490",
            "title": "Clone N-ary Tree",
            "titleSlug": "clone-n-ary-tree",
            "acRate": "83.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1635",
            "questionFrontendId": "1512",
            "title": "Number of Good Pairs",
            "titleSlug": "number-of-good-pairs",
            "acRate": "88.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1637",
            "questionFrontendId": "1531",
            "title": "String Compression II",
            "titleSlug": "string-compression-ii",
            "acRate": "52.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1639",
            "questionFrontendId": "1495",
            "title": "Friendly Movies Streamed Last Month",
            "titleSlug": "friendly-movies-streamed-last-month",
            "acRate": "49.0%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1644",
            "questionFrontendId": "1520",
            "title": "Maximum Number of Non-Overlapping Substrings",
            "titleSlug": "maximum-number-of-non-overlapping-substrings",
            "acRate": "39.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1646",
            "questionFrontendId": "1539",
            "title": "Kth Missing Positive Number",
            "titleSlug": "kth-missing-positive-number",
            "acRate": "59.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1651",
            "questionFrontendId": "1528",
            "title": "Shuffle String",
            "titleSlug": "shuffle-string",
            "acRate": "84.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1652",
            "questionFrontendId": "1529",
            "title": "Minimum Suffix Flips",
            "titleSlug": "minimum-suffix-flips",
            "acRate": "73.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1654",
            "questionFrontendId": "1511",
            "title": "Customer Order Frequency",
            "titleSlug": "customer-order-frequency",
            "acRate": "68.5%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1662",
            "questionFrontendId": "1558",
            "title": "Minimum Numbers of Function Calls to Make Target Array",
            "titleSlug": "minimum-numbers-of-function-calls-to-make-target-array",
            "acRate": "63.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1669",
            "questionFrontendId": "1547",
            "title": "Minimum Cost to Cut a Stick",
            "titleSlug": "minimum-cost-to-cut-a-stick",
            "acRate": "61.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1672",
            "questionFrontendId": "1533",
            "title": "Find the Index of the Large Integer",
            "titleSlug": "find-the-index-of-the-large-integer",
            "acRate": "56.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1675",
            "questionFrontendId": "1552",
            "title": "Magnetic Force Between Two Balls",
            "titleSlug": "magnetic-force-between-two-balls",
            "acRate": "60.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1676",
            "questionFrontendId": "1553",
            "title": "Minimum Number of Days to Eat N Oranges",
            "titleSlug": "minimum-number-of-days-to-eat-n-oranges",
            "acRate": "35.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1677",
            "questionFrontendId": "1572",
            "title": "Matrix Diagonal Sum",
            "titleSlug": "matrix-diagonal-sum",
            "acRate": "82.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1679",
            "questionFrontendId": "1574",
            "title": "Shortest Subarray to be Removed to Make Array Sorted",
            "titleSlug": "shortest-subarray-to-be-removed-to-make-array-sorted",
            "acRate": "37.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1680",
            "questionFrontendId": "1575",
            "title": "Count All Possible Routes",
            "titleSlug": "count-all-possible-routes",
            "acRate": "65.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1683",
            "questionFrontendId": "1561",
            "title": "Maximum Number of Coins You Can Get",
            "titleSlug": "maximum-number-of-coins-you-can-get",
            "acRate": "84.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Game Theory",
                    "slug": "game-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1684",
            "questionFrontendId": "1562",
            "title": "Find Latest Group of Size M",
            "titleSlug": "find-latest-group-of-size-m",
            "acRate": "42.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1685",
            "questionFrontendId": "1563",
            "title": "Stone Game V",
            "titleSlug": "stone-game-v",
            "acRate": "40.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Game Theory",
                    "slug": "game-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1690",
            "questionFrontendId": "1567",
            "title": "Maximum Length of Subarray With Positive Product",
            "titleSlug": "maximum-length-of-subarray-with-positive-product",
            "acRate": "44.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1692",
            "questionFrontendId": "1569",
            "title": "Number of Ways to Reorder Array to Get Same BST",
            "titleSlug": "number-of-ways-to-reorder-array-to-get-same-bst",
            "acRate": "53.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1693",
            "questionFrontendId": "1588",
            "title": "Sum of All Odd Length Subarrays",
            "titleSlug": "sum-of-all-odd-length-subarrays",
            "acRate": "83.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1694",
            "questionFrontendId": "1590",
            "title": "Make Sum Divisible by P",
            "titleSlug": "make-sum-divisible-by-p",
            "acRate": "28.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1700",
            "questionFrontendId": "1578",
            "title": "Minimum Time to Make Rope Colorful",
            "titleSlug": "minimum-time-to-make-rope-colorful",
            "acRate": "63.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1706",
            "questionFrontendId": "1584",
            "title": "Min Cost to Connect All Points",
            "titleSlug": "min-cost-to-connect-all-points",
            "acRate": "66.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Minimum Spanning Tree",
                    "slug": "minimum-spanning-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1708",
            "questionFrontendId": "1603",
            "title": "Design Parking System",
            "titleSlug": "design-parking-system",
            "acRate": "88.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1713",
            "questionFrontendId": "1570",
            "title": "Dot Product of Two Sparse Vectors",
            "titleSlug": "dot-product-of-two-sparse-vectors",
            "acRate": "89.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1715",
            "questionFrontendId": "1593",
            "title": "Split a String Into the Max Number of Unique Substrings",
            "titleSlug": "split-a-string-into-the-max-number-of-unique-substrings",
            "acRate": "56.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1718",
            "questionFrontendId": "1571",
            "title": "Warehouse Manager",
            "titleSlug": "warehouse-manager",
            "acRate": "87.7%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1723",
            "questionFrontendId": "1601",
            "title": "Maximum Number of Achievable Transfer Requests",
            "titleSlug": "maximum-number-of-achievable-transfer-requests",
            "acRate": "64.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1724",
            "questionFrontendId": "1581",
            "title": "Customer Who Visited but Did Not Make Any Transactions",
            "titleSlug": "customer-who-visited-but-did-not-make-any-transactions",
            "acRate": "69.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1725",
            "questionFrontendId": "1621",
            "title": "Number of Sets of K Non-Overlapping Line Segments",
            "titleSlug": "number-of-sets-of-k-non-overlapping-line-segments",
            "acRate": "43.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1730",
            "questionFrontendId": "1608",
            "title": "Special Array With X Elements Greater Than or Equal X",
            "titleSlug": "special-array-with-x-elements-greater-than-or-equal-x",
            "acRate": "60.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1731",
            "questionFrontendId": "1609",
            "title": "Even Odd Tree",
            "titleSlug": "even-odd-tree",
            "acRate": "65.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1736",
            "questionFrontendId": "1597",
            "title": "Build Binary Expression Tree From Infix Expression",
            "titleSlug": "build-binary-expression-tree-from-infix-expression",
            "acRate": "62.6%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1737",
            "questionFrontendId": "1614",
            "title": "Maximum Nesting Depth of the Parentheses",
            "titleSlug": "maximum-nesting-depth-of-the-parentheses",
            "acRate": "81.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1741",
            "questionFrontendId": "1636",
            "title": "Sort Array by Increasing Frequency",
            "titleSlug": "sort-array-by-increasing-frequency",
            "acRate": "71.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1753",
            "questionFrontendId": "1631",
            "title": "Path With Minimum Effort",
            "titleSlug": "path-with-minimum-effort",
            "acRate": "59.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1758",
            "questionFrontendId": "1655",
            "title": "Distribute Repeating Integers",
            "titleSlug": "distribute-repeating-integers",
            "acRate": "39.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1759",
            "questionFrontendId": "1613",
            "title": "Find the Missing IDs",
            "titleSlug": "find-the-missing-ids",
            "acRate": "73.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1761",
            "questionFrontendId": "1641",
            "title": "Count Sorted Vowel Strings",
            "titleSlug": "count-sorted-vowel-strings",
            "acRate": "78.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1762",
            "questionFrontendId": "1642",
            "title": "Furthest Building You Can Reach",
            "titleSlug": "furthest-building-you-can-reach",
            "acRate": "49.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1763",
            "questionFrontendId": "1623",
            "title": "All Valid Triplets That Can Represent a Country",
            "titleSlug": "all-valid-triplets-that-can-represent-a-country",
            "acRate": "82.8%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1764",
            "questionFrontendId": "1668",
            "title": "Maximum Repeating Substring",
            "titleSlug": "maximum-repeating-substring",
            "acRate": "38.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1767",
            "questionFrontendId": "1670",
            "title": "Design Front Middle Back Queue",
            "titleSlug": "design-front-middle-back-queue",
            "acRate": "56.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1768",
            "questionFrontendId": "1628",
            "title": "Design an Expression Tree With Evaluate Function",
            "titleSlug": "design-an-expression-tree-with-evaluate-function",
            "acRate": "82.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1770",
            "questionFrontendId": "1647",
            "title": "Minimum Deletions to Make Character Frequencies Unique",
            "titleSlug": "minimum-deletions-to-make-character-frequencies-unique",
            "acRate": "61.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1771",
            "questionFrontendId": "1648",
            "title": "Sell Diminishing-Valued Colored Balls",
            "titleSlug": "sell-diminishing-valued-colored-balls",
            "acRate": "30.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1772",
            "questionFrontendId": "1649",
            "title": "Create Sorted Array through Instructions",
            "titleSlug": "create-sorted-array-through-instructions",
            "acRate": "38.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1774",
            "questionFrontendId": "1634",
            "title": "Add Two Polynomials Represented as Linked Lists",
            "titleSlug": "add-two-polynomials-represented-as-linked-lists",
            "acRate": "55.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1776",
            "questionFrontendId": "1658",
            "title": "Minimum Operations to Reduce X to Zero",
            "titleSlug": "minimum-operations-to-reduce-x-to-zero",
            "acRate": "39.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1777",
            "questionFrontendId": "1657",
            "title": "Determine if Two Strings Are Close",
            "titleSlug": "determine-if-two-strings-are-close",
            "acRate": "55.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1781",
            "questionFrontendId": "1662",
            "title": "Check If Two String Arrays are Equivalent",
            "titleSlug": "check-if-two-string-arrays-are-equivalent",
            "acRate": "85.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1782",
            "questionFrontendId": "1663",
            "title": "Smallest String With A Given Numeric Value",
            "titleSlug": "smallest-string-with-a-given-numeric-value",
            "acRate": "66.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1786",
            "questionFrontendId": "1684",
            "title": "Count the Number of Consistent Strings",
            "titleSlug": "count-the-number-of-consistent-strings",
            "acRate": "82.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1790",
            "questionFrontendId": "1650",
            "title": "Lowest Common Ancestor of a Binary Tree III",
            "titleSlug": "lowest-common-ancestor-of-a-binary-tree-iii",
            "acRate": "79.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1791",
            "questionFrontendId": "1672",
            "title": "Richest Customer Wealth",
            "titleSlug": "richest-customer-wealth",
            "acRate": "87.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1792",
            "questionFrontendId": "1673",
            "title": "Find the Most Competitive Subsequence",
            "titleSlug": "find-the-most-competitive-subsequence",
            "acRate": "50.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1797",
            "questionFrontendId": "1678",
            "title": "Goal Parser Interpretation",
            "titleSlug": "goal-parser-interpretation",
            "acRate": "87.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1798",
            "questionFrontendId": "1679",
            "title": "Max Number of K-Sum Pairs",
            "titleSlug": "max-number-of-k-sum-pairs",
            "acRate": "55.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1800",
            "questionFrontendId": "1680",
            "title": "Concatenation of Consecutive Binary Numbers",
            "titleSlug": "concatenation-of-consecutive-binary-numbers",
            "acRate": "57.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1801",
            "questionFrontendId": "1661",
            "title": "Average Time of Process per Machine",
            "titleSlug": "average-time-of-process-per-machine",
            "acRate": "66.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1802",
            "questionFrontendId": "1700",
            "title": "Number of Students Unable to Eat Lunch",
            "titleSlug": "number-of-students-unable-to-eat-lunch",
            "acRate": "70.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1806",
            "questionFrontendId": "1688",
            "title": "Count of Matches in Tournament",
            "titleSlug": "count-of-matches-in-tournament",
            "acRate": "85.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1807",
            "questionFrontendId": "1689",
            "title": "Partitioning Into Minimum Number Of Deci-Binary Numbers",
            "titleSlug": "partitioning-into-minimum-number-of-deci-binary-numbers",
            "acRate": "88.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1813",
            "questionFrontendId": "1695",
            "title": "Maximum Erasure Value",
            "titleSlug": "maximum-erasure-value",
            "acRate": "58.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1814",
            "questionFrontendId": "1696",
            "title": "Jump Game VI",
            "titleSlug": "jump-game-vi",
            "acRate": "45.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1816",
            "questionFrontendId": "1676",
            "title": "Lowest Common Ancestor of a Binary Tree IV",
            "titleSlug": "lowest-common-ancestor-of-a-binary-tree-iv",
            "acRate": "78.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1817",
            "questionFrontendId": "1716",
            "title": "Calculate Money in Leetcode Bank",
            "titleSlug": "calculate-money-in-leetcode-bank",
            "acRate": "78.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1823",
            "questionFrontendId": "1704",
            "title": "Determine if String Halves Are Alike",
            "titleSlug": "determine-if-string-halves-are-alike",
            "acRate": "78.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1824",
            "questionFrontendId": "1705",
            "title": "Maximum Number of Eaten Apples",
            "titleSlug": "maximum-number-of-eaten-apples",
            "acRate": "38.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1825",
            "questionFrontendId": "1723",
            "title": "Find Minimum Time to Finish All Jobs",
            "titleSlug": "find-minimum-time-to-finish-all-jobs",
            "acRate": "42.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1827",
            "questionFrontendId": "1683",
            "title": "Invalid Tweets",
            "titleSlug": "invalid-tweets",
            "acRate": "84.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1829",
            "questionFrontendId": "1710",
            "title": "Maximum Units on a Truck",
            "titleSlug": "maximum-units-on-a-truck",
            "acRate": "73.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1835",
            "questionFrontendId": "1734",
            "title": "Decode XORed Permutation",
            "titleSlug": "decode-xored-permutation",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1836",
            "questionFrontendId": "1735",
            "title": "Count Ways to Make Array With Product",
            "titleSlug": "count-ways-to-make-array-with-product",
            "acRate": "50.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1842",
            "questionFrontendId": "1699",
            "title": "Number of Calls Between Two Persons",
            "titleSlug": "number-of-calls-between-two-persons",
            "acRate": "81.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1845",
            "questionFrontendId": "1727",
            "title": "Largest Submatrix With Rearrangements",
            "titleSlug": "largest-submatrix-with-rearrangements",
            "acRate": "75.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1849",
            "questionFrontendId": "1749",
            "title": "Maximum Absolute Sum of Any Subarray",
            "titleSlug": "maximum-absolute-sum-of-any-subarray",
            "acRate": "59.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1850",
            "questionFrontendId": "1750",
            "title": "Minimum Length of String After Deleting Similar Ends",
            "titleSlug": "minimum-length-of-string-after-deleting-similar-ends",
            "acRate": "45.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1851",
            "questionFrontendId": "1751",
            "title": "Maximum Number of Events That Can Be Attended II",
            "titleSlug": "maximum-number-of-events-that-can-be-attended-ii",
            "acRate": "62.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1874",
            "questionFrontendId": "1764",
            "title": "Form Array by Concatenating Subarrays of Another Array",
            "titleSlug": "form-array-by-concatenating-subarrays-of-another-array",
            "acRate": "53.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1878",
            "questionFrontendId": "1752",
            "title": "Check if Array Is Sorted and Rotated",
            "titleSlug": "check-if-array-is-sorted-and-rotated",
            "acRate": "50.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1882",
            "questionFrontendId": "1731",
            "title": "The Number of Employees Which Report to Each Employee",
            "titleSlug": "the-number-of-employees-which-report-to-each-employee",
            "acRate": "45.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1883",
            "questionFrontendId": "1740",
            "title": "Find Distance in a Binary Tree",
            "titleSlug": "find-distance-in-a-binary-tree",
            "acRate": "70.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1886",
            "questionFrontendId": "1760",
            "title": "Minimum Limit of Balls in a Bag",
            "titleSlug": "minimum-limit-of-balls-in-a-bag",
            "acRate": "60.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1887",
            "questionFrontendId": "1761",
            "title": "Minimum Degree of a Connected Trio in a Graph",
            "titleSlug": "minimum-degree-of-a-connected-trio-in-a-graph",
            "acRate": "42.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1888",
            "questionFrontendId": "1779",
            "title": "Find Nearest Point That Has the Same X or Y Coordinate",
            "titleSlug": "find-nearest-point-that-has-the-same-x-or-y-coordinate",
            "acRate": "68.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1891",
            "questionFrontendId": "1782",
            "title": "Count Pairs Of Nodes",
            "titleSlug": "count-pairs-of-nodes",
            "acRate": "39.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1892",
            "questionFrontendId": "1741",
            "title": "Find Total Time Spent by Each Employee",
            "titleSlug": "find-total-time-spent-by-each-employee",
            "acRate": "87.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1894",
            "questionFrontendId": "1768",
            "title": "Merge Strings Alternately",
            "titleSlug": "merge-strings-alternately",
            "acRate": "79.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1895",
            "questionFrontendId": "1769",
            "title": "Minimum Number of Operations to Move All Balls to Each Box",
            "titleSlug": "minimum-number-of-operations-to-move-all-balls-to-each-box",
            "acRate": "85.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1908",
            "questionFrontendId": "1757",
            "title": "Recyclable and Low Fat Products",
            "titleSlug": "recyclable-and-low-fat-products",
            "acRate": "89.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1909",
            "questionFrontendId": "1762",
            "title": "Buildings With an Ocean View",
            "titleSlug": "buildings-with-an-ocean-view",
            "acRate": "79.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1915",
            "questionFrontendId": "1790",
            "title": "Check if One String Swap Can Make Strings Equal",
            "titleSlug": "check-if-one-string-swap-can-make-strings-equal",
            "acRate": "45.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1917",
            "questionFrontendId": "1792",
            "title": "Maximum Average Pass Ratio",
            "titleSlug": "maximum-average-pass-ratio",
            "acRate": "53.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1918",
            "questionFrontendId": "1793",
            "title": "Maximum Score of a Good Subarray",
            "titleSlug": "maximum-score-of-a-good-subarray",
            "acRate": "64.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1919",
            "questionFrontendId": "1772",
            "title": "Sort Features by Popularity",
            "titleSlug": "sort-features-by-popularity",
            "acRate": "65.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1925",
            "questionFrontendId": "1814",
            "title": "Count Nice Pairs in an Array",
            "titleSlug": "count-nice-pairs-in-an-array",
            "acRate": "49.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1926",
            "questionFrontendId": "1777",
            "title": "Product's Price for Each Store",
            "titleSlug": "products-price-for-each-store",
            "acRate": "82.3%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1932",
            "questionFrontendId": "1783",
            "title": "Grand Slam Titles",
            "titleSlug": "grand-slam-titles",
            "acRate": "83.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1937",
            "questionFrontendId": "1788",
            "title": "Maximize the Beauty of the Garden",
            "titleSlug": "maximize-the-beauty-of-the-garden",
            "acRate": "67.7%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1938",
            "questionFrontendId": "1827",
            "title": "Minimum Operations to Make the Array Increasing",
            "titleSlug": "minimum-operations-to-make-the-array-increasing",
            "acRate": "79.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1947",
            "questionFrontendId": "1819",
            "title": "Number of Different Subsequences GCDs",
            "titleSlug": "number-of-different-subsequences-gcds",
            "acRate": "40.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1948",
            "questionFrontendId": "1795",
            "title": "Rearrange Products Table",
            "titleSlug": "rearrange-products-table",
            "acRate": "85.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1951",
            "questionFrontendId": "1823",
            "title": "Find the Winner of the Circular Game",
            "titleSlug": "find-the-winner-of-the-circular-game",
            "acRate": "78.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1952",
            "questionFrontendId": "1824",
            "title": "Minimum Sideway Jumps",
            "titleSlug": "minimum-sideway-jumps",
            "acRate": "49.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1956",
            "questionFrontendId": "1846",
            "title": "Maximum Element After Decreasing and Rearranging",
            "titleSlug": "maximum-element-after-decreasing-and-rearranging",
            "acRate": "66.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1957",
            "questionFrontendId": "1847",
            "title": "Closest Room",
            "titleSlug": "closest-room",
            "acRate": "37.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1958",
            "questionFrontendId": "1809",
            "title": "Ad-Free Sessions",
            "titleSlug": "ad-free-sessions",
            "acRate": "58.3%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1961",
            "questionFrontendId": "1833",
            "title": "Maximum Ice Cream Bars",
            "titleSlug": "maximum-ice-cream-bars",
            "acRate": "73.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1962",
            "questionFrontendId": "1834",
            "title": "Single-Threaded CPU",
            "titleSlug": "single-threaded-cpu",
            "acRate": "45.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1964",
            "questionFrontendId": "1811",
            "title": "Find Interview Candidates",
            "titleSlug": "find-interview-candidates",
            "acRate": "61.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1966",
            "questionFrontendId": "1838",
            "title": "Frequency of the Most Frequent Element",
            "titleSlug": "frequency-of-the-most-frequent-element",
            "acRate": "45.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1970",
            "questionFrontendId": "1859",
            "title": "Sorting the Sentence",
            "titleSlug": "sorting-the-sentence",
            "acRate": "83.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1978",
            "questionFrontendId": "1850",
            "title": "Minimum Adjacent Swaps to Reach the Kth Smallest Number",
            "titleSlug": "minimum-adjacent-swaps-to-reach-the-kth-smallest-number",
            "acRate": "71.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1983",
            "questionFrontendId": "1854",
            "title": "Maximum Population Year",
            "titleSlug": "maximum-population-year",
            "acRate": "60.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1985",
            "questionFrontendId": "1856",
            "title": "Maximum Subarray Min-Product",
            "titleSlug": "maximum-subarray-min-product",
            "acRate": "37.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1987",
            "questionFrontendId": "1876",
            "title": "Substrings of Size Three with Distinct Characters",
            "titleSlug": "substrings-of-size-three-with-distinct-characters",
            "acRate": "72.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1988",
            "questionFrontendId": "1877",
            "title": "Minimize Maximum Pair Sum in Array",
            "titleSlug": "minimize-maximum-pair-sum-in-array",
            "acRate": "81.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1993",
            "questionFrontendId": "1863",
            "title": "Sum of All Subset XOR Totals",
            "titleSlug": "sum-of-all-subset-xor-totals",
            "acRate": "81.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1994",
            "questionFrontendId": "1864",
            "title": "Minimum Number of Swaps to Make the Binary String Alternating",
            "titleSlug": "minimum-number-of-swaps-to-make-the-binary-string-alternating",
            "acRate": "43.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1997",
            "questionFrontendId": "1842",
            "title": "Next Palindrome Using Same Digits",
            "titleSlug": "next-palindrome-using-same-digits",
            "acRate": "53.2%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2000",
            "questionFrontendId": "1870",
            "title": "Minimum Speed to Arrive on Time",
            "titleSlug": "minimum-speed-to-arrive-on-time",
            "acRate": "46.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2001",
            "questionFrontendId": "1871",
            "title": "Jump Game VII",
            "titleSlug": "jump-game-vii",
            "acRate": "24.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2003",
            "questionFrontendId": "1852",
            "title": "Distinct Numbers in Each Subarray",
            "titleSlug": "distinct-numbers-in-each-subarray",
            "acRate": "71.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2012",
            "questionFrontendId": "1882",
            "title": "Process Tasks Using Servers",
            "titleSlug": "process-tasks-using-servers",
            "acRate": "40.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2015",
            "questionFrontendId": "1886",
            "title": "Determine Whether Matrix Can Be Obtained By Rotation",
            "titleSlug": "determine-whether-matrix-can-be-obtained-by-rotation",
            "acRate": "56.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2018",
            "questionFrontendId": "1889",
            "title": "Minimum Space Wasted From Packaging",
            "titleSlug": "minimum-space-wasted-from-packaging",
            "acRate": "31.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2021",
            "questionFrontendId": "1910",
            "title": "Remove All Occurrences of a Substring",
            "titleSlug": "remove-all-occurrences-of-a-substring",
            "acRate": "76.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2025",
            "questionFrontendId": "1897",
            "title": "Redistribute Characters to Make All Strings Equal",
            "titleSlug": "redistribute-characters-to-make-all-strings-equal",
            "acRate": "67.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2031",
            "questionFrontendId": "1884",
            "title": "Egg Drop With 2 Eggs and N Floors",
            "titleSlug": "egg-drop-with-2-eggs-and-n-floors",
            "acRate": "72.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2032",
            "questionFrontendId": "1903",
            "title": "Largest Odd Number in String",
            "titleSlug": "largest-odd-number-in-string",
            "acRate": "63.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2035",
            "questionFrontendId": "1905",
            "title": "Count Sub Islands",
            "titleSlug": "count-sub-islands",
            "acRate": "67.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2038",
            "questionFrontendId": "1926",
            "title": "Nearest Exit from Entrance in Maze",
            "titleSlug": "nearest-exit-from-entrance-in-maze",
            "acRate": "46.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2042",
            "questionFrontendId": "1913",
            "title": "Maximum Product Difference Between Two Pairs",
            "titleSlug": "maximum-product-difference-between-two-pairs",
            "acRate": "82.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2047",
            "questionFrontendId": "1901",
            "title": "Find a Peak Element II",
            "titleSlug": "find-a-peak-element-ii",
            "acRate": "50.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2048",
            "questionFrontendId": "1920",
            "title": "Build Array from Permutation",
            "titleSlug": "build-array-from-permutation",
            "acRate": "89.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2051",
            "questionFrontendId": "1923",
            "title": "Longest Common Subpath",
            "titleSlug": "longest-common-subpath",
            "acRate": "27.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Suffix Array",
                    "slug": "suffix-array"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2054",
            "questionFrontendId": "1942",
            "title": "The Number of the Smallest Unoccupied Chair",
            "titleSlug": "the-number-of-the-smallest-unoccupied-chair",
            "acRate": "41.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2056",
            "questionFrontendId": "2297",
            "title": "Jump Game VIII",
            "titleSlug": "jump-game-viii",
            "acRate": "46.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2058",
            "questionFrontendId": "1929",
            "title": "Concatenation of Array",
            "titleSlug": "concatenation-of-array",
            "acRate": "89.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2065",
            "questionFrontendId": "2307",
            "title": "Check for Contradictions in Equations",
            "titleSlug": "check-for-contradictions-in-equations",
            "acRate": "42.8%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2072",
            "questionFrontendId": "1950",
            "title": "Maximum of Minimum Values in All Subarrays",
            "titleSlug": "maximum-of-minimum-values-in-all-subarrays",
            "acRate": "49.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "2080",
            "questionFrontendId": "1958",
            "title": "Check if Move is Legal",
            "titleSlug": "check-if-move-is-legal",
            "acRate": "47.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2084",
            "questionFrontendId": "1953",
            "title": "Maximum Number of Weeks for Which You Can Work",
            "titleSlug": "maximum-number-of-weeks-for-which-you-can-work",
            "acRate": "40.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2086",
            "questionFrontendId": "1955",
            "title": "Count Number of Special Subsequences",
            "titleSlug": "count-number-of-special-subsequences",
            "acRate": "51.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2087",
            "questionFrontendId": "1934",
            "title": "Confirmation Rate",
            "titleSlug": "confirmation-rate",
            "acRate": "56.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2094",
            "questionFrontendId": "1962",
            "title": "Remove Stones to Minimize the Total",
            "titleSlug": "remove-stones-to-minimize-the-total",
            "acRate": "61.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2108",
            "questionFrontendId": "1981",
            "title": "Minimize the Difference Between Target and Chosen Elements",
            "titleSlug": "minimize-the-difference-between-target-and-chosen-elements",
            "acRate": "34.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2116",
            "questionFrontendId": "2006",
            "title": "Count Number of Pairs With Absolute Difference K",
            "titleSlug": "count-number-of-pairs-with-absolute-difference-k",
            "acRate": "83.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2117",
            "questionFrontendId": "2007",
            "title": "Find Original Array From Doubled Array",
            "titleSlug": "find-original-array-from-doubled-array",
            "acRate": "40.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2120",
            "questionFrontendId": "1972",
            "title": "First and Last Call On the Same Day",
            "titleSlug": "first-and-last-call-on-the-same-day",
            "acRate": "50.0%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2125",
            "questionFrontendId": "1998",
            "title": "GCD Sort of an Array",
            "titleSlug": "gcd-sort-of-an-array",
            "acRate": "45.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2132",
            "questionFrontendId": "2022",
            "title": "Convert 1D Array Into 2D Array",
            "titleSlug": "convert-1d-array-into-2d-array",
            "acRate": "60.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2134",
            "questionFrontendId": "2024",
            "title": "Maximize the Confusion of an Exam",
            "titleSlug": "maximize-the-confusion-of-an-exam",
            "acRate": "67.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2138",
            "questionFrontendId": "2012",
            "title": "Sum of Beauty in the Array",
            "titleSlug": "sum-of-beauty-in-the-array",
            "acRate": "47.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2139",
            "questionFrontendId": "2013",
            "title": "Detect Squares",
            "titleSlug": "detect-squares",
            "acRate": "50.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2149",
            "questionFrontendId": "2038",
            "title": "Remove Colored Pieces if Both Neighbors are the Same Color",
            "titleSlug": "remove-colored-pieces-if-both-neighbors-are-the-same-color",
            "acRate": "62.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Game Theory",
                    "slug": "game-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2150",
            "questionFrontendId": "2040",
            "title": "Kth Smallest Product of Two Sorted Arrays",
            "titleSlug": "kth-smallest-product-of-two-sorted-arrays",
            "acRate": "28.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2155",
            "questionFrontendId": "2028",
            "title": "Find Missing Observations",
            "titleSlug": "find-missing-observations",
            "acRate": "46.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2161",
            "questionFrontendId": "2034",
            "title": "Stock Price Fluctuation ",
            "titleSlug": "stock-price-fluctuation",
            "acRate": "48.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "2162",
            "questionFrontendId": "2035",
            "title": "Partition Array Into Two Arrays to Minimize Sum Difference",
            "titleSlug": "partition-array-into-two-arrays-to-minimize-sum-difference",
            "acRate": "20.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2163",
            "questionFrontendId": "2053",
            "title": "Kth Distinct String in an Array",
            "titleSlug": "kth-distinct-string-in-an-array",
            "acRate": "72.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2165",
            "questionFrontendId": "2055",
            "title": "Plates Between Candles",
            "titleSlug": "plates-between-candles",
            "acRate": "44.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2167",
            "questionFrontendId": "2020",
            "title": "Number of Accounts That Did Not Stream",
            "titleSlug": "number-of-accounts-that-did-not-stream",
            "acRate": "71.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2175",
            "questionFrontendId": "2049",
            "title": "Count Nodes With the Highest Score",
            "titleSlug": "count-nodes-with-the-highest-score",
            "acRate": "48.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2179",
            "questionFrontendId": "2070",
            "title": "Most Beautiful Item for Each Query",
            "titleSlug": "most-beautiful-item-for-each-query",
            "acRate": "49.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2182",
            "questionFrontendId": "2058",
            "title": "Find the Minimum and Maximum Number of Nodes Between Critical Points",
            "titleSlug": "find-the-minimum-and-maximum-number-of-nodes-between-critical-points",
            "acRate": "58.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2183",
            "questionFrontendId": "2059",
            "title": "Minimum Operations to Convert Number",
            "titleSlug": "minimum-operations-to-convert-number",
            "acRate": "48.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2188",
            "questionFrontendId": "2064",
            "title": "Minimized Maximum of Products Distributed to Any Store",
            "titleSlug": "minimized-maximum-of-products-distributed-to-any-store",
            "acRate": "52.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2192",
            "questionFrontendId": "2087",
            "title": "Minimum Cost Homecoming of a Robot in a Grid",
            "titleSlug": "minimum-cost-homecoming-of-a-robot-in-a-grid",
            "acRate": "50.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2197",
            "questionFrontendId": "2075",
            "title": "Decode the Slanted Ciphertext",
            "titleSlug": "decode-the-slanted-ciphertext",
            "acRate": "49.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2204",
            "questionFrontendId": "2099",
            "title": "Find Subsequence of Length K With the Largest Sum",
            "titleSlug": "find-subsequence-of-length-k-with-the-largest-sum",
            "acRate": "43.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2205",
            "questionFrontendId": "2100",
            "title": "Find Good Days to Rob the Bank",
            "titleSlug": "find-good-days-to-rob-the-bank",
            "acRate": "49.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2206",
            "questionFrontendId": "2101",
            "title": "Detonate the Maximum Bombs",
            "titleSlug": "detonate-the-maximum-bombs",
            "acRate": "48.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2207",
            "questionFrontendId": "2102",
            "title": "Sequentially Ordinal Rank Tracker",
            "titleSlug": "sequentially-ordinal-rank-tracker",
            "acRate": "64.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2210",
            "questionFrontendId": "2089",
            "title": "Find Target Indices After Sorting Array",
            "titleSlug": "find-target-indices-after-sorting-array",
            "acRate": "76.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2211",
            "questionFrontendId": "2090",
            "title": "K Radius Subarray Averages",
            "titleSlug": "k-radius-subarray-averages",
            "acRate": "46.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2213",
            "questionFrontendId": "2092",
            "title": "Find All People With Secret",
            "titleSlug": "find-all-people-with-secret",
            "acRate": "46.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2216",
            "questionFrontendId": "2095",
            "title": "Delete the Middle Node of a Linked List",
            "titleSlug": "delete-the-middle-node-of-a-linked-list",
            "acRate": "58.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2217",
            "questionFrontendId": "2096",
            "title": "Step-By-Step Directions From a Binary Tree Node to Another",
            "titleSlug": "step-by-step-directions-from-a-binary-tree-node-to-another",
            "acRate": "48.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2220",
            "questionFrontendId": "2115",
            "title": "Find All Possible Recipes from Given Supplies",
            "titleSlug": "find-all-possible-recipes-from-given-supplies",
            "acRate": "49.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2227",
            "questionFrontendId": "2104",
            "title": "Sum of Subarray Ranges",
            "titleSlug": "sum-of-subarray-ranges",
            "acRate": "61.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2231",
            "questionFrontendId": "2108",
            "title": "Find First Palindromic String in the Array",
            "titleSlug": "find-first-palindromic-string-in-the-array",
            "acRate": "84.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2232",
            "questionFrontendId": "2109",
            "title": "Adding Spaces to a String",
            "titleSlug": "adding-spaces-to-a-string",
            "acRate": "57.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2233",
            "questionFrontendId": "2110",
            "title": "Number of Smooth Descent Periods of a Stock",
            "titleSlug": "number-of-smooth-descent-periods-of-a-stock",
            "acRate": "58.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2234",
            "questionFrontendId": "2111",
            "title": "Minimum Operations to Make the Array K-Increasing",
            "titleSlug": "minimum-operations-to-make-the-array-k-increasing",
            "acRate": "38.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2236",
            "questionFrontendId": "2130",
            "title": "Maximum Twin Sum of a Linked List",
            "titleSlug": "maximum-twin-sum-of-a-linked-list",
            "acRate": "81.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2237",
            "questionFrontendId": "2131",
            "title": "Longest Palindrome by Concatenating Two Letter Words",
            "titleSlug": "longest-palindrome-by-concatenating-two-letter-words",
            "acRate": "48.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2244",
            "questionFrontendId": "2125",
            "title": "Number of Laser Beams in a Bank",
            "titleSlug": "number-of-laser-beams-in-a-bank",
            "acRate": "85.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2249",
            "questionFrontendId": "2145",
            "title": "Count the Hidden Sequences",
            "titleSlug": "count-the-hidden-sequences",
            "acRate": "37.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2255",
            "questionFrontendId": "2134",
            "title": "Minimum Swaps to Group All 1's Together II",
            "titleSlug": "minimum-swaps-to-group-all-1s-together-ii",
            "acRate": "52.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2256",
            "questionFrontendId": "2135",
            "title": "Count Words Obtained After Adding a Letter",
            "titleSlug": "count-words-obtained-after-adding-a-letter",
            "acRate": "42.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2259",
            "questionFrontendId": "2123",
            "title": "Minimum Operations to Remove Adjacent Ones in Matrix",
            "titleSlug": "minimum-operations-to-remove-adjacent-ones-in-matrix",
            "acRate": "41.5%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2262",
            "questionFrontendId": "2140",
            "title": "Solving Questions With Brainpower",
            "titleSlug": "solving-questions-with-brainpower",
            "acRate": "54.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2263",
            "questionFrontendId": "2141",
            "title": "Maximum Running Time of N Computers",
            "titleSlug": "maximum-running-time-of-n-computers",
            "acRate": "50.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2264",
            "questionFrontendId": "2160",
            "title": "Minimum Sum of Four Digit Number After Splitting Digits",
            "titleSlug": "minimum-sum-of-four-digit-number-after-splitting-digits",
            "acRate": "86.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2265",
            "questionFrontendId": "2161",
            "title": "Partition Array According to Given Pivot",
            "titleSlug": "partition-array-according-to-given-pivot",
            "acRate": "84.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2267",
            "questionFrontendId": "2163",
            "title": "Minimum Difference in Sums After Removal of Elements",
            "titleSlug": "minimum-difference-in-sums-after-removal-of-elements",
            "acRate": "47.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2271",
            "questionFrontendId": "2149",
            "title": "Rearrange Array Elements by Sign",
            "titleSlug": "rearrange-array-elements-by-sign",
            "acRate": "83.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2274",
            "questionFrontendId": "2154",
            "title": "Keep Multiplying Found Values by Two",
            "titleSlug": "keep-multiplying-found-values-by-two",
            "acRate": "71.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2288",
            "questionFrontendId": "2169",
            "title": "Count Operations to Obtain Zero",
            "titleSlug": "count-operations-to-obtain-zero",
            "acRate": "74.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2294",
            "questionFrontendId": "2187",
            "title": "Minimum Time to Complete Trips",
            "titleSlug": "minimum-time-to-complete-trips",
            "acRate": "38.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2301",
            "questionFrontendId": "2183",
            "title": "Count Array Pairs Divisible by K",
            "titleSlug": "count-array-pairs-divisible-by-k",
            "acRate": "29.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2302",
            "questionFrontendId": "2159",
            "title": "Order Two Columns Independently",
            "titleSlug": "order-two-columns-independently",
            "acRate": "59.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2304",
            "questionFrontendId": "2194",
            "title": "Cells in a Range on an Excel Sheet",
            "titleSlug": "cells-in-a-range-on-an-excel-sheet",
            "acRate": "83.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2305",
            "questionFrontendId": "2195",
            "title": "Append K Integers With Minimal Sum",
            "titleSlug": "append-k-integers-with-minimal-sum",
            "acRate": "25.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2307",
            "questionFrontendId": "2197",
            "title": "Replace Non-Coprime Numbers in Array",
            "titleSlug": "replace-non-coprime-numbers-in-array",
            "acRate": "38.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2309",
            "questionFrontendId": "2207",
            "title": "Maximize Number of Subsequences in a String",
            "titleSlug": "maximize-number-of-subsequences-in-a-string",
            "acRate": "34.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2313",
            "questionFrontendId": "2173",
            "title": "Longest Winning Streak",
            "titleSlug": "longest-winning-streak",
            "acRate": "52.0%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2324",
            "questionFrontendId": "2221",
            "title": "Find Triangular Sum of an Array",
            "titleSlug": "find-triangular-sum-of-an-array",
            "acRate": "78.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2325",
            "questionFrontendId": "2222",
            "title": "Number of Ways to Select Buildings",
            "titleSlug": "number-of-ways-to-select-buildings",
            "acRate": "50.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2326",
            "questionFrontendId": "2223",
            "title": "Sum of Scores of Built Strings",
            "titleSlug": "sum-of-scores-of-built-strings",
            "acRate": "39.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Suffix Array",
                    "slug": "suffix-array"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2330",
            "questionFrontendId": "2234",
            "title": "Maximum Total Beauty of the Gardens",
            "titleSlug": "maximum-total-beauty-of-the-gardens",
            "acRate": "28.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2333",
            "questionFrontendId": "2250",
            "title": "Count Number of Rectangles Containing Each Point",
            "titleSlug": "count-number-of-rectangles-containing-each-point",
            "acRate": "34.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2334",
            "questionFrontendId": "2251",
            "title": "Number of Flowers in Full Bloom",
            "titleSlug": "number-of-flowers-in-full-bloom",
            "acRate": "56.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2337",
            "questionFrontendId": "2259",
            "title": "Remove Digit From Number to Maximize Result",
            "titleSlug": "remove-digit-from-number-to-maximize-result",
            "acRate": "44.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2339",
            "questionFrontendId": "2261",
            "title": "K Divisible Elements Subarrays",
            "titleSlug": "k-divisible-elements-subarrays",
            "acRate": "50.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "2340",
            "questionFrontendId": "2262",
            "title": "Total Appeal of A String",
            "titleSlug": "total-appeal-of-a-string",
            "acRate": "55.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2342",
            "questionFrontendId": "2256",
            "title": "Minimum Average Difference",
            "titleSlug": "minimum-average-difference",
            "acRate": "43.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2344",
            "questionFrontendId": "2258",
            "title": "Escape the Spreading Fire",
            "titleSlug": "escape-the-spreading-fire",
            "acRate": "35.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2347",
            "questionFrontendId": "2265",
            "title": "Count Nodes Equal to Average of Subtree",
            "titleSlug": "count-nodes-equal-to-average-of-subtree",
            "acRate": "86.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2348",
            "questionFrontendId": "2266",
            "title": "Count Number of Texts",
            "titleSlug": "count-number-of-texts",
            "acRate": "47.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2350",
            "questionFrontendId": "2239",
            "title": "Find Closest Number to Zero",
            "titleSlug": "find-closest-number-to-zero",
            "acRate": "44.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2354",
            "questionFrontendId": "2214",
            "title": "Minimum Health to Beat Game",
            "titleSlug": "minimum-health-to-beat-game",
            "acRate": "57.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2355",
            "questionFrontendId": "2274",
            "title": "Maximum Consecutive Floors Without Special Floors",
            "titleSlug": "maximum-consecutive-floors-without-special-floors",
            "acRate": "51.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2358",
            "questionFrontendId": "2270",
            "title": "Number of Ways to Split Array",
            "titleSlug": "number-of-ways-to-split-array",
            "acRate": "47.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2360",
            "questionFrontendId": "2272",
            "title": "Substring With Largest Variance",
            "titleSlug": "substring-with-largest-variance",
            "acRate": "46.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2362",
            "questionFrontendId": "2244",
            "title": "Minimum Rounds to Complete All Tasks",
            "titleSlug": "minimum-rounds-to-complete-all-tasks",
            "acRate": "62.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2364",
            "questionFrontendId": "2246",
            "title": "Longest Path With Different Adjacent Characters",
            "titleSlug": "longest-path-with-different-adjacent-characters",
            "acRate": "54.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2366",
            "questionFrontendId": "2279",
            "title": "Maximum Bags With Full Capacity of Rocks",
            "titleSlug": "maximum-bags-with-full-capacity-of-rocks",
            "acRate": "67.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2368",
            "questionFrontendId": "2281",
            "title": "Sum of Total Strength of Wizards",
            "titleSlug": "sum-of-total-strength-of-wizards",
            "acRate": "27.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2369",
            "questionFrontendId": "2219",
            "title": "Maximum Sum Score of Array",
            "titleSlug": "maximum-sum-score-of-array",
            "acRate": "62.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2370",
            "questionFrontendId": "2228",
            "title": "Users With Two Purchases Within Seven Days",
            "titleSlug": "users-with-two-purchases-within-seven-days",
            "acRate": "44.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2372",
            "questionFrontendId": "2287",
            "title": "Rearrange Characters to Make Target String",
            "titleSlug": "rearrange-characters-to-make-target-string",
            "acRate": "58.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2373",
            "questionFrontendId": "2288",
            "title": "Apply Discount to Prices",
            "titleSlug": "apply-discount-to-prices",
            "acRate": "29.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2374",
            "questionFrontendId": "2289",
            "title": "Steps to Make Array Non-decreasing",
            "titleSlug": "steps-to-make-array-non-decreasing",
            "acRate": "21.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2376",
            "questionFrontendId": "2238",
            "title": "Number of Times a Driver Was a Passenger",
            "titleSlug": "number-of-times-a-driver-was-a-passenger",
            "acRate": "70.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2383",
            "questionFrontendId": "2235",
            "title": "Add Two Integers",
            "titleSlug": "add-two-integers",
            "acRate": "87.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2384",
            "questionFrontendId": "2236",
            "title": "Root Equals Sum of Children",
            "titleSlug": "root-equals-sum-of-children",
            "acRate": "84.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2387",
            "questionFrontendId": "2294",
            "title": "Partition Array Such That Maximum Difference Is K",
            "titleSlug": "partition-array-such-that-maximum-difference-is-k",
            "acRate": "73.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2388",
            "questionFrontendId": "2295",
            "title": "Replace Elements in an Array",
            "titleSlug": "replace-elements-in-an-array",
            "acRate": "57.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2389",
            "questionFrontendId": "2296",
            "title": "Design a Text Editor",
            "titleSlug": "design-a-text-editor",
            "acRate": "43.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2394",
            "questionFrontendId": "2302",
            "title": "Count Subarrays With Score Less Than K",
            "titleSlug": "count-subarrays-with-score-less-than-k",
            "acRate": "53.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2395",
            "questionFrontendId": "2311",
            "title": "Longest Binary Subsequence Less Than or Equal to K",
            "titleSlug": "longest-binary-subsequence-less-than-or-equal-to-k",
            "acRate": "37.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2400",
            "questionFrontendId": "2322",
            "title": "Minimum Score After Removals on a Tree",
            "titleSlug": "minimum-score-after-removals-on-a-tree",
            "acRate": "51.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2401",
            "questionFrontendId": "2315",
            "title": "Count Asterisks",
            "titleSlug": "count-asterisks",
            "acRate": "82.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2403",
            "questionFrontendId": "2316",
            "title": "Count Unreachable Pairs of Nodes in an Undirected Graph",
            "titleSlug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph",
            "acRate": "49.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2405",
            "questionFrontendId": "2268",
            "title": "Minimum Number of Keypresses",
            "titleSlug": "minimum-number-of-keypresses",
            "acRate": "70.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2408",
            "questionFrontendId": "2327",
            "title": "Number of People Aware of a Secret",
            "titleSlug": "number-of-people-aware-of-a-secret",
            "acRate": "45.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2409",
            "questionFrontendId": "2328",
            "title": "Number of Increasing Paths in a Grid",
            "titleSlug": "number-of-increasing-paths-in-a-grid",
            "acRate": "58.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2413",
            "questionFrontendId": "2336",
            "title": "Smallest Number in Infinite Set",
            "titleSlug": "smallest-number-in-infinite-set",
            "acRate": "72.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2414",
            "questionFrontendId": "2337",
            "title": "Move Pieces to Obtain a String",
            "titleSlug": "move-pieces-to-obtain-a-string",
            "acRate": "47.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2418",
            "questionFrontendId": "2333",
            "title": "Minimum Sum of Squared Difference",
            "titleSlug": "minimum-sum-of-squared-difference",
            "acRate": "25.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2421",
            "questionFrontendId": "2341",
            "title": "Maximum Number of Pairs in Array",
            "titleSlug": "maximum-number-of-pairs-in-array",
            "acRate": "75.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2428",
            "questionFrontendId": "2352",
            "title": "Equal Row and Column Pairs",
            "titleSlug": "equal-row-and-column-pairs",
            "acRate": "70.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2429",
            "questionFrontendId": "2353",
            "title": "Design a Food Rating System",
            "titleSlug": "design-a-food-rating-system",
            "acRate": "45.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2431",
            "questionFrontendId": "2292",
            "title": "Products With Three or More Orders in Two Consecutive Years",
            "titleSlug": "products-with-three-or-more-orders-in-two-consecutive-years",
            "acRate": "38.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2433",
            "questionFrontendId": "2347",
            "title": "Best Poker Hand",
            "titleSlug": "best-poker-hand",
            "acRate": "60.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2435",
            "questionFrontendId": "2350",
            "title": "Shortest Impossible Sequence of Rolls",
            "titleSlug": "shortest-impossible-sequence-of-rolls",
            "acRate": "68.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2436",
            "questionFrontendId": "2357",
            "title": "Make Array Zero by Subtracting Equal Amounts",
            "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
            "acRate": "72.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2443",
            "questionFrontendId": "2369",
            "title": "Check if There is a Valid Partition For The Array",
            "titleSlug": "check-if-there-is-a-valid-partition-for-the-array",
            "acRate": "51.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2449",
            "questionFrontendId": "2398",
            "title": "Maximum Number of Robots Within Budget",
            "titleSlug": "maximum-number-of-robots-within-budget",
            "acRate": "34.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2450",
            "questionFrontendId": "2366",
            "title": "Minimum Replacements to Sort the Array",
            "titleSlug": "minimum-replacements-to-sort-the-array",
            "acRate": "53.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2451",
            "questionFrontendId": "2324",
            "title": "Product Sales Analysis IV",
            "titleSlug": "product-sales-analysis-iv",
            "acRate": "72.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2452",
            "questionFrontendId": "2329",
            "title": "Product Sales Analysis V",
            "titleSlug": "product-sales-analysis-v",
            "acRate": "69.1%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2456",
            "questionFrontendId": "2375",
            "title": "Construct Smallest Number From DI String",
            "titleSlug": "construct-smallest-number-from-di-string",
            "acRate": "75.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2457",
            "questionFrontendId": "2376",
            "title": "Count Special Integers",
            "titleSlug": "count-special-integers",
            "acRate": "38.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2458",
            "questionFrontendId": "2323",
            "title": "Find Minimum Time to Finish All Jobs II",
            "titleSlug": "find-minimum-time-to-finish-all-jobs-ii",
            "acRate": "66.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2461",
            "questionFrontendId": "2385",
            "title": "Amount of Time for Binary Tree to Be Infected",
            "titleSlug": "amount-of-time-for-binary-tree-to-be-infected",
            "acRate": "63.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2462",
            "questionFrontendId": "2386",
            "title": "Find the K-Sum of an Array",
            "titleSlug": "find-the-k-sum-of-an-array",
            "acRate": "38.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2464",
            "questionFrontendId": "2380",
            "title": "Time Needed to Rearrange a Binary String",
            "titleSlug": "time-needed-to-rearrange-a-binary-string",
            "acRate": "49.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2468",
            "questionFrontendId": "2330",
            "title": "Valid Palindrome IV",
            "titleSlug": "valid-palindrome-iv",
            "acRate": "75.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2470",
            "questionFrontendId": "2390",
            "title": "Removing Stars From a String",
            "titleSlug": "removing-stars-from-a-string",
            "acRate": "74.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2471",
            "questionFrontendId": "2391",
            "title": "Minimum Amount of Time to Collect Garbage",
            "titleSlug": "minimum-amount-of-time-to-collect-garbage",
            "acRate": "85.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2473",
            "questionFrontendId": "2342",
            "title": "Max Sum of a Pair With Equal Sum of Digits",
            "titleSlug": "max-sum-of-a-pair-with-equal-sum-of-digits",
            "acRate": "54.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2474",
            "questionFrontendId": "2340",
            "title": "Minimum Adjacent Swaps to Make a Valid Array",
            "titleSlug": "minimum-adjacent-swaps-to-make-a-valid-array",
            "acRate": "72.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2477",
            "questionFrontendId": "2400",
            "title": "Number of Ways to Reach a Position After Exactly k Steps",
            "titleSlug": "number-of-ways-to-reach-a-position-after-exactly-k-steps",
            "acRate": "34.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2479",
            "questionFrontendId": "2402",
            "title": "Meeting Rooms III",
            "titleSlug": "meeting-rooms-iii",
            "acRate": "45.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2481",
            "questionFrontendId": "2396",
            "title": "Strictly Palindromic Number",
            "titleSlug": "strictly-palindromic-number",
            "acRate": "87.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Brainteaser",
                    "slug": "brainteaser"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2487",
            "questionFrontendId": "2405",
            "title": "Optimal Partition of String",
            "titleSlug": "optimal-partition-of-string",
            "acRate": "78.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2488",
            "questionFrontendId": "2406",
            "title": "Divide Intervals Into Minimum Number of Groups",
            "titleSlug": "divide-intervals-into-minimum-number-of-groups",
            "acRate": "46.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2490",
            "questionFrontendId": "2355",
            "title": "Maximum Number of Books You Can Take",
            "titleSlug": "maximum-number-of-books-you-can-take",
            "acRate": "41.3%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2491",
            "questionFrontendId": "2413",
            "title": "Smallest Even Multiple",
            "titleSlug": "smallest-even-multiple",
            "acRate": "87.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2497",
            "questionFrontendId": "2410",
            "title": "Maximum Matching of Players With Trainers",
            "titleSlug": "maximum-matching-of-players-with-trainers",
            "acRate": "62.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2498",
            "questionFrontendId": "2411",
            "title": "Smallest Subarrays With Maximum Bitwise OR",
            "titleSlug": "smallest-subarrays-with-maximum-bitwise-or",
            "acRate": "43.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2499",
            "questionFrontendId": "2412",
            "title": "Minimum Money Required Before Transactions",
            "titleSlug": "minimum-money-required-before-transactions",
            "acRate": "39.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2504",
            "questionFrontendId": "2420",
            "title": "Find All Good Indices",
            "titleSlug": "find-all-good-indices",
            "acRate": "38.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2520",
            "questionFrontendId": "2434",
            "title": "Using a Robot to Print the Lexicographically Smallest String",
            "titleSlug": "using-a-robot-to-print-the-lexicographically-smallest-string",
            "acRate": "39.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2530",
            "questionFrontendId": "2439",
            "title": "Minimize Maximum of Array",
            "titleSlug": "minimize-maximum-of-array",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2534",
            "questionFrontendId": "2394",
            "title": "Employees With Deductions",
            "titleSlug": "employees-with-deductions",
            "acRate": "40.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2538",
            "questionFrontendId": "2448",
            "title": "Minimum Cost to Make Array Equal",
            "titleSlug": "minimum-cost-to-make-array-equal",
            "acRate": "45.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2539",
            "questionFrontendId": "2449",
            "title": "Minimum Number of Operations to Make Arrays Similar",
            "titleSlug": "minimum-number-of-operations-to-make-arrays-similar",
            "acRate": "61.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2541",
            "questionFrontendId": "2443",
            "title": "Sum of Number and Its Reverse",
            "titleSlug": "sum-of-number-and-its-reverse",
            "acRate": "46.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2551",
            "questionFrontendId": "2460",
            "title": "Apply Operations to an Array",
            "titleSlug": "apply-operations-to-an-array",
            "acRate": "67.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2552",
            "questionFrontendId": "2461",
            "title": "Maximum Sum of Distinct Subarrays With Length K",
            "titleSlug": "maximum-sum-of-distinct-subarrays-with-length-k",
            "acRate": "33.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2553",
            "questionFrontendId": "2462",
            "title": "Total Cost to Hire K Workers",
            "titleSlug": "total-cost-to-hire-k-workers",
            "acRate": "43.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2555",
            "questionFrontendId": "2408",
            "title": "Design SQL",
            "titleSlug": "design-sql",
            "acRate": "78.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2556",
            "questionFrontendId": "2469",
            "title": "Convert the Temperature",
            "titleSlug": "convert-the-temperature",
            "acRate": "89.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2558",
            "questionFrontendId": "2471",
            "title": "Minimum Number of Operations to Sort a Binary Tree by Level",
            "titleSlug": "minimum-number-of-operations-to-sort-a-binary-tree-by-level",
            "acRate": "61.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2561",
            "questionFrontendId": "2465",
            "title": "Number of Distinct Averages",
            "titleSlug": "number-of-distinct-averages",
            "acRate": "57.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2565",
            "questionFrontendId": "2422",
            "title": "Merge Operations to Turn Array Into a Palindrome",
            "titleSlug": "merge-operations-to-turn-array-into-a-palindrome",
            "acRate": "69.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2566",
            "questionFrontendId": "2475",
            "title": "Number of Unequal Triplets in Array",
            "titleSlug": "number-of-unequal-triplets-in-array",
            "acRate": "71.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2571",
            "questionFrontendId": "2485",
            "title": "Find the Pivot Integer",
            "titleSlug": "find-the-pivot-integer",
            "acRate": "80.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2572",
            "questionFrontendId": "2486",
            "title": "Append Characters to String to Make Subsequence",
            "titleSlug": "append-characters-to-string-to-make-subsequence",
            "acRate": "65.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2573",
            "questionFrontendId": "2487",
            "title": "Remove Nodes From Linked List",
            "titleSlug": "remove-nodes-from-linked-list",
            "acRate": "65.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2576",
            "questionFrontendId": "2483",
            "title": "Minimum Penalty for a Shop",
            "titleSlug": "minimum-penalty-for-a-shop",
            "acRate": "67.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2586",
            "questionFrontendId": "2501",
            "title": "Longest Square Streak in an Array",
            "titleSlug": "longest-square-streak-in-an-array",
            "acRate": "39.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2587",
            "questionFrontendId": "2502",
            "title": "Design Memory Allocator",
            "titleSlug": "design-memory-allocator",
            "acRate": "52.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2590",
            "questionFrontendId": "2497",
            "title": "Maximum Star Sum of a Graph",
            "titleSlug": "maximum-star-sum-of-a-graph",
            "acRate": "38.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2603",
            "questionFrontendId": "2512",
            "title": "Reward Top K Students",
            "titleSlug": "reward-top-k-students",
            "acRate": "44.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2606",
            "questionFrontendId": "2482",
            "title": "Difference Between Ones and Zeros in Row and Column",
            "titleSlug": "difference-between-ones-and-zeros-in-row-and-column",
            "acRate": "84.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2613",
            "questionFrontendId": "2474",
            "title": "Customers With Strictly Increasing Purchases",
            "titleSlug": "customers-with-strictly-increasing-purchases",
            "acRate": "43.2%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2614",
            "questionFrontendId": "2529",
            "title": "Maximum Count of Positive Integer and Negative Integer",
            "titleSlug": "maximum-count-of-positive-integer-and-negative-integer",
            "acRate": "71.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2617",
            "questionFrontendId": "2534",
            "title": "Time Taken to Cross the Door",
            "titleSlug": "time-taken-to-cross-the-door",
            "acRate": "50.9%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2621",
            "questionFrontendId": "2527",
            "title": "Find Xor-Beauty of Array",
            "titleSlug": "find-xor-beauty-of-array",
            "acRate": "67.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2626",
            "questionFrontendId": "2537",
            "title": "Count the Number of Good Subarrays",
            "titleSlug": "count-the-number-of-good-subarrays",
            "acRate": "49.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2636",
            "questionFrontendId": "2542",
            "title": "Maximum Subsequence Score",
            "titleSlug": "maximum-subsequence-score",
            "acRate": "53.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2646",
            "questionFrontendId": "2583",
            "title": "Kth Largest Sum in a Binary Tree",
            "titleSlug": "kth-largest-sum-in-a-binary-tree",
            "acRate": "47.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2650",
            "questionFrontendId": "2578",
            "title": "Split With Minimum Sum",
            "titleSlug": "split-with-minimum-sum",
            "acRate": "69.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2658",
            "questionFrontendId": "2519",
            "title": "Count the Number of K-Big Indices",
            "titleSlug": "count-the-number-of-k-big-indices",
            "acRate": "53.4%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2669",
            "questionFrontendId": "2606",
            "title": "Find the Substring With Maximum Cost",
            "titleSlug": "find-the-substring-with-maximum-cost",
            "acRate": "56.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2670",
            "questionFrontendId": "2607",
            "title": "Make K-Subarray Sums Equal",
            "titleSlug": "make-k-subarray-sums-equal",
            "acRate": "36.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2677",
            "questionFrontendId": "2641",
            "title": "Cousins in Binary Tree II",
            "titleSlug": "cousins-in-binary-tree-ii",
            "acRate": "68.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2681",
            "questionFrontendId": "2551",
            "title": "Put Marbles in Bags",
            "titleSlug": "put-marbles-in-bags",
            "acRate": "66.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2684",
            "questionFrontendId": "2660",
            "title": "Determine the Winner of a Bowling Game",
            "titleSlug": "determine-the-winner-of-a-bowling-game",
            "acRate": "34.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2692",
            "questionFrontendId": "2558",
            "title": "Take Gifts From the Richest Pile",
            "titleSlug": "take-gifts-from-the-richest-pile",
            "acRate": "66.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2713",
            "questionFrontendId": "2575",
            "title": "Find the Divisibility Array of a String",
            "titleSlug": "find-the-divisibility-array-of-a-string",
            "acRate": "32.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2720",
            "questionFrontendId": "2616",
            "title": "Minimize the Maximum Difference of Pairs",
            "titleSlug": "minimize-the-maximum-difference-of-pairs",
            "acRate": "43.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2724",
            "questionFrontendId": "2610",
            "title": "Convert an Array Into a 2D Array With Conditions",
            "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
            "acRate": "87.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2732",
            "questionFrontendId": "2620",
            "title": "Counter",
            "titleSlug": "counter",
            "acRate": "80.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2734",
            "questionFrontendId": "2619",
            "title": "Array Prototype Last",
            "titleSlug": "array-prototype-last",
            "acRate": "72.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2738",
            "questionFrontendId": "2638",
            "title": "Count the Number of K-Free Subsets",
            "titleSlug": "count-the-number-of-k-free-subsets",
            "acRate": "48.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2741",
            "questionFrontendId": "2629",
            "title": "Function Composition",
            "titleSlug": "function-composition",
            "acRate": "85.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2743",
            "questionFrontendId": "2627",
            "title": "Debounce",
            "titleSlug": "debounce",
            "acRate": "90.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2755",
            "questionFrontendId": "2707",
            "title": "Extra Characters in a String",
            "titleSlug": "extra-characters-in-a-string",
            "acRate": "52.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2756",
            "questionFrontendId": "2706",
            "title": "Buy Two Chocolates",
            "titleSlug": "buy-two-chocolates",
            "acRate": "69.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2757",
            "questionFrontendId": "2719",
            "title": "Count of Integers",
            "titleSlug": "count-of-integers",
            "acRate": "34.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2762",
            "questionFrontendId": "2622",
            "title": "Cache With Time Limit",
            "titleSlug": "cache-with-time-limit",
            "acRate": "73.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2789",
            "questionFrontendId": "2665",
            "title": "Counter II",
            "titleSlug": "counter-ii",
            "acRate": "79.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2794",
            "questionFrontendId": "2684",
            "title": "Maximum Number of Moves in a Grid",
            "titleSlug": "maximum-number-of-moves-in-a-grid",
            "acRate": "45.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2796",
            "questionFrontendId": "2666",
            "title": "Allow One Function Call",
            "titleSlug": "allow-one-function-call",
            "acRate": "86.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2808",
            "questionFrontendId": "2742",
            "title": "Painting the Walls",
            "titleSlug": "painting-the-walls",
            "acRate": "51.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2809",
            "questionFrontendId": "2667",
            "title": "Create Hello World Function",
            "titleSlug": "create-hello-world-function",
            "acRate": "80.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2810",
            "questionFrontendId": "2735",
            "title": "Collecting Chocolates",
            "titleSlug": "collecting-chocolates",
            "acRate": "32.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2812",
            "questionFrontendId": "2769",
            "title": "Find the Maximum Achievable Number",
            "titleSlug": "find-the-maximum-achievable-number",
            "acRate": "89.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2813",
            "questionFrontendId": "2704",
            "title": "To Be Or Not To Be",
            "titleSlug": "to-be-or-not-to-be",
            "acRate": "61.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2818",
            "questionFrontendId": "2713",
            "title": "Maximum Strictly Increasing Cells in a Matrix",
            "titleSlug": "maximum-strictly-increasing-cells-in-a-matrix",
            "acRate": "29.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2820",
            "questionFrontendId": "2703",
            "title": "Return Length of Arguments Passed",
            "titleSlug": "return-length-of-arguments-passed",
            "acRate": "93.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2834",
            "questionFrontendId": "2766",
            "title": "Relocate Marbles",
            "titleSlug": "relocate-marbles",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2868",
            "questionFrontendId": "2762",
            "title": "Continuous Subarrays",
            "titleSlug": "continuous-subarrays",
            "acRate": "40.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2871",
            "questionFrontendId": "2816",
            "title": "Double a Number Represented as a Linked List",
            "titleSlug": "double-a-number-represented-as-a-linked-list",
            "acRate": "49.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2876",
            "questionFrontendId": "2798",
            "title": "Number of Employees Who Met the Target",
            "titleSlug": "number-of-employees-who-met-the-target",
            "acRate": "87.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2884",
            "questionFrontendId": "2781",
            "title": "Length of the Longest Valid Substring",
            "titleSlug": "length-of-the-longest-valid-substring",
            "acRate": "35.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2917",
            "questionFrontendId": "2824",
            "title": "Count Pairs Whose Sum is Less than Target",
            "titleSlug": "count-pairs-whose-sum-is-less-than-target",
            "acRate": "86.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2921",
            "questionFrontendId": "2801",
            "title": "Count Stepping Numbers in Range",
            "titleSlug": "count-stepping-numbers-in-range",
            "acRate": "27.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2954",
            "questionFrontendId": "2841",
            "title": "Maximum Sum of Almost Unique Subarray",
            "titleSlug": "maximum-sum-of-almost-unique-subarray",
            "acRate": "37.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2979",
            "questionFrontendId": "2830",
            "title": "Maximize the Profit as the Salesman",
            "titleSlug": "maximize-the-profit-as-the-salesman",
            "acRate": "35.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2995",
            "questionFrontendId": "2782",
            "title": "Number of Unique Categories",
            "titleSlug": "number-of-unique-categories",
            "acRate": "83.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2998",
            "questionFrontendId": "2843",
            "title": "  Count Symmetric Integers",
            "titleSlug": "count-symmetric-integers",
            "acRate": "74.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3018",
            "questionFrontendId": "2825",
            "title": "Make String a Subsequence Using Cyclic Increments",
            "titleSlug": "make-string-a-subsequence-using-cyclic-increments",
            "acRate": "48.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3019",
            "questionFrontendId": "2833",
            "title": "Furthest Point From Origin",
            "titleSlug": "furthest-point-from-origin",
            "acRate": "63.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3025",
            "questionFrontendId": "2835",
            "title": "Minimum Operations to Form Subsequence With Target Sum",
            "titleSlug": "minimum-operations-to-form-subsequence-with-target-sum",
            "acRate": "31.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3045",
            "questionFrontendId": "2855",
            "title": "Minimum Right Shifts to Sort the Array",
            "titleSlug": "minimum-right-shifts-to-sort-the-array",
            "acRate": "57.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3062",
            "questionFrontendId": "2877",
            "title": "Create a DataFrame from List",
            "titleSlug": "create-a-dataframe-from-list",
            "acRate": "80.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3088",
            "questionFrontendId": "2832",
            "title": "Maximal Range That Each Element Is Maximum in It",
            "titleSlug": "maximal-range-that-each-element-is-maximum-in-it",
            "acRate": "73.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "3094",
            "questionFrontendId": "2870",
            "title": "Minimum Number of Operations to Make Array Empty",
            "titleSlug": "minimum-number-of-operations-to-make-array-empty",
            "acRate": "61.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3095",
            "questionFrontendId": "2861",
            "title": "Maximum Number of Alloys",
            "titleSlug": "maximum-number-of-alloys",
            "acRate": "37.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3139",
            "questionFrontendId": "2916",
            "title": "Subarrays Distinct Element Sum of Squares II",
            "titleSlug": "subarrays-distinct-element-sum-of-squares-ii",
            "acRate": "18.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3150",
            "questionFrontendId": "2904",
            "title": "Shortest and Lexicographically Smallest Beautiful String",
            "titleSlug": "shortest-and-lexicographically-smallest-beautiful-string",
            "acRate": "37.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3182",
            "questionFrontendId": "2898",
            "title": "Maximum Linear Stock Score",
            "titleSlug": "maximum-linear-stock-score",
            "acRate": "71.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "3183",
            "questionFrontendId": "2917",
            "title": "Find the K-or of an Array",
            "titleSlug": "find-the-k-or-of-an-array",
            "acRate": "74.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3184",
            "questionFrontendId": "2926",
            "title": "Maximum Balanced Subsequence Sum",
            "titleSlug": "maximum-balanced-subsequence-sum",
            "acRate": "22.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3193",
            "questionFrontendId": "2932",
            "title": "Maximum Strong Pair XOR I",
            "titleSlug": "maximum-strong-pair-xor-i",
            "acRate": "75.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3194",
            "questionFrontendId": "2942",
            "title": "Find Words Containing Character",
            "titleSlug": "find-words-containing-character",
            "acRate": "88.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3199",
            "questionFrontendId": "2928",
            "title": "Distribute Candies Among Children I",
            "titleSlug": "distribute-candies-among-children-i",
            "acRate": "74.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3201",
            "questionFrontendId": "2929",
            "title": "Distribute Candies Among Children II",
            "titleSlug": "distribute-candies-among-children-ii",
            "acRate": "34.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3207",
            "questionFrontendId": "2937",
            "title": "Make Three Strings Equal",
            "titleSlug": "make-three-strings-equal",
            "acRate": "41.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3208",
            "questionFrontendId": "2949",
            "title": "Count Beautiful Substrings II",
            "titleSlug": "count-beautiful-substrings-ii",
            "acRate": "24.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3210",
            "questionFrontendId": "2947",
            "title": "Count Beautiful Substrings I",
            "titleSlug": "count-beautiful-substrings-i",
            "acRate": "61.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3211",
            "questionFrontendId": "2945",
            "title": "Find Maximum Non-decreasing Array Length",
            "titleSlug": "find-maximum-non-decreasing-array-length",
            "acRate": "14.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3216",
            "questionFrontendId": "2927",
            "title": "Distribute Candies Among Children III",
            "titleSlug": "distribute-candies-among-children-iii",
            "acRate": "48.3%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3218",
            "questionFrontendId": "2973",
            "title": "Find Number of Coins to Place in Tree Nodes",
            "titleSlug": "find-number-of-coins-to-place-in-tree-nodes",
            "acRate": "34.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3273",
            "questionFrontendId": "2979",
            "title": "Most Expensive Item That Can Not Be Bought",
            "titleSlug": "most-expensive-item-that-can-not-be-bought",
            "acRate": "80.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3275",
            "questionFrontendId": "3014",
            "title": "Minimum Number of Pushes to Type Word I",
            "titleSlug": "minimum-number-of-pushes-to-type-word-i",
            "acRate": "62.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3276",
            "questionFrontendId": "3016",
            "title": "Minimum Number of Pushes to Type Word II",
            "titleSlug": "minimum-number-of-pushes-to-type-word-ii",
            "acRate": "69.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3299",
            "questionFrontendId": "3020",
            "title": "Find the Maximum Number of Elements in Subset",
            "titleSlug": "find-the-maximum-number-of-elements-in-subset",
            "acRate": "24.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3343",
            "questionFrontendId": "3032",
            "title": "Count Numbers With Unique Digits II",
            "titleSlug": "count-numbers-with-unique-digits-ii",
            "acRate": "89.3%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        }
    ],
    "frequencies": "{\"104\": [5, 6, 14, 124, 0.08233746634621424, 0.11652351754174592, 0.5145262858840716, 3.984977352773522, 1], \"572\": [2, 6, 17, 290, 0.053994220576736765, 0.4050026803542592, 1.6111008839925087, 7.062564747110435, 1], \"448\": [1, 1, 5, 58, 0, 0, 0.3620704839623302, 4.0894752510688726, 3], \"451\": [2, 3, 6, 46, 0.08588967188042969, 0.18381520905073792, 0.5917647904865642, 3.880407380856866, 1], \"25\": [4, 6, 26, 242, 0.16635770580494058, 0.3416302106614813, 2.1572192427225203, 6.497511804316907, 1], \"50\": [10, 18, 31, 190, 0.39794258694353535, 0.9491751486526627, 1.739934401363469, 5.178642880469977, 1], \"314\": [5, 5, 10, 91, 0.4499168706789982, 0.4499168706789982, 1.1856236656577395, 5.2428286809303835, 1], \"20\": [24, 48, 119, 823, 0.726798283513693, 1.6627492026866357, 3.3057084930071547, 7.136806922766148, 1], \"98\": [11, 14, 41, 316, 0.4893126144121968, 0.7043001946252846, 2.279204868714864, 6.257470701190294, 1], \"169\": [16, 32, 45, 212, 0.5227711583035607, 1.3208971022739016, 1.861264846462117, 4.800391020834926, 1], \"23\": [14, 18, 93, 730, 0.8407436200567103, 1.1565300843330812, 4.047509083333505, 8.034415815654743, 1], \"3\": [34, 60, 135, 860, 1.1444586767935283, 2.0288776019793295, 3.515373906141909, 7.223025496917204, 1], \"1\": [111, 193, 378, 3272, 2.3434195884930533, 2.824327786612751, 4.67889779123758, 8.650127773788427, 1], \"496\": [4, 9, 33, 139, 0.2037476209666304, 0.7627048642618555, 2.7961438547426662, 5.612746574584829, 1], \"238\": [15, 22, 58, 444, 0.5400568337765765, 0.9323294667931127, 2.46014905524336, 6.443211953807424, 1], \"5\": [26, 55, 104, 1086, 1.209593720551196, 2.3158214362272056, 3.621326007190716, 8.169860282252746, 1], \"102\": [4, 10, 26, 214, 0.07763353611776078, 0.4084877804347504, 1.4840325605333267, 5.446993958669194, 1], \"545\": [2, 3, 21, 105, 0.4795730802618863, 0.8690378470236095, 4.199068694944426, 7.436707918846835, 1], \"692\": [1, 2, 19, 313, 0, 0.17284281283941086, 2.891942850128206, 8.288600171515224, 2], \"617\": [0, 2, 4, 53, 0, 0.12026486639314354, 0.4128921979517797, 4.508046861833104, 2], \"53\": [18, 33, 89, 648, 0.7139961891116962, 1.5046847674160715, 3.276300812659164, 7.209050209004755, 1], \"200\": [24, 45, 220, 2128, 1.4384801142904609, 2.3808855384291965, 5.230652084671409, 9.09245789376558, 1], \"16\": [1, 5, 20, 139, 0, 0.23187360052389974, 1.6439099346242754, 5.311631264712235, 2], \"146\": [23, 39, 184, 1469, 1.5894759804141987, 2.3740813413704536, 5.152363189218257, 8.884267709659044, 1], \"121\": [30, 62, 141, 889, 0.9803665256886764, 2.085494133973814, 3.599223377648639, 7.288568404071774, 1], \"138\": [8, 16, 56, 648, 0.5523478339075513, 1.3735405650573203, 3.5815935383678443, 8.334360064132245, 1], \"106\": [2, 5, 8, 61, 0.07593779883079804, 0.4008522498462656, 0.8163941135381876, 4.309355196589232, 1], \"126\": [0, 3, 21, 183, 0, 0.3416302106614813, 3.0423654049629993, 7.32405439769097, 2], \"109\": [2, 4, 8, 70, 0.15355773584309076, 0.5091644938159141, 1.2962606924455244, 5.319684955293637, 1], \"8\": [2, 8, 25, 177, 0.02168106606132404, 0.30061182046019863, 1.4871928820742655, 5.151357664531002, 1], \"768\": [0, 2, 6, 406, 0, 0.14897379164772453, 0.8943653712451894, 8.538982158415799, 2], \"29\": [4, 5, 11, 94, 0.12766314425609057, 0.19290366612449156, 0.7079309767441823, 4.333361462692601, 1], \"21\": [10, 21, 51, 742, 0.23678241797315275, 0.7784985287584819, 2.0730425383214364, 7.294320488733224, 1], \"91\": [7, 8, 24, 179, 0.538996500732687, 0.6590445430199225, 2.240337434649498, 6.14861779509568, 1], \"152\": [9, 14, 38, 209, 0.4787785121761649, 0.9106646241273337, 2.4805377569047566, 5.805639513826551, 1], \"22\": [18, 29, 62, 317, 1.017978389726985, 1.7206405765968296, 3.0897273003752965, 6.308501811542421, 1], \"127\": [16, 23, 92, 534, 1.6945957207744073, 2.1920887175540904, 4.964031162048875, 8.357449685058818, 1], \"236\": [8, 12, 52, 338, 0.39981682608275565, 0.7447860373537452, 3.080443259616301, 6.778159078243372, 1], \"433\": [1, 1, 3, 17, 0, 0, 0.4110989258264204, 2.8523054315404224, 3], \"19\": [9, 15, 33, 197, 0.30538164955118186, 0.689171032180306, 1.7581315527983006, 5.148165880918864, 1], \"298\": [0, 0, 2, 20, 0, 0, 0.6061358035703156, 4.43477720005941, 3], \"60\": [1, 3, 7, 33, 0, 0.17284281283941086, 0.7066820045649531, 3.170953208798369, 2], \"733\": [7, 12, 32, 192, 0.5940217850471116, 1.2190897533887801, 2.8877930126837414, 6.415638753173103, 1], \"187\": [0, 1, 2, 31, 0, 0, 0.17284281283941086, 3.8357937719271775, 3], \"45\": [5, 13, 30, 251, 0.13919038017623117, 0.6979147700434181, 1.8525949058444695, 5.933173297037891, 1], \"237\": [3, 5, 13, 60, 0.09844007281325252, 0.2525907526405108, 1.0792693258249788, 3.7466602795795607, 1], \"300\": [11, 16, 24, 160, 0.647343522991433, 1.073725275442502, 1.6741175071417722, 5.265928642105536, 1], \"111\": [0, 2, 6, 41, 0, 0.04896939169926028, 0.37273104840346155, 3.095197150436229, 2], \"540\": [7, 14, 32, 129, 0.520251809446536, 1.3163559572028936, 2.7253554930501367, 5.450045695830661, 1], \"239\": [7, 17, 71, 404, 0.4273493895429932, 1.421835844122917, 3.9899193853554653, 7.482691625646616, 1], \"49\": [27, 40, 119, 521, 1.303220522586548, 1.9292748851688584, 3.939025584269764, 6.907066921485883, 1], \"155\": [14, 21, 45, 349, 0.8246340008099917, 1.3564413979702095, 2.65572438210047, 6.680961282041715, 1], \"76\": [8, 15, 41, 255, 0.43662552392322673, 1.0731994281672328, 2.7330557276542264, 6.323004377872788, 1], \"4\": [37, 52, 100, 635, 1.8484148112429875, 2.3193921485104796, 3.658016019688265, 7.363097686594374, 1], \"133\": [3, 4, 12, 116, 0.0877756108823857, 0.15108789029671257, 0.9033634973726954, 4.928456996993348, 1], \"206\": [10, 15, 37, 359, 0.2574953197866672, 0.5072951699666082, 1.613541083489789, 5.9388681395654155, 1], \"171\": [2, 4, 5, 38, 0.12323264042394814, 0.4217256289799447, 0.5986563371390229, 3.878347544641965, 1], \"687\": [0, 1, 3, 22, 0, 0, 0.7672551527136672, 4.143948396086546, 3], \"46\": [6, 13, 33, 189, 0.207040143747631, 0.732306451668416, 2.074236324722027, 5.434809627064879, 1], \"516\": [2, 5, 11, 75, 0.13220542557941892, 0.6330745265226069, 1.6630958998959529, 5.2971329197847945, 1], \"348\": [2, 3, 21, 164, 0.2856138193877219, 0.5560675878793254, 3.5901017332015046, 7.6298691714146605, 1], \"207\": [17, 26, 87, 361, 1.1783556399556356, 1.8342920620971634, 4.059916309594489, 6.922812553336091, 1], \"273\": [2, 4, 40, 281, 0.2322522675124501, 0.7157652691477178, 4.6266174826524304, 8.399028858582582, 1], \"271\": [0, 1, 3, 12, 0, 0, 0.4485486942444761, 2.3082295106137227, 3], \"12\": [5, 6, 49, 297, 0.17789849767729501, 0.24715209136621874, 2.980587008190015, 6.533768461720534, 1], \"694\": [1, 1, 9, 87, 0, 0, 2.6288008294480694, 7.0920986001562625, 3], \"124\": [7, 14, 29, 248, 0.38573932704271485, 1.0587637768253981, 2.205938766380087, 6.383196658762668, 1], \"403\": [0, 1, 6, 65, 0, 0, 1.425008873300581, 5.917855775569064, 3], \"167\": [2, 4, 20, 136, 0.01996074256253806, 0.0775582343458745, 1.1039742318094952, 4.545694097902595, 1], \"2\": [31, 54, 103, 951, 1.206625874557668, 2.084722929391948, 3.2905149603700856, 7.6214850817176405, 1], \"346\": [0, 0, 5, 57, 0, 0, 0.571885880527237, 4.6178670167824984, 3], \"230\": [2, 4, 15, 98, 0.03451593709018879, 0.1314440532234174, 1.0903842081598691, 4.446403954276602, 1], \"85\": [2, 3, 8, 76, 0.13959908918694763, 0.29048712337938953, 1.222893791714887, 5.38141504005015, 1], \"652\": [0, 2, 5, 46, 0, 0.37827896780400755, 1.3541748116977779, 5.498062869261055, 2], \"812\": [2, 3, 7, 32, 0.09909090264423091, 0.21056476910734964, 0.8224378230678087, 3.3202283191284883, 1], \"103\": [7, 12, 48, 381, 0.361282430381405, 0.8236767364759461, 3.0662751568876176, 7.162532424295738, 1], \"297\": [3, 5, 37, 345, 0.18571714579509285, 0.4490949483208239, 3.434275703267008, 7.750978093925683, 1], \"347\": [15, 26, 70, 335, 0.7001080260008576, 1.3978318735882147, 3.1390539130067494, 6.228009559261, 1], \"33\": [12, 21, 58, 472, 0.4286066366698587, 0.9703227474551879, 2.602758499570575, 6.720082080956068, 1], \"215\": [14, 27, 52, 344, 0.7069476860068781, 1.5733460173022786, 2.7199352450880743, 6.432192018026705, 1], \"445\": [2, 5, 12, 121, 0.22314355131420976, 0.9409833444645266, 2.302585092994046, 6.820084593787519, 1], \"112\": [7, 8, 15, 95, 0.3226126205585247, 0.40365046081823974, 1.010964981609354, 4.26442933351603, 1], \"101\": [4, 9, 23, 192, 0.09352605801082346, 0.4030111191465977, 1.4448984886712373, 5.424431614152011, 1], \"253\": [4, 7, 66, 422, 0.3188804433076422, 0.7655770184047598, 4.604381668313379, 8.188374159686344, 1], \"212\": [6, 7, 41, 287, 0.571475437354794, 0.7174741337840569, 3.5779964926369927, 7.475787067054, 1], \"32\": [7, 10, 27, 136, 0.4653070067195897, 0.7926258613543155, 2.2839112117374842, 5.414551440183118, 1], \"113\": [0, 0, 6, 79, 0, 0, 0.5897688261061103, 4.943840260694808, 3], \"110\": [3, 7, 11, 79, 0.056264838586137754, 0.2739222438635676, 0.5755650893431007, 3.7168605131378007, 1], \"100\": [5, 9, 18, 113, 0.08915380247493312, 0.26399836886907674, 0.7923154942958168, 3.8841943728677837, 1], \"149\": [3, 3, 10, 79, 0.33520721431462625, 0.33520721431462625, 1.6909771172238708, 5.624560472393048, 1], \"39\": [8, 11, 24, 163, 0.34136443699277186, 0.5705448584676129, 1.5394000850355216, 5.135248568238095, 1], \"450\": [3, 5, 12, 68, 0.1333332747437359, 0.33375176339496637, 1.188480998854371, 4.307848563757069, 1], \"643\": [2, 3, 3, 15, 0.037563101575648544, 0.08261576551659168, 0.08261576551659168, 1.1483892825376962, 1], \"535\": [1, 1, 2, 57, 0, 0, 0.35774963506849783, 5.85894646579489, 3], \"30\": [1, 2, 5, 49, 0, 0.059898141581068966, 0.3262793719499249, 3.6389659740762235, 2], \"498\": [2, 2, 2, 38, 0.1506602748874898, 0.1506602748874898, 0.1506602748874898, 4.089318402079193, 1], \"232\": [5, 6, 16, 88, 0.26811926879413733, 0.36658873910566486, 1.4228267255138396, 4.566971336777828, 1], \"10\": [10, 16, 26, 146, 0.7385488363392251, 1.334425692723371, 2.1267995071798764, 5.455157634618871, 1], \"97\": [0, 2, 5, 66, 0, 0.10648348040245009, 0.531949255217284, 4.815103266502592, 2], \"386\": [2, 3, 3, 15, 0.4274440148269396, 0.7884573603642702, 0.7884573603642702, 3.4339872044851463, 1], \"117\": [0, 1, 8, 101, 0, 0, 1.0145934326149337, 5.639234185461154, 3], \"632\": [7, 8, 18, 62, 1.8919341478535157, 2.115014033597225, 3.6111124914950006, 6.093206454527567, 1], \"125\": [2, 3, 13, 89, 0.010926085203587683, 0.024417925045724403, 0.38128046864732756, 3.1247854446124688, 1], \"202\": [10, 14, 27, 99, 0.6099482367049714, 0.9734491457141037, 1.9637571426803737, 4.423184707167389, 1], \"669\": [1, 1, 5, 29, 0, 0, 1.1856236656577395, 4.349691254030946, 3], \"387\": [9, 11, 34, 243, 0.7221347174331976, 0.9484478435086864, 2.779509165084355, 6.650126841585606, 1], \"43\": [5, 7, 11, 63, 0.2743358304988864, 0.4816152456661895, 0.9273405680607401, 3.9340513180410546, 1], \"257\": [0, 0, 3, 47, 0, 0, 0.20294084399669032, 4.02936149784538, 3], \"837\": [1, 1, 3, 374, 0, 0, 0.4353180712578455, 8.676077525552508, 3], \"142\": [1, 1, 12, 78, 0, 0, 0.9162907318741551, 4.1647253589839, 3], \"67\": [4, 9, 17, 72, 0.10784852120640745, 0.45521510071138993, 1.1174142526505095, 3.634866600681638, 1], \"211\": [0, 0, 9, 84, 0, 0, 1.0169342576538425, 5.041652515796709, 3], \"339\": [1, 1, 5, 34, 0, 0, 0.6518655215866413, 3.7727609380946383, 3], \"42\": [39, 69, 146, 1068, 2.220280353636145, 2.741592518035057, 4.723229269442774, 8.468425586618094, 1], \"235\": [5, 7, 17, 134, 0.1920119633590886, 0.3470607123980314, 1.2375271323056165, 5.030703530052839, 1], \"84\": [10, 23, 44, 252, 0.734576365973644, 1.907692960711984, 3.090943848615348, 6.536348868552984, 1], \"139\": [9, 13, 54, 414, 0.5353476606629848, 0.9071582483108825, 3.2767488240460616, 7.312698106203236, 1], \"684\": [2, 3, 7, 25, 0.12477221253464107, 0.26159729523649006, 0.9661877030187782, 3.0802627239830005, 1], \"123\": [2, 2, 12, 114, 0.07878087785311429, 0.07878087785311429, 1.3739230693173439, 5.588414553049545, 1], \"653\": [1, 2, 11, 63, 0, 0.14008879317068168, 1.7135946963787188, 5.012037818870342, 2], \"28\": [7, 13, 23, 133, 0.14912141021977157, 0.4412465239380427, 1.0065459394249043, 4.078449289622343, 1], \"75\": [2, 10, 26, 179, 0.01875347974830633, 0.3874781528255515, 1.4349042192192811, 5.0280657128883695, 1], \"803\": [6, 6, 19, 77, 0.3632228029098636, 0.3632228029098636, 1.6848658333709396, 4.29222437275757, 1], \"636\": [0, 0, 3, 40, 0, 0, 0.401795379219202, 4.487648105290989, 3], \"609\": [0, 0, 2, 14, 0, 0, 1.0986122886681096, 4.59511985013459, 3], \"74\": [7, 14, 36, 220, 0.23970003936788642, 0.7340355078718402, 2.099756183031015, 5.5930413361257525, 1], \"472\": [7, 8, 64, 281, 1.8177349556313156, 2.037989282330585, 5.549358349055029, 8.656346202347137, 1], \"329\": [1, 2, 11, 73, 0, 0.14208251361377278, 1.7260327955277246, 5.320063919690011, 2], \"268\": [5, 9, 22, 193, 0.11324303587009586, 0.32821625577419383, 1.2003691968226373, 5.1910231946784435, 1], \"136\": [7, 11, 27, 154, 0.19005181762098883, 0.4166510654521771, 1.4144088740699534, 4.6279794036988235, 1], \"583\": [0, 0, 3, 17, 0, 0, 0.5491078103370076, 3.198507183757884, 3], \"199\": [5, 9, 27, 188, 0.14052258817385616, 0.3979940991027938, 1.686309542121033, 5.3673822531445134, 1], \"179\": [1, 3, 9, 84, 0, 0.21357410029805904, 1.1451323043030026, 5.234667339471581, 2], \"657\": [0, 0, 2, 31, 0, 0, 0.12879510820557039, 3.527067773951022, 3], \"289\": [3, 4, 16, 114, 0.27958486221916157, 0.45328763125380567, 2.3199953746516053, 6.145914721252846, 1], \"143\": [4, 9, 20, 143, 0.17844755867744094, 0.6876375247489758, 1.7722376327872633, 5.524187356478522, 1], \"145\": [1, 5, 5, 35, 0, 0.21806243817402032, 0.21806243817402032, 2.5602901471091504, 2], \"739\": [8, 10, 25, 139, 0.46709241903827714, 0.6576404921030354, 1.9189724933235048, 5.197005491617812, 1], \"137\": [3, 6, 10, 56, 0.1950000150537256, 0.6212450916536353, 1.2215212745673165, 4.331048072923556, 1], \"63\": [0, 3, 16, 106, 0, 0.11998394835114094, 1.5317060360371684, 5.076111760494736, 2], \"17\": [14, 25, 82, 505, 0.755362192695527, 1.525655732676284, 3.6488079625681618, 7.292468063148851, 1], \"299\": [0, 0, 5, 28, 0, 0, 1.1793477570205468, 4.271522784589149, 3], \"340\": [0, 0, 7, 56, 0, 0, 1.9529400549835714, 5.961418897980661, 3], \"807\": [2, 2, 2, 14, 0.12516314295400602, 0.12516314295400602, 0.12516314295400602, 2.0193376176101303, 1], \"871\": [1, 1, 11, 50, 0, 0, 1.3722053072394416, 4.124344215628413, 3], \"312\": [2, 6, 8, 55, 0.19574457712609533, 1.0804299695849193, 1.4950275612563562, 5.1029927158497, 1], \"41\": [8, 16, 39, 245, 0.4646752255812493, 1.2137218008811266, 2.7118630093618763, 6.320336014232811, 1], \"341\": [2, 2, 5, 87, 0.21825356602001797, 0.21825356602001797, 0.925999546001116, 6.136699291224495, 1], \"295\": [10, 14, 55, 453, 0.9088557533866369, 1.361925770102933, 3.7918018405192666, 7.869964132483358, 1], \"208\": [2, 5, 20, 145, 0.05064373281875492, 0.2811673914305872, 1.8237110690346574, 5.613317679848354, 1], \"27\": [7, 11, 17, 70, 0.10128434901653703, 0.23366016956582186, 0.48776426642445725, 2.4560891795370243, 1], \"406\": [0, 1, 3, 35, 0, 0, 0.9582549309731873, 5.392490536565286, 3], \"83\": [2, 5, 11, 86, 0.027455396452354876, 0.16039419646694336, 0.6108693161480764, 3.9602098793270586, 1], \"82\": [3, 3, 8, 63, 0.1413004605730646, 0.1413004605730646, 0.7320111041666189, 4.21849042371083, 1], \"269\": [3, 3, 12, 169, 0.44404857414732085, 0.44404857414732085, 2.296979348012252, 7.481541704785925, 1], \"108\": [1, 2, 11, 86, 0, 0.04220035449037644, 0.83459435879879, 4.39071721026538, 2], \"188\": [0, 1, 11, 77, 0, 0, 1.398188085050322, 5.012933239537458, 3], \"99\": [1, 1, 20, 121, 0, 0, 2.7471773294910227, 6.282907785673525, 3], \"9\": [13, 23, 40, 217, 0.2803785612248174, 0.6996369914653175, 1.4021579091744614, 4.51277265039481, 1], \"242\": [7, 12, 41, 156, 0.1228382546167251, 0.3250518626318276, 1.7018096635180213, 4.188340397078518, 1], \"198\": [10, 16, 52, 213, 0.4148468400331404, 0.8399259139898916, 2.701516477721287, 5.456430073325461, 1], \"184\": [2, 4, 7, 35, 0.11778303565638346, 0.4054651081081644, 0.9287132518727123, 3.670747305790521, 1], \"240\": [4, 6, 17, 275, 0.2346473757956944, 0.4668996433081445, 1.753860196637069, 7.1316985104669115, 1], \"130\": [1, 2, 7, 64, 0, 0.053921416793820044, 0.5180020277364334, 4.05579952102811, 2], \"165\": [3, 4, 11, 132, 0.4675170966757307, 0.7225130753643099, 2.1986951658365417, 7.051775346805895, 1], \"349\": [4, 7, 16, 102, 0.19313724549582356, 0.5022671334404725, 1.4835998857831114, 4.938317517554634, 1], \"417\": [0, 0, 13, 76, 0, 0, 1.6180134771364967, 4.935781122859313, 3], \"626\": [3, 5, 7, 31, 0.1652099163212334, 0.4047995506792699, 0.6821084332451232, 3.0047731180065345, 1], \"678\": [2, 2, 5, 50, 0.1451820098444979, 0.1451820098444979, 0.6813592248079031, 4.591641585758265, 1], \"70\": [13, 24, 50, 306, 0.43707188911974626, 1.0537230366895847, 2.2092612621537038, 5.719383997539522, 1], \"223\": [0, 0, 2, 41, 0, 0, 0.2595111954850846, 4.832453305602722, 3], \"209\": [1, 3, 7, 68, 0, 0.07078425703236961, 0.3360064161865641, 3.655462567028244, 2], \"560\": [7, 23, 49, 248, 0.30234351870145837, 1.57095467943685, 2.906806568682229, 6.096077665378331, 1], \"15\": [23, 43, 91, 629, 0.8244217316519031, 1.7003591699610712, 3.046710219265284, 6.865616402664377, 1], \"11\": [25, 39, 78, 540, 1.013820725054123, 1.662726966146057, 2.8956184985113818, 6.709708249931226, 1], \"7\": [18, 33, 54, 267, 0.7289233537252289, 1.5273511745485733, 2.366088310177459, 5.4682976293491485, 1], \"13\": [18, 50, 114, 504, 0.6472959360162669, 2.0744881910430104, 3.591958517413906, 6.571902855856404, 1], \"134\": [9, 16, 29, 194, 0.539732390088142, 1.1821823368596145, 2.1317171273129243, 5.809563396630553, 1], \"160\": [4, 7, 12, 122, 0.14732471475685843, 0.39616271544585085, 0.8873031950009028, 5.001653277344414, 1], \"56\": [18, 32, 85, 667, 0.9725463130153784, 1.824221745372716, 3.596194447013662, 7.645711060677237, 1], \"38\": [3, 5, 13, 85, 0.12819804664916004, 0.3220394472759761, 1.2721142496226698, 4.707748720019507, 1], \"61\": [5, 7, 13, 77, 0.22475515520855127, 0.4014246985711594, 0.994594956556751, 4.107065723405497, 1], \"88\": [38, 57, 69, 327, 1.3752303089787397, 2.0268284209343936, 2.3745486414721584, 5.393138918572295, 1], \"637\": [0, 1, 3, 25, 0, 0, 0.17520408902509066, 2.660110738813091, 3], \"54\": [9, 27, 44, 372, 0.4639723581071856, 1.8426761134887415, 2.7154088710237665, 6.9173389461960015, 1], \"62\": [6, 14, 37, 198, 0.22869556215919914, 0.8750522813880987, 2.3769122722815434, 5.637744852793394, 1], \"140\": [8, 9, 41, 261, 1.293254329850105, 1.4695106671409688, 4.2222793858595224, 7.7930219691536715, 1], \"588\": [4, 4, 25, 131, 1.3910002521573033, 1.3910002521573033, 4.745683410092096, 7.932975218515046, 1], \"55\": [17, 27, 60, 294, 0.8030814424242575, 1.413116899968087, 2.79433873931858, 5.9124132632343, 1], \"72\": [3, 5, 17, 133, 0.10648348040245009, 0.2716364238085919, 1.5277917559616394, 5.401940418633641, 1], \"191\": [3, 4, 15, 44, 0.08601287466004025, 0.14814465576704644, 1.177272189022891, 3.0116724160223307, 1], \"48\": [13, 22, 41, 373, 0.7400208655177113, 1.420401252714914, 2.476658285245877, 6.806014088350464, 1], \"57\": [4, 7, 13, 95, 0.1449185538269559, 0.3904075404716021, 0.9734924629478718, 4.4882201366356, 1], \"59\": [1, 2, 11, 71, 0, 0.1088028598487991, 1.4989557466562191, 4.982622040174375, 2], \"279\": [2, 6, 15, 91, 0.1147388932751553, 0.7391835202482866, 2.059099255115973, 5.532211434064182, 1], \"270\": [0, 0, 3, 39, 0, 0, 0.2804618244782939, 4.020199695825721, 3], \"490\": [0, 1, 3, 63, 0, 0, 0.760450862456052, 6.221395140837242, 3], \"218\": [1, 1, 4, 74, 0, 0, 0.9679921062510455, 6.32753582872191, 3], \"141\": [5, 8, 21, 162, 0.08299385637571831, 0.2001041232090348, 0.926826930985397, 4.520060143900521, 1], \"96\": [2, 2, 5, 87, 0.12323264042394814, 0.12323264042394814, 0.5986563371390229, 5.51811105102315, 1], \"190\": [0, 2, 8, 36, 0, 0.061939299440290606, 0.7042672316040229, 3.077444758651149, 2], \"114\": [0, 5, 18, 87, 0, 0.3220394472759761, 1.7790139487421888, 4.753852183824466, 2], \"729\": [3, 4, 7, 33, 0.7741883905630712, 1.1242547192814474, 1.9965538818740682, 4.958840620906525, 1], \"129\": [0, 2, 4, 43, 0, 0.05588045839445659, 0.20692071580732246, 3.316586465043473, 2], \"695\": [6, 8, 31, 183, 0.5198754592859085, 0.7939518796819109, 2.954949735326033, 6.454036510487917, 1], \"193\": [0, 1, 4, 28, 0, 0, 0.8286926725561692, 4.1624050995790505, 3], \"94\": [4, 6, 15, 98, 0.08452758931834498, 0.18103443700607286, 0.8066333585832359, 3.9879422202098906, 1], \"416\": [1, 4, 9, 68, 0, 0.20453170411961066, 0.7649729151312009, 4.1985341798803795, 2], \"542\": [2, 6, 20, 82, 0.07972347383203841, 0.5578359001917265, 2.229880540310272, 4.945222255133081, 1], \"658\": [5, 9, 22, 79, 0.4340384805522204, 1.0155456899694963, 2.4442356100570723, 4.917597891893966, 1], \"175\": [1, 2, 7, 71, 0, 0.0333364202675918, 0.34730918795109034, 3.777813416778985, 2], \"122\": [2, 6, 24, 201, 0.024141184452073947, 0.19878075604468032, 1.5082092142167327, 5.512618024886704, 1], \"309\": [1, 3, 6, 45, 0, 0.24051445830531853, 0.736021448390607, 4.130005223695397, 2], \"564\": [1, 2, 5, 36, 0, 0.3933437475758196, 1.3893018821838459, 5.057166262573685, 2], \"151\": [4, 11, 15, 108, 0.07020425867324853, 0.4382549309311553, 0.7044467358138786, 3.989320690230137, 1], \"402\": [1, 1, 7, 63, 0, 0, 0.9915843577583161, 4.929682907122888, 3], \"153\": [1, 4, 15, 130, 0, 0.08934510033584994, 0.8390866705568087, 4.602315648379774, 2], \"78\": [5, 15, 34, 204, 0.15143748173677285, 0.9048454974204266, 2.147158255862657, 5.610123209519472, 1], \"26\": [13, 30, 39, 183, 0.2666671373704914, 0.9660276620479481, 1.321876387267138, 4.119992333845584, 1], \"538\": [0, 1, 8, 47, 0, 0, 2.0739919369122712, 5.485247851115647, 3], \"183\": [0, 3, 6, 35, 0, 0.1036600415446783, 0.3624832855344793, 2.764210274263203, 2], \"79\": [4, 7, 52, 353, 0.13341987882457434, 0.36263396010481447, 3.223716897932942, 7.014443993370904, 1], \"120\": [5, 6, 14, 81, 0.3685471485927166, 0.49573913073261056, 1.5026900216652235, 4.770276673958001, 1], \"394\": [3, 4, 21, 151, 0.13825661970102562, 0.23395801030775792, 2.1120586334247546, 5.931274602222644, 1], \"37\": [3, 9, 16, 89, 0.12327489245733352, 0.7796725308085374, 1.5543011203486512, 4.7576034401970855, 1], \"543\": [8, 12, 34, 195, 0.25201080713913165, 0.49766279397950947, 1.820815244235362, 5.143338234976442, 1], \"647\": [6, 7, 14, 62, 0.5198754592859085, 0.6564989134042065, 1.5501381701528085, 4.301399791780117, 1], \"628\": [2, 2, 5, 52, 0.12595240897761434, 0.12595240897761434, 0.609181800442611, 4.5189394682071935, 1], \"176\": [1, 5, 12, 116, 0, 0.1775185359424692, 0.7508881752494619, 4.659215323834553, 2], \"186\": [0, 0, 0, 15, 0, 0, 0, 3.5727776966246974, 4], \"581\": [0, 0, 8, 36, 0, 0, 2.0189763459299006, 4.892188773076007, 3], \"231\": [5, 8, 13, 60, 0.11142413150072303, 0.263705257365472, 0.5860039463091777, 2.8888776358079618, 1], \"410\": [2, 6, 15, 73, 0.11122563511022437, 0.7221347174331976, 2.0304675370833762, 5.060918274366764, 1], \"508\": [0, 0, 1, 18, 0, 0, 0, 3.991106867679882, 4], \"69\": [4, 12, 23, 113, 0.07315875518638974, 0.5206444337682172, 1.2554700627311464, 4.120239765151672, 1], \"24\": [6, 10, 18, 126, 0.33116138377607446, 0.7374092707891796, 1.5114414669961724, 5.159800831537187, 1], \"73\": [6, 15, 28, 155, 0.1992222272423296, 0.8661892367612023, 1.7580268329050694, 4.998035324184155, 1], \"283\": [7, 15, 26, 141, 0.15989695301071286, 0.5856612655898056, 1.2214414164751037, 4.267601807421469, 1], \"177\": [0, 3, 8, 78, 0, 0.15336110221024074, 0.7786995440444514, 4.727778882900734, 2], \"116\": [3, 4, 16, 169, 0.17798315519535646, 0.2973752016574406, 1.8781092517509461, 6.428433915288725, 1], \"322\": [6, 12, 51, 333, 0.21536975529661903, 0.6735981926566578, 2.910345986362562, 6.608333897682691, 1], \"377\": [0, 1, 6, 37, 0, 0, 1.0360919316867756, 4.250513406205596, 3], \"204\": [2, 6, 12, 74, 0.06351340572232586, 0.4638371143300716, 1.2121361149650969, 4.5083342526496555, 1], \"328\": [2, 8, 15, 82, 0.04717856027509048, 0.5726430547892012, 1.3130221600135648, 4.409249330106068, 1], \"460\": [4, 6, 17, 166, 0.7698398013481997, 1.2833463918674481, 3.0884039294001346, 7.552088353682128, 1], \"221\": [1, 1, 9, 155, 0, 0, 1.252762968495368, 6.6100394977157455, 3], \"71\": [4, 4, 13, 91, 0.1672290934140504, 0.1672290934140504, 1.0724870994247067, 4.5560779284114705, 1], \"801\": [2, 4, 14, 67, 0.08682239465891518, 0.3095500590883616, 1.6945957207744073, 4.632701528690342, 1], \"503\": [7, 8, 23, 119, 0.7849120431121034, 0.9389041563807166, 2.6298036625353474, 5.845136998476854, 1], \"287\": [13, 20, 45, 211, 0.7839658545779734, 1.3394389438383854, 2.7252719439350983, 5.751073639741907, 1], \"31\": [11, 22, 48, 270, 0.5841370258145696, 1.428819821949995, 2.7793282555612366, 6.17176904368062, 1], \"380\": [7, 10, 32, 259, 0.5802678324880917, 0.957485048727138, 2.8585712796462976, 6.982622994560449, 1], \"93\": [0, 0, 6, 75, 0, 0, 0.9837320126696877, 5.570738228030108, 3], \"463\": [0, 1, 5, 42, 0, 0, 0.6813592248079031, 4.247155058690403, 3], \"68\": [4, 5, 6, 55, 0.36602337605686763, 0.525088070686555, 0.6903809270670552, 4.43750315610404, 1], \"36\": [14, 20, 51, 206, 0.8042567342472128, 1.2585970289327397, 2.855861629618858, 5.592469483839602, 1], \"640\": [0, 0, 0, 18, 0, 0, 0, 5.093750200806762, 4], \"412\": [5, 13, 20, 93, 0.2731294587804852, 1.1388310862262734, 1.7959383303030219, 4.697346176571101, 1], \"866\": [0, 0, 3, 40, 0, 0, 0.6418538861723948, 5.081404364984463, 3], \"128\": [18, 30, 55, 209, 0.8873031950009028, 1.6030684641486206, 2.662895396307858, 5.265778687964644, 1], \"252\": [1, 2, 4, 65, 0, 0.22440062250426088, 0.6962869005646131, 5.5862116806259134, 2], \"868\": [0, 0, 4, 13, 0, 0, 2.1972245773362196, 4.448516375942715, 3], \"118\": [12, 26, 41, 147, 0.7383903432907946, 1.8130288810609057, 2.621342268205335, 5.105660336457803, 1], \"228\": [1, 2, 2, 32, 0, 0.06485254217956125, 0.06485254217956125, 2.898804370530393, 2], \"224\": [3, 5, 17, 136, 0.18269268316674286, 0.44262785449155595, 2.0064037522014004, 6.0232965868827515, 1], \"51\": [5, 8, 21, 144, 0.31790921708384473, 0.6719663584804982, 2.028384588727978, 5.7411397914715865, 1], \"344\": [2, 6, 13, 119, 0.026739561041899163, 0.21825356602001797, 0.7631332352805397, 4.574110121915358, 1], \"105\": [7, 8, 19, 194, 0.4024271310880877, 0.499027276979333, 1.5368998359172117, 5.944231436027165, 1], \"173\": [1, 2, 9, 99, 0, 0.08894748601649616, 1.0590814499114745, 5.433417295817384, 2], \"378\": [0, 0, 9, 90, 0, 0, 1.1903207151576087, 5.43726836855659, 3], \"203\": [0, 3, 5, 62, 0, 0.10750197896911202, 0.27403323336592444, 3.9014502867325973, 2], \"557\": [1, 1, 5, 47, 0, 0, 0.5773153650348236, 4.2489415710012, 3], \"855\": [0, 4, 63, 197, 0, 1.717651497074333, 6.020188416978485, 8.814870981623532, 2], \"107\": [1, 2, 8, 36, 0, 0.06840272688440052, 0.7574091147783144, 3.1754693725682412, 2], \"229\": [4, 6, 9, 71, 0.15765117803680806, 0.3251259020780217, 0.6229720278956343, 4.003678508821548, 1], \"414\": [1, 1, 5, 30, 0, 0, 0.4157216082753534, 2.9733179914316317, 3], \"64\": [3, 6, 14, 153, 0.09865606331051037, 0.3469503940467376, 1.1811333123561132, 5.60097033908876, 1], \"144\": [5, 6, 6, 25, 0.17879144918609313, 0.2483517213385956, 0.2483517213385956, 1.7739829790019928, 1], \"301\": [0, 0, 4, 46, 0, 0, 0.6109090823229733, 4.721782946496284, 3], \"724\": [6, 12, 24, 64, 0.3355225689335057, 0.9534648850908103, 1.9986025591455516, 3.836435107477987, 1], \"131\": [3, 5, 13, 84, 0.16019963970668397, 0.3938144908881891, 1.4498671651375028, 4.92155790230317, 1], \"642\": [1, 1, 8, 123, 0, 0, 2.7652947438772277, 8.01601647055703, 3], \"893\": [5, 9, 40, 240, 0.5652447268076234, 1.2418482126818102, 3.8718345304680457, 7.468376206406687, 1], \"452\": [1, 1, 5, 21, 0, 0, 0.5118945709548958, 2.5487764982159358, 3], \"34\": [10, 14, 37, 184, 0.42140998664517815, 0.7066820045649531, 2.1010871278822116, 5.184265568705131, 1], \"150\": [12, 13, 31, 114, 0.8394392737746823, 0.9334935101107832, 2.279956558773182, 4.784862719149704, 1], \"181\": [1, 5, 7, 84, 0, 0.3846112718249586, 0.6519733417857819, 4.8932227338954215, 2], \"454\": [0, 0, 2, 48, 0, 0, 0.29407187055055195, 5.287878454820207, 3], \"413\": [1, 2, 2, 20, 0, 0.4274440148269396, 0.4274440148269396, 3.9951379121386528, 2], \"315\": [1, 2, 6, 111, 0, 0.22695792338968046, 1.191797069160121, 6.666673126326619, 2], \"898\": [3, 6, 9, 28, 0.28861100888643976, 0.8494198770986015, 1.3890785856562955, 3.406018455342718, 1], \"210\": [15, 17, 61, 297, 1.3933354631349397, 1.5871179875034427, 3.900602120496128, 7.080195289008568, 1], \"675\": [0, 0, 2, 63, 0, 0, 0.5465437063680699, 6.5829061407747425, 3], \"720\": [1, 1, 3, 17, 0, 0, 0.7672551527136672, 3.6389347775976795, 3], \"95\": [3, 5, 7, 39, 0.34560472018448546, 0.7639732331285577, 1.1779490309046308, 4.259444256539029, 1], \"261\": [0, 0, 2, 44, 0, 0, 0.1986706947954841, 4.676314587427493, 3], \"782\": [1, 3, 5, 42, 0, 0.08384797247787562, 0.2174910657447931, 2.8982769374032777, 2], \"14\": [23, 43, 77, 305, 0.8644369338389098, 1.7580907005638462, 2.7970374659923727, 5.49125171459465, 1], \"785\": [2, 3, 14, 64, 0.5705448584676129, 1.0045833390198333, 3.6228351467693103, 6.670376267208555, 1], \"813\": [2, 3, 6, 42, 0.1656671218888174, 0.34032580593720296, 0.9637930658591585, 4.3877534483715515, 1], \"789\": [2, 7, 11, 85, 0.07696104113612832, 0.6830968447064438, 1.2296405510745139, 4.980176086611547, 1], \"579\": [0, 0, 0, 8, 0, 0, 0, 3.280911215787653, 4], \"744\": [3, 6, 9, 41, 0.2071597101203954, 0.6526980917787689, 1.1222022620946177, 3.784015240661025, 1], \"860\": [2, 4, 8, 47, 0.16989903679539747, 0.5543107357057295, 1.376991968457577, 4.637332571870317, 1], \"35\": [4, 9, 21, 91, 0.05048390543199203, 0.23280546222594664, 0.8867319296326106, 3.3250127380805554, 1], \"449\": [0, 0, 7, 72, 0, 0, 2.1864136612320038, 6.7299782190118815, 3], \"438\": [1, 2, 18, 137, 0, 0.0840831172105414, 2.092513623247189, 6.022480726647936, 2], \"436\": [0, 2, 3, 9, 0, 0.30538164955118186, 0.5897688261061103, 2.1080463522614994, 2], \"325\": [1, 1, 3, 27, 0, 0, 0.8430873278508602, 4.684035730488613, 3], \"234\": [5, 15, 36, 214, 0.1727230996720166, 0.9920779655475969, 2.37711314496911, 5.847506217936523, 1], \"362\": [0, 0, 8, 80, 0, 0, 2.1230183588789355, 6.6020886955735065, 3], \"633\": [2, 4, 5, 15, 0.2578291093020998, 0.7777045685880084, 1.0431824837287789, 2.8647187169218093, 1], \"505\": [1, 1, 2, 31, 0, 0, 0.9088557533866369, 5.877528269846958, 3], \"661\": [2, 2, 3, 6, 0.36772478012531734, 0.36772478012531734, 0.6931471805599453, 1.6094379124341003, 1], \"66\": [6, 11, 17, 88, 0.12612915690460033, 0.37282463932921184, 0.7319656757631378, 3.3984303006609013, 1], \"58\": [2, 3, 9, 36, 0.015169043229667648, 0.03381238708415533, 0.269656619344463, 1.7837668437964602, 1], \"494\": [1, 4, 8, 55, 0, 0.3101549283038395, 0.8979415932059586, 4.244917420701475, 2], \"409\": [1, 3, 9, 40, 0, 0.19714257713870645, 1.0856145427261397, 3.682381389770903, 2], \"493\": [1, 8, 16, 57, 0, 1.0252202899107636, 2.0981207426820307, 4.519113152858014, 2], \"381\": [0, 1, 4, 32, 0, 0, 1.090347778818216, 4.8474867788934946, 3], \"185\": [0, 0, 6, 73, 0, 0, 0.5348951087148693, 4.660562142066011, 3], \"570\": [5, 6, 7, 32, 0.15143748173677285, 0.21143366157244725, 0.2779884123837752, 2.0408550289486, 1], \"44\": [4, 13, 19, 84, 0.2871621868149089, 1.5070758997725306, 2.1406774478236374, 4.995145184037793, 1], \"350\": [3, 3, 8, 80, 0.15906469462968736, 0.15906469462968736, 0.8002303495292178, 4.817093942016186, 1], \"205\": [7, 7, 18, 98, 0.29863044245188547, 0.29863044245188547, 1.1942667618137595, 4.237148644661807, 1], \"222\": [0, 2, 7, 43, 0, 0.056273635982108605, 0.5359769924296924, 3.3235356609540183, 2], \"217\": [11, 20, 48, 212, 0.26811448741664634, 0.7013724721090059, 1.9249996292748317, 4.7468087157337, 1], \"396\": [0, 0, 1, 5, 0, 0, 0, 2.1489393361767575, 4], \"680\": [3, 5, 9, 43, 0.12095261041766249, 0.30538164955118186, 0.7687845947655654, 3.311064253958341, 1], \"319\": [1, 3, 3, 23, 0, 0.6514744841593773, 0.6514744841593773, 4.006962058859683, 2], \"681\": [0, 0, 2, 17, 0, 0, 0.5543107357057295, 3.9985404332844925, 3], \"655\": [1, 1, 2, 9, 0, 0, 0.680877087968131, 3.0328400618690665, 3], \"263\": [0, 2, 2, 14, 0, 0.08974628785627545, 0.08974628785627545, 1.7229342563884908, 2], \"132\": [2, 4, 8, 42, 0.21472498084861397, 0.6719663584804982, 1.5753298558531936, 4.669353104984559, 1], \"682\": [0, 0, 0, 57, 0, 0, 0, 4.150737013271765, 4], \"168\": [0, 3, 7, 38, 0, 0.22710171311183888, 0.8704989010685588, 3.735441317958939, 2], \"334\": [1, 1, 2, 36, 0, 0, 0.037919234862293726, 2.6042986962500843, 3], \"86\": [0, 1, 2, 51, 0, 0, 0.07770898432731625, 3.9805309108532163, 3], \"310\": [0, 0, 3, 28, 0, 0, 0.4036217896138752, 3.7913213501010987, 3], \"77\": [0, 3, 3, 32, 0, 0.14953173397096375, 0.14953173397096375, 2.962757248396921, 2], \"502\": [0, 0, 2, 12, 0, 0, 0.26121549926361765, 2.4635356290264374, 3], \"485\": [5, 5, 6, 36, 0.1847536617625671, 0.1847536617625671, 0.25635222231086324, 2.4440395604558955, 1], \"92\": [5, 8, 19, 119, 0.26356981012283964, 0.5721170210385823, 1.6779642496987404, 5.146448961731916, 1], \"670\": [0, 0, 7, 25, 0, 0, 0.9421515234066085, 3.0429999039335693, 3], \"81\": [1, 3, 10, 76, 0, 0.11595988109486835, 0.8612515751610689, 4.380864757770458, 2], \"711\": [0, 0, 1, 10, 0, 0, 0, 5.121977881431629, 4], \"226\": [3, 6, 18, 125, 0.04811189737589208, 0.1799456075815701, 1.0204237694067069, 4.460948147862914, 1], \"307\": [0, 1, 4, 26, 0, 0, 0.949399890481434, 4.218487965849631, 3], \"690\": [0, 0, 2, 29, 0, 0, 0.462623521948113, 4.825722146736476, 3], \"333\": [0, 0, 2, 22, 0, 0, 0.7472144018302211, 4.908561552145052, 3], \"225\": [2, 3, 7, 49, 0.06271647386762642, 0.135955636236029, 0.5838234098495384, 3.68515082857341, 1], \"323\": [1, 1, 11, 118, 0, 0, 1.9573306871741878, 6.552077683900379, 3], \"157\": [0, 0, 2, 15, 0, 0, 0.6576404921030354, 3.976416167164342, 3], \"336\": [1, 1, 4, 36, 0, 0, 1.0986122886681096, 5.093750200806762, 3], \"443\": [3, 7, 15, 90, 0.09705888158204505, 0.44142820516401104, 1.2664210903482318, 4.529721477483953, 1], \"304\": [1, 1, 8, 37, 0, 0, 1.5339303599259553, 4.366711084464284, 3], \"278\": [0, 2, 15, 70, 0, 0.050261834780888255, 1.3608443741650824, 4.161135698954199, 2], \"6\": [7, 10, 18, 122, 0.3311927568959644, 0.5884986620842088, 1.2798648982731593, 4.789679518794074, 1], \"663\": [0, 0, 0, 4, 0, 0, 0, 3.172083663361442, 4], \"725\": [2, 3, 3, 19, 0.2529118727100632, 0.4992480704235479, 0.4992480704235479, 3.29477048360522, 1], \"161\": [1, 3, 4, 20, 0, 0.7472144018302211, 1.090347778818216, 3.919648180733367, 2], \"407\": [1, 2, 6, 30, 0, 0.5042466526679481, 1.9317589695090702, 5.000860904048749, 2], \"277\": [1, 1, 7, 88, 0, 0, 2.277267285009756, 7.232629910371072, 3], \"258\": [2, 2, 6, 31, 0.04175972102859266, 0.04175972102859266, 0.32482994825781064, 2.4199415984669526, 1], \"196\": [1, 1, 5, 31, 0, 0, 0.2549212852118992, 2.498270305859731, 3], \"159\": [1, 1, 4, 28, 0, 0, 1.4663370687934272, 5.101896885374581, 3], \"518\": [2, 6, 17, 94, 0.08701137698962977, 0.5978370007556205, 2.023952856062183, 5.3073672020679545, 1], \"148\": [4, 6, 12, 84, 0.19622624370172712, 0.39730179746900346, 1.0822184788924334, 4.570679730917609, 1], \"219\": [6, 8, 16, 55, 0.2729710814971248, 0.44338839803005736, 1.1730730860213616, 3.3095625088013296, 1], \"162\": [8, 18, 29, 137, 0.29765385700785896, 1.0134705309192675, 1.7148417640976539, 4.631557844013894, 1], \"274\": [3, 5, 6, 30, 0.10041874774704733, 0.2572954628835441, 0.352440639799944, 2.447843232411113, 1], \"388\": [0, 1, 2, 38, 0, 0, 0.49159426183810306, 5.438976077168717, 3], \"383\": [3, 8, 23, 59, 0.06566910350785725, 0.39383412996130407, 1.6073240659577195, 3.3051227065886324, 1], \"353\": [0, 0, 5, 49, 0, 0, 2.1226137135450447, 6.561280239542891, 3], \"47\": [0, 1, 8, 40, 0, 0, 0.7066986035630379, 3.2839960387480063, 3], \"244\": [1, 1, 3, 13, 0, 0, 1.6650077635889111, 4.400310836168771, 3], \"265\": [0, 0, 2, 5, 0, 0, 0.7191226669632059, 2.02537432040956, 3], \"355\": [0, 1, 2, 21, 0, 0, 0.19384140062681604, 3.202050578951641, 3], \"370\": [0, 0, 2, 55, 0, 0, 1.1700712526502546, 7.427474569918248, 3], \"332\": [3, 3, 8, 76, 0.21106039931128698, 0.21106039931128698, 0.9824597767709804, 5.022625783188211, 1], \"337\": [0, 1, 10, 60, 0, 0, 1.834684513945089, 5.249514044397302, 3], \"135\": [9, 16, 32, 134, 0.6361178989515811, 1.337655118601828, 2.5047415617054036, 5.288782481767195, 1], \"18\": [9, 16, 30, 171, 0.5445663045938038, 1.1902055467928492, 2.201979415417835, 5.569541012552965, 1], \"90\": [2, 4, 10, 65, 0.04843561709959499, 0.1810800917058897, 0.8067859914703024, 3.9781731304600587, 1], \"243\": [0, 0, 4, 30, 0, 0, 1.5339303599259553, 5.325667199479599, 3], \"459\": [0, 3, 4, 20, 0, 0.2115583769789802, 0.34984539283307103, 2.4398399115488365, 2], \"342\": [0, 1, 3, 16, 0, 0, 0.09747971420558924, 1.3641511127470891, 3], \"249\": [0, 0, 6, 12, 0, 0, 1.0107179094136018, 2.078227212447434, 3], \"286\": [1, 2, 11, 65, 0, 0.19671029424605424, 2.0249968337114836, 5.440769449064076, 2], \"392\": [9, 11, 17, 52, 0.36101334553733055, 0.5004661915288962, 0.9365879060124209, 2.741757304339815, 1], \"345\": [2, 4, 5, 39, 0.031034298195512264, 0.11874571021547974, 0.1798230348813852, 2.5638576542963425, 1], \"373\": [0, 1, 9, 53, 0, 0, 1.2962979072868075, 4.533656575704121, 3], \"241\": [0, 1, 2, 19, 0, 0, 0.4321333551903257, 3.9076893041710274, 3], \"280\": [0, 0, 2, 16, 0, 0, 0.8286926725561692, 4.425811976076964, 3], \"517\": [0, 2, 2, 7, 0, 0.8472978603872036, 0.8472978603872036, 2.8526314299133175, 2], \"435\": [5, 7, 12, 45, 0.375262504256744, 0.6379155495896968, 1.2872888373444415, 3.6345617461010695, 1], \"530\": [1, 2, 4, 12, 0, 0.08682239465891518, 0.3095500590883616, 1.4505139538541845, 2], \"227\": [7, 7, 30, 157, 0.6220141936970933, 0.6220141936970933, 2.8240580574692618, 6.07525698713734, 1], \"415\": [2, 2, 5, 48, 0.07197349962508924, 0.07197349962508924, 0.38282263135840455, 3.783850363346729, 1], \"529\": [0, 0, 3, 41, 0, 0, 0.6061358035703156, 5.0540021957397405, 3], \"182\": [3, 3, 4, 18, 0.10236201266156972, 0.10236201266156972, 0.1753110123077373, 1.5851943008241076, 1], \"532\": [2, 3, 5, 36, 0.2295744416445002, 0.4578330936254804, 0.9604619501872924, 4.438086775381727, 1], \"338\": [2, 8, 10, 49, 0.04717856027509048, 0.5726430547892012, 0.7919645976288356, 3.401116863122718, 1], \"395\": [1, 2, 6, 38, 0, 0.23090555664969895, 1.205270663041536, 4.5514131619119365, 2], \"536\": [0, 0, 0, 6, 0, 0, 0, 1.9900349539642512, 4], \"189\": [5, 19, 33, 144, 0.08004270767353643, 0.7899713651954853, 1.5325568680981427, 4.250208060053033, 1], \"290\": [5, 5, 6, 34, 0.25055483842288756, 0.25055483842288756, 0.34360585960942475, 2.650864988028718, 1], \"547\": [6, 12, 35, 220, 0.40639318242071826, 1.1004675767698557, 2.893770494367288, 6.51485298846872, 1], \"419\": [1, 1, 3, 33, 0, 0, 0.6325225587435105, 4.679950201177859, 3], \"216\": [1, 1, 4, 24, 0, 0, 0.28820385696661954, 2.566874594699871, 3], \"567\": [3, 6, 12, 60, 0.1034215911531522, 0.3617468060366927, 1.0091766680669736, 3.797364622906187, 1], \"371\": [2, 4, 5, 44, 0.10109611687136877, 0.35454501768090746, 0.5097612277102039, 3.9606105148192983, 1], \"180\": [4, 4, 8, 46, 0.2553466918088445, 0.2553466918088445, 0.7717903078790584, 3.675609984645821, 1], \"606\": [3, 3, 5, 11, 0.7407752295491999, 0.7407752295491999, 1.3984157216522355, 2.757227437078294, 1], \"601\": [0, 0, 3, 21, 0, 0, 0.5456944494168147, 3.5990782654624374, 3], \"374\": [2, 2, 4, 19, 0.05849620668160855, 0.05849620668160855, 0.21588838043303785, 1.8620232864026591, 1], \"40\": [3, 6, 12, 73, 0.08047235322257314, 0.28907774609075565, 0.8504851140813827, 3.924312174006428, 1], \"902\": [0, 1, 11, 35, 0, 0, 2.9335439297613735, 5.199309181070882, 3], \"465\": [0, 0, 3, 21, 0, 0, 0.760450862456052, 4.039937386314911, 3], \"778\": [23, 32, 57, 208, 2.644767562046146, 2.9014024705696166, 4.594272315004427, 7.2069618105140645, 1], \"89\": [1, 1, 2, 20, 0, 0, 0.15355773584309076, 2.8677574359839357, 3], \"119\": [2, 3, 6, 26, 0.07579383936953364, 0.16310930637214985, 0.5357102670818683, 2.66075498193758, 1], \"537\": [0, 0, 0, 3, 0, 0, 0, 1.33828514193353, 4], \"553\": [0, 0, 0, 2, 0, 0, 0, 1.252762968495368, 4], \"645\": [4, 4, 7, 23, 0.4150651818371836, 0.4150651818371836, 0.946068034889125, 2.890907520030598, 1], \"646\": [0, 2, 4, 33, 0, 0.3101549283038395, 0.8979415932059586, 4.605170185988092, 2], \"662\": [1, 7, 16, 74, 0, 0.9212168502102109, 2.18618998261251, 5.135871056054687, 2], \"738\": [1, 2, 2, 7, 0, 0.6576404921030354, 0.6576404921030354, 2.5173213084722823, 2], \"743\": [0, 0, 1, 4, 0, 0, 0, 2.662587827025453, 4], \"747\": [4, 8, 15, 62, 0.15626261303040184, 0.516727833142915, 1.217412737834287, 3.7289231331402632, 1], \"767\": [0, 0, 0, 6, 0, 0, 0, 1.6747291622485376, 4], \"790\": [0, 0, 0, 15, 0, 0, 0, 3.4339872044851463, 4], \"791\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"819\": [0, 0, 2, 9, 0, 0, 0.5175824062288705, 2.6898056813596725, 3], \"872\": [0, 0, 0, 3, 0, 0, 0, 1.6274564179367788, 4], \"881\": [0, 0, 0, 2, 0, 0, 0, 0.7191226669632059, 4], \"917\": [0, 0, 3, 28, 0, 0, 0.5229653783166013, 4.108367911226772, 3], \"442\": [2, 7, 15, 100, 0.09374540917097383, 0.7902426766162012, 1.8761397603172185, 5.508174019482305, 1], \"437\": [4, 5, 13, 88, 0.27618482008612333, 0.40347505770015435, 1.472435578318149, 5.043142899199232, 1], \"393\": [0, 1, 2, 10, 0, 0, 0.9315582040049435, 3.6753264877092326, 3], \"926\": [0, 0, 0, 9, 0, 0, 0, 2.614197292295864, 4], \"367\": [1, 1, 8, 24, 0, 0, 0.7827063296283738, 2.458430598712932, 3], \"716\": [1, 1, 5, 41, 0, 0, 1.6696567724271552, 5.672730604320031, 3], \"765\": [1, 1, 4, 23, 0, 0, 2.0014800002101243, 5.359412465907847, 3], \"853\": [1, 1, 4, 14, 0, 0, 1.0288165267325677, 3.13647077850676, 3], \"523\": [2, 3, 8, 46, 0.11060987154397002, 0.23361485118150516, 1.0547805712918608, 4.141090495982568, 1], \"688\": [1, 2, 10, 45, 0, 0.49159426183810306, 2.825715651950415, 5.775881627762223, 2], \"879\": [2, 5, 9, 33, 0.37117603462953225, 1.3373637376483105, 2.3126466647394803, 4.815103266502592, 1], \"935\": [0, 0, 1, 4, 0, 0, 0, 1.8458266904983307, 4], \"480\": [1, 2, 6, 31, 0, 0.30774963550259016, 1.4453278927040836, 4.472513571508735, 2], \"486\": [1, 5, 5, 23, 0, 0.7379785938566756, 0.7379785938566756, 3.1822299598852615, 2], \"908\": [6, 15, 21, 85, 0.21031782910428387, 0.9013553042403796, 1.3525721575144563, 3.870713245675881, 1], \"938\": [0, 0, 0, 3, 0, 0, 0, 2.1400661634962708, 4], \"817\": [1, 2, 15, 93, 0, 0.07133147800542972, 1.6407359546898406, 5.080600377161769, 2], \"865\": [1, 1, 7, 41, 0, 0, 1.8919341478535157, 5.268983251706066, 3], \"305\": [0, 0, 2, 19, 0, 0, 0.6466271649250525, 4.419388103019691, 3], \"673\": [0, 0, 5, 16, 0, 0, 1.0154347821892018, 2.9459204609188836, 3], \"833\": [6, 8, 15, 59, 1.3440770366239985, 1.7982997149086648, 2.9294073809016026, 5.617114632066331, 1], \"886\": [0, 1, 3, 29, 0, 0, 0.6325225587435105, 4.4242593982971545, 3], \"945\": [5, 6, 18, 131, 0.7919645976288356, 1.007640510462383, 2.8125407732514964, 6.721466442641551, 1], \"233\": [3, 4, 5, 21, 0.6325225587435105, 0.9433716904768258, 1.238658362313826, 3.789522979893624, 1], \"784\": [1, 1, 2, 23, 0, 0, 0.10265415406008337, 2.7276761655589583, 3], \"475\": [3, 3, 7, 16, 0.8347976976229722, 0.8347976976229722, 2.09204296855784, 3.640252320132622, 1], \"611\": [0, 2, 5, 19, 0, 0.31508104663989533, 1.1984017592764806, 3.5388099411571696, 2], \"715\": [0, 0, 3, 21, 0, 0, 0.5780778507751582, 3.6724407277707765, 3], \"882\": [6, 15, 24, 96, 0.49573913073261056, 1.6115746653838356, 2.4219117969496025, 5.107629357592398, 1], \"965\": [0, 0, 2, 22, 0, 0, 0.22067136216882066, 3.42999677620518, 3], \"967\": [1, 2, 6, 24, 0, 0.13047795513763227, 0.8128640787412794, 3.047835344513592, 2], \"892\": [0, 0, 2, 23, 0, 0, 0.3856624808119847, 4.146862596505547, 3], \"974\": [0, 3, 83, 1126, 0, 0.5858181603294468, 5.737690376224411, 9.231251349836604, 2], \"399\": [3, 4, 24, 100, 0.22538822116803361, 0.37117603462953225, 2.8437328361969225, 5.641548412317496, 1], \"689\": [0, 1, 2, 5, 0, 0, 0.6576404921030354, 1.9189724933235048, 3], \"838\": [1, 3, 3, 27, 0, 0.22203796800646014, 0.22203796800646014, 3.0510781187343725, 2], \"941\": [3, 3, 6, 38, 0.2527333714065298, 0.2527333714065298, 0.7655421391045746, 3.852998540377414, 1], \"192\": [1, 2, 2, 12, 0, 0.5543107357057295, 0.5543107357057295, 3.3202283191284883, 2], \"556\": [3, 4, 16, 59, 0.5168226432383649, 0.7898234807953135, 3.008061964589845, 5.571124313257226, 1], \"854\": [1, 2, 14, 35, 0, 0.20800057121164617, 2.5119931239735718, 4.274013277715898, 2], \"958\": [0, 0, 0, 10, 0, 0, 0, 2.2043674648485996, 4], \"366\": [1, 1, 10, 29, 0, 0, 2.856093274440672, 4.93352998025824, 3], \"832\": [0, 0, 2, 17, 0, 0, 0.4519851237430572, 3.744449305268747, 3], \"912\": [1, 2, 9, 60, 0, 0.09463320809845266, 1.1019153469973673, 4.503469905864424, 2], \"983\": [1, 4, 5, 24, 0, 0.8718389693033213, 1.1549652252192413, 3.9335292106491098, 2], \"178\": [1, 1, 3, 32, 0, 0, 0.15766847536402548, 3.0170406312743547, 3], \"594\": [1, 1, 2, 5, 0, 0, 0.35774963506849783, 1.3051309540126839, 3], \"978\": [0, 1, 4, 18, 0, 0, 0.5193002507569628, 2.6937642438547336, 3], \"376\": [0, 1, 3, 21, 0, 0, 0.5491078103370076, 3.606954895568432, 3], \"421\": [2, 3, 5, 30, 0.3030501026800949, 0.5858181603294468, 1.16701501555251, 4.3900694257837864, 1], \"956\": [0, 3, 3, 11, 0, 2.269163401510956, 2.3978952727983707, 4.908561552145052, 2], \"994\": [1, 1, 2, 180, 0, 0, 0.5968160716215132, 8.537822314653607, 3], \"816\": [1, 1, 5, 19, 0, 0, 0.8165262017204499, 2.9565923652167205, 3], \"595\": [2, 8, 16, 45, 0.016949558313773268, 0.24177237114770306, 0.7390842757469709, 2.267356401110302, 1], \"808\": [0, 0, 4, 17, 0, 0, 1.0586069540544105, 3.5553480614894135, 3], \"931\": [1, 2, 10, 59, 0, 0.538996500732687, 2.9368917735310576, 6.433915730568011, 2], \"621\": [5, 6, 15, 63, 0.4302451371066513, 0.5733459807473247, 1.7645098267806796, 4.458464839035206, 1], \"1014\": [4, 4, 83, 808, 0.18211346190193325, 0.18211346190193325, 4.433159850653377, 8.636779302583237, 1], \"501\": [2, 3, 3, 11, 0.1720973230180951, 0.352440639799944, 0.352440639799944, 1.8992304323804272, 1], \"766\": [1, 1, 5, 53, 0, 0, 1.0479685558493548, 5.342688610579433, 3], \"770\": [0, 1, 2, 12, 0, 0, 0.8472978603872036, 3.8918202981106265, 3], \"877\": [4, 5, 8, 18, 1.349926716949016, 1.6982334112172315, 2.5199979695992702, 4.075113200294213, 1], \"954\": [2, 3, 7, 31, 0.1603426500751794, 0.33024168687057687, 1.1411719030869056, 3.7561316811231036, 1], \"1013\": [5, 6, 16, 77, 0.16344179897725258, 0.22767870647960103, 1.0360919316867756, 3.7637404908576144, 1], \"1019\": [2, 4, 18, 78, 0.0036653573520393137, 0.014581503228509918, 0.26039210728570533, 1.884830511668266, 1], \"115\": [2, 3, 5, 27, 0.1330864537962701, 0.2778473932736894, 0.6364073519081931, 3.2937257687695607, 1], \"318\": [1, 1, 4, 13, 0, 0, 1.3910002521573033, 3.4930711319678993, 3], \"822\": [1, 1, 3, 9, 0, 0, 0.5423242908253616, 2.012232791986386, 3], \"943\": [9, 12, 35, 117, 1.3752850756115214, 1.833456992769655, 3.789468310189334, 6.215804462784843, 1], \"1021\": [0, 0, 8, 35, 0, 0, 2.4267990189807196, 5.291195290473624, 3], \"940\": [3, 5, 11, 40, 0.27029032973991174, 0.6216882165778004, 1.6433394641097818, 4.028425778615571, 1], \"1025\": [3, 4, 11, 64, 0.48285177172358457, 0.7435780341868372, 2.234822990893227, 5.647151305165659, 1], \"1034\": [1, 5, 8, 67, 0, 1.0384437672016569, 1.7354594245395225, 5.795036662996299, 2], \"397\": [0, 0, 2, 12, 0, 0, 0.4572413776318843, 3.0850959541705896, 3], \"1036\": [12, 16, 75, 613, 0.9808292530117262, 1.376991968457577, 4.158426114806413, 8.227950698667026, 1], \"272\": [0, 0, 2, 11, 0, 0, 0.8873031950009028, 3.7890479430693373, 3], \"354\": [0, 1, 5, 35, 0, 0, 0.5957174923400869, 3.7111858104017665, 3], \"515\": [4, 4, 5, 20, 0.535302370192545, 0.535302370192545, 0.7448828549591341, 2.928476198903716, 1], \"787\": [0, 0, 3, 18, 0, 0, 1.4118276631250553, 4.724943576737736, 3], \"894\": [1, 1, 2, 7, 0, 0, 0.9555114450274365, 3.0252910757955354, 3], \"507\": [0, 2, 2, 11, 0, 0.1391128024627178, 0.1391128024627178, 1.7074581209972903, 2], \"674\": [0, 1, 2, 12, 0, 0, 0.26121549926361765, 2.4635356290264374, 3], \"741\": [0, 1, 2, 15, 0, 0, 0.5175824062288705, 3.667032365448776, 3], \"1029\": [3, 5, 18, 137, 0.16310930637214985, 0.40020193806388976, 1.9984961957798308, 5.914768431505906, 1], \"1035\": [4, 6, 13, 51, 0.7435780341868372, 1.2478246868547855, 2.538066018068096, 5.195061913384137, 1], \"1046\": [4, 8, 13, 53, 0.15610983952255864, 0.5163016273403308, 1.0240980931672083, 3.4230270646311203, 1], \"432\": [0, 1, 4, 29, 0, 0, 1.4663370687934272, 5.171667007124543, 3], \"468\": [3, 3, 6, 24, 0.6061358035703156, 0.6061358035703156, 1.4663370687934272, 3.9951379121386528, 1], \"792\": [2, 5, 19, 96, 0.01691372244206185, 0.10130111471960927, 0.9319458009090207, 3.696367341254677, 1], \"794\": [2, 3, 6, 12, 0.2876820724517809, 0.5596157879354227, 1.3862943611198906, 2.5649493574615367, 1], \"988\": [1, 1, 2, 14, 0, 0, 0.4978384282391795, 3.4847080145353253, 3], \"352\": [0, 0, 2, 15, 0, 0, 0.38946476676172326, 3.3245220140031875, 3], \"561\": [0, 2, 3, 22, 0, 0.10453372768183221, 0.22148929121818325, 2.662587827025453, 2], \"605\": [2, 7, 7, 30, 0.026351985988424496, 0.2829982231393545, 0.2829982231393545, 1.9470538777350803, 1], \"1032\": [0, 0, 3, 12, 0, 0, 0.8187244879431477, 3.0578470852314243, 3], \"1039\": [4, 4, 4, 60, 0.2646925542270822, 0.2646925542270822, 0.2646925542270822, 4.236738085063315, 1], \"714\": [0, 2, 3, 25, 0, 0.12879510820557039, 0.2694761079552085, 3.11252207078972, 2], \"1059\": [0, 2, 4, 17, 0, 0.3933437475758196, 1.0742208355439504, 3.5784862152015, 2], \"1060\": [1, 1, 2, 11, 0, 0, 0.6466271649250525, 3.349904087274605, 3], \"80\": [5, 8, 9, 30, 0.12617519275733058, 0.2958519431135084, 0.3616651616830801, 1.7649555204954563, 1], \"404\": [1, 2, 4, 24, 0, 0.1292117314800062, 0.4393666597838457, 3.0379326280443673, 2], \"576\": [0, 1, 3, 10, 0, 0, 0.8602012652231115, 2.7820138626993645, 3], \"1050\": [2, 2, 5, 45, 0.17135825199668508, 0.17135825199668508, 0.7739085372044038, 4.5604465087967725, 1], \"1055\": [2, 3, 7, 194, 0.30774963550259016, 0.5937747067467416, 1.6890647332228734, 7.979044697251568, 1], \"1068\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1074\": [0, 0, 1, 16, 0, 0, 0, 4.224911037504159, 4], \"1075\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"582\": [1, 2, 4, 21, 0, 1.2992829841302609, 2.456735772821304, 5.68697535633982, 2], \"1072\": [1, 3, 4, 31, 0, 0.5560675878793254, 0.8425641237370047, 4.387281399225248, 2], \"1079\": [0, 0, 1, 20, 0, 0, 0, 3.458498235499496, 4], \"1082\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1083\": [1, 1, 3, 39, 0, 0, 1.0986122886681096, 5.82600010738045, 3], \"1084\": [0, 0, 1, 16, 0, 0, 0, 5.771441123130016, 4], \"65\": [2, 2, 4, 26, 0.09330773169945256, 0.09330773169945256, 0.3301652780835292, 2.8638062978100702, 1], \"359\": [2, 3, 6, 30, 0.25452986513488046, 0.5020919437972361, 1.2833463918674481, 4.192943136966012, 1], \"541\": [0, 1, 2, 21, 0, 0, 0.18924199963852842, 3.1767508985675295, 3], \"800\": [1, 1, 3, 11, 0, 0, 0.8430873278508602, 2.9335439297613735, 3], \"971\": [2, 6, 12, 36, 0.322773392263051, 1.4880770554298328, 2.6888188391743224, 4.8237318277971895, 1], \"1080\": [1, 1, 2, 5, 0, 0, 0.8286926725561692, 2.2043674648485996, 3], \"1088\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1089\": [1, 1, 2, 9, 0, 0, 0.8668106746107854, 3.364914876480732, 3], \"1090\": [0, 0, 0, 2, 0, 0, 0, 1.0986122886681096, 4], \"1091\": [0, 0, 0, 53, 0, 0, 0, 7.681581365890171, 4], \"1092\": [2, 2, 6, 34, 0.16917873135476025, 0.16917873135476025, 0.97794491296764, 3.994006402301089, 1], \"1093\": [0, 1, 2, 8, 0, 0, 0.680877087968131, 2.8099902394452045, 3], \"874\": [1, 2, 3, 35, 0, 0.09958470542943662, 0.2115583769789802, 3.498567947328903, 2], \"1056\": [1, 3, 14, 95, 0, 0.16989903679539747, 1.616000692346624, 5.229500846353315, 2], \"1098\": [0, 0, 0, 2, 0, 0, 0, 0.5042466526679481, 4], \"1099\": [0, 0, 1, 32, 0, 0, 0, 6.596365822728387, 4], \"1100\": [0, 0, 1, 50, 0, 0, 0, 6.517192097085513, 4], \"256\": [0, 0, 3, 17, 0, 0, 1.0698333241180664, 4.134996329488562, 3], \"1042\": [1, 1, 2, 38, 0, 0, 0.9555114450274365, 6.360611392542035, 3], \"1095\": [1, 1, 3, 16, 0, 0, 0.7958013346200287, 3.5721937890990567, 3], \"1108\": [10, 11, 86, 318, 2.3984890923323294, 2.4531670444878952, 5.8318563898091025, 8.74547425358802, 1], \"267\": [0, 1, 2, 4, 0, 0, 1.4053425560905852, 2.588342237036242, 3], \"525\": [1, 1, 4, 39, 0, 0, 0.4994248488146178, 4.136428917524341, 3], \"925\": [1, 1, 3, 25, 0, 0, 1.252762968495368, 5.162561278901403, 3], \"1105\": [2, 4, 4, 14, 0.5543107357057295, 1.376991968457577, 1.376991968457577, 3.618894026714233, 1], \"1112\": [1, 1, 1, 15, 0, 0, 0, 2.959725901063346, 4], \"1114\": [0, 0, 7, 39, 0, 0, 1.8355876931972364, 5.10320467343778, 3], \"686\": [0, 1, 2, 14, 0, 0, 0.24067603007585034, 2.662587827025453, 3], \"887\": [0, 0, 2, 4, 0, 0, 0.8109302162163288, 1.791759469228055, 3], \"904\": [2, 2, 2, 16, 0.08515780834030685, 0.08515780834030685, 0.08515780834030685, 1.900447774978556, 1], \"1007\": [1, 1, 2, 6, 0, 0, 0.7939518796819109, 2.477302050402781, 3], \"1122\": [2, 2, 13, 50, 0.8109302162163288, 0.8109302162163288, 3.952700116319057, 6.662174382548992, 1], \"713\": [2, 2, 5, 16, 0.20800057121164617, 0.20800057121164617, 0.894080584548499, 2.759863591430289, 1], \"726\": [0, 0, 2, 21, 0, 0, 0.9808292530117262, 5.2190035598283115, 3], \"758\": [1, 1, 3, 32, 0, 0, 0.27698678333503296, 3.619316511352639, 3], \"923\": [1, 2, 5, 25, 0, 0.46813621507094005, 1.5542091544863146, 4.5463070715077345, 2], \"1135\": [1, 2, 4, 14, 0, 0.054883456985091984, 0.20348759873326455, 1.3256036228723966, 2], \"213\": [3, 6, 10, 40, 0.13313574474596881, 0.4508337131380154, 0.9486721413771949, 3.2701944353909913, 1], \"316\": [2, 3, 9, 51, 0.16989903679539747, 0.3483066942682158, 1.55814461804655, 4.799228156407205, 1], \"1136\": [1, 2, 4, 12, 0, 0.1300531282481978, 0.44183275227903923, 1.791759469228055, 2], \"1140\": [0, 0, 1, 3, 0, 0, 0, 1.591893602783191, 4], \"795\": [4, 5, 9, 31, 0.5175824062288705, 0.7223768188748837, 1.4888968395992581, 3.7309887552925356, 1], \"1028\": [1, 2, 3, 37, 0, 0.1292117314800062, 0.27029032973991174, 3.8755020928072814, 2], \"1097\": [1, 1, 3, 16, 0, 0, 1.4384801142904609, 4.5264361454455875, 3], \"1150\": [0, 0, 1, 11, 0, 0, 0, 3.899950424193877, 4], \"618\": [0, 0, 3, 7, 0, 0, 1.6650077635889111, 3.1918471524802814, 3], \"620\": [1, 2, 2, 3, 0, 0.02853260603557098, 0.02853260603557098, 0.06309029496120634, 2], \"1121\": [4, 5, 6, 25, 0.5643439291313685, 0.781539909520582, 0.9955310761799437, 3.421681250082099, 1], \"1145\": [1, 2, 4, 12, 0, 0.6257058997644127, 1.499234772300486, 3.4752018287886095, 2], \"1153\": [1, 1, 1, 14, 0, 0, 0, 0.6149630250142464, 4], \"1154\": [1, 1, 1, 3, 0, 0, 0, 1.252762968495368, 4], \"1155\": [1, 1, 1, 5, 0, 0, 0, 0.25649914501509297, 4], \"698\": [0, 2, 8, 57, 0, 0.2664662333015083, 1.772491050362178, 5.517514208543206, 2], \"836\": [4, 5, 19, 33, 1.6945957207744073, 2.064468547082032, 4.585061350913606, 5.715381610499553, 1], \"1044\": [2, 5, 6, 30, 0.25452986513488046, 1.0337516544660688, 1.2833463918674481, 4.192943136966012, 1], \"685\": [1, 1, 2, 11, 0, 0, 0.42285685082003355, 2.8285585645112334, 3], \"975\": [1, 2, 3, 42, 0, 0.06174800706844705, 0.1339294025800255, 3.370366007836691, 2], \"1174\": [1, 1, 1, 12, 0, 0, 0, 2.1174168486331464, 4], \"1157\": [0, 0, 1, 2, 0, 0, 0, 0.9088557533866369, 4], \"1172\": [1, 1, 1, 6, 0, 0, 0, 2.4499903846817723, 4], \"1173\": [1, 1, 1, 17, 0, 0, 0, 4.578141513600172, 4], \"909\": [0, 2, 3, 15, 0, 0.31760375231683013, 0.6103748942760823, 3.092316068474225, 2], \"753\": [0, 0, 5, 30, 0, 0, 1.3541748116977779, 4.648691981040764, 3], \"1171\": [3, 4, 21, 108, 0.19085204667768627, 0.31760375231683013, 2.4251334955881756, 5.611387045949972, 1], \"214\": [0, 4, 5, 19, 0, 0.5543107357057295, 0.7689072264414809, 2.8742967423160333, 2], \"756\": [1, 1, 2, 6, 0, 0, 0.9808292530117262, 2.772588722239781, 3], \"948\": [3, 5, 11, 46, 0.11762891683046385, 0.29768733100637584, 0.9851541451435654, 3.412734822045702, 1], \"990\": [0, 0, 4, 29, 0, 0, 0.6632942174102642, 3.921390755431746, 3], \"1196\": [0, 1, 2, 10, 0, 0, 0.7472144018302211, 3.3596034843633182, 3], \"1213\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"630\": [1, 1, 2, 8, 0, 0, 0.8286926725561692, 3.0747819324865358, 3], \"735\": [7, 16, 39, 159, 0.4884696108187796, 1.4564005800433888, 3.0228671956528226, 5.786739657635268, 1], \"1184\": [0, 1, 6, 39, 0, 0, 1.7047480922384253, 5.252927664249226, 3], \"1222\": [0, 0, 1, 6, 0, 0, 0, 2.2587824703356527, 4], \"764\": [1, 1, 6, 22, 0, 0, 1.2729656758128876, 3.5715427474093944, 3], \"1231\": [0, 1, 3, 19, 0, 0, 0.24181316915676582, 2.482624412205534, 3], \"456\": [2, 2, 8, 53, 0.15656906069153992, 0.15656906069153992, 1.3115342859107813, 4.787703584748732, 1], \"1127\": [3, 7, 11, 53, 0.17486281150627858, 0.7131163149538747, 1.2722860393921978, 4.104939335829729, 1], \"1227\": [0, 0, 0, 5, 0, 0, 0, 1.6982334112172315, 4], \"1229\": [1, 2, 2, 11, 0, 0.42285685082003355, 0.42285685082003355, 2.8285585645112334, 2], \"719\": [2, 2, 23, 35, 0.4096756406445079, 0.4096756406445079, 4.186143432086656, 5.0502616374015314, 1], \"1009\": [0, 1, 2, 21, 0, 0, 0.33363937353690887, 3.7991536205671363, 3], \"1243\": [0, 1, 3, 23, 0, 0, 0.8187244879431477, 4.324225926786222, 3], \"998\": [0, 0, 3, 24, 0, 0, 0.401795379219202, 3.485794368945758, 3], \"262\": [2, 3, 9, 41, 0.15355773584309076, 0.31732144188640793, 1.4727004373862962, 4.259167198527496, 1], \"282\": [0, 1, 2, 10, 0, 0, 0.30774963550259016, 2.303485588327296, 3], \"554\": [1, 1, 2, 4, 0, 0, 0.3393540829961018, 0.9617082115649478, 3], \"587\": [2, 2, 2, 8, 0.9088557533866369, 0.9088557533866369, 0.9088557533866369, 3.2069531799112947, 1], \"1049\": [0, 0, 4, 10, 0, 0, 1.6722858160937641, 3.3331692955853027, 3], \"1205\": [1, 1, 3, 28, 0, 0, 0.19004360288786493, 2.9566045793301288, 3], \"1217\": [3, 4, 4, 24, 0.5897688261061103, 0.8873031950009028, 0.8873031950009028, 3.959451698999257, 1], \"1128\": [3, 4, 15, 48, 0.1845712765279701, 0.30774963550259016, 1.8029577945380846, 3.9682500547518518, 1], \"1263\": [2, 2, 3, 62, 0.3201675275962693, 0.3201675275962693, 0.6146755651184501, 5.896168518146929, 1], \"1016\": [3, 6, 10, 32, 0.4374678391943382, 1.1616252564968437, 1.9597512004671847, 4.1500791987443435, 1], \"1276\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"1277\": [0, 0, 0, 2, 0, 0, 0, 1.4053425560905852, 4], \"634\": [0, 0, 2, 6, 0, 0, 3.044522437723423, 5.198497031265826, 3], \"1117\": [0, 1, 4, 19, 0, 0, 1.499234772300486, 4.375483536084945, 3], \"1279\": [1, 1, 1, 3, 0, 0, 0, 1.1616252564968437, 4], \"1280\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1285\": [3, 4, 6, 25, 0.38776553100876343, 0.6109090823229733, 1.0628942060660305, 3.523259746937913, 1], \"1126\": [0, 0, 8, 140, 0, 0, 2.606314191043344, 8.104283076263567, 3], \"1295\": [0, 0, 0, 2, 0, 0, 0, 1.4053425560905852, 4], \"1116\": [0, 2, 2, 25, 0, 0.09576690509200843, 0.09576690509200843, 2.8156193312508466, 2], \"1250\": [9, 12, 22, 98, 0.6089550893395974, 0.9125570623221062, 1.7934833103720573, 4.609364277030122, 1], \"1301\": [0, 0, 3, 16, 0, 0, 0.4110989258264204, 2.73846797646685, 3], \"324\": [0, 0, 3, 16, 0, 0, 0.8873031950009028, 3.7289392534753407, 3], \"1023\": [3, 6, 22, 79, 0.20157261209600713, 0.638321469337774, 2.5657125706258497, 5.0489807754561715, 1], \"1300\": [0, 1, 5, 620, 0, 0, 1.1039742318094952, 9.161854621801092, 3], \"861\": [2, 2, 4, 16, 0.1451820098444979, 0.1451820098444979, 0.48550781578170077, 2.3978952727983707, 1], \"368\": [2, 3, 4, 26, 0.15355773584309076, 0.31732144188640793, 0.5091644938159141, 3.3690113414865426, 1], \"390\": [0, 0, 2, 10, 0, 0, 0.33647223662121295, 2.3978952727983707, 3], \"513\": [0, 0, 2, 15, 0, 0, 0.0146094636421581, 0.6031210289022256, 3], \"531\": [0, 0, 2, 3, 0, 0, 1.6945957207744073, 2.3978952727983707, 3], \"740\": [1, 1, 9, 28, 0, 0, 1.7047480922384253, 3.7967368499703498, 3], \"1207\": [0, 0, 5, 32, 0, 0, 1.0431824837287789, 4.334595840260228, 3], \"1319\": [6, 13, 23, 78, 0.37001835911241676, 1.1320438570610154, 2.025460690366688, 4.3395319110763015, 1], \"1316\": [0, 1, 2, 10, 0, 0, 0.6466271649250525, 3.166625134524323, 3], \"1366\": [1, 1, 6, 30, 0, 0, 2.854378155248259, 6.016378864610025, 3], \"665\": [0, 1, 5, 24, 0, 0, 1.0528027526368156, 3.783850363346729, 3], \"721\": [3, 6, 13, 74, 0.23859246225525735, 0.7313309675301041, 1.8016900374306557, 5.10565510331308, 1], \"772\": [1, 1, 2, 9, 0, 0, 0.28978070910870213, 2.054985245702309, 3], \"1165\": [0, 0, 3, 26, 0, 0, 1.55814461804655, 5.644268347123793, 3], \"1381\": [0, 0, 1, 5, 0, 0, 0, 2.9368917735310576, 4], \"453\": [1, 2, 4, 14, 0, 0.29849298855599654, 0.8718389693033213, 2.8927843043015486, 2], \"1390\": [2, 5, 5, 18, 0.033503971231401815, 0.19305309158387932, 0.19305309158387932, 1.32436458642864, 1], \"455\": [2, 3, 5, 22, 0.09138775158942865, 0.1950000150537256, 0.4688067410118894, 2.5320245727650703, 1], \"835\": [1, 1, 2, 6, 0, 0, 0.4795730802618863, 1.8777018990287797, 3], \"1386\": [0, 0, 0, 2, 0, 0, 0, 0.7328875092094594, 4], \"1397\": [1, 5, 53, 279, 0, 0.7223768188748837, 4.7548979188798395, 7.951458588329239, 2], \"539\": [0, 1, 3, 14, 0, 0, 0.7741883905630712, 3.275427994373122, 3], \"1087\": [1, 3, 3, 18, 0, 0.9162907318741551, 0.9162907318741551, 4.007333185232471, 2], \"1146\": [6, 12, 12, 41, 0.17675651236256293, 0.572877166643061, 0.572877166643061, 2.305373896689325, 1], \"1176\": [1, 1, 5, 18, 0, 0, 1.9597512004671847, 4.382331466256794, 3], \"1331\": [0, 1, 2, 25, 0, 0, 0.5245244681241525, 4.689130937536509, 3], \"1125\": [0, 0, 6, 32, 0, 0, 1.9178709289909204, 5.112958945080439, 3], \"1418\": [0, 3, 4, 9, 0, 0.7472144018302211, 1.090347778818216, 2.3978952727983707, 2], \"343\": [6, 6, 7, 19, 0.9289758914014707, 0.9289758914014707, 1.1265861407105158, 2.7949433677955855, 1], \"907\": [14, 23, 43, 95, 1.0202022344184585, 1.7556711000610898, 2.8754290966818785, 4.414907680893912, 1], \"1142\": [1, 1, 8, 48, 0, 0, 2.5707380856377813, 6.076992906731773, 3], \"1159\": [0, 0, 2, 16, 0, 0, 0.6690496289808848, 4.126366040789082, 3], \"1380\": [1, 5, 8, 25, 0, 1.3051309540126839, 2.0645462087333954, 4.222507628480641, 2], \"1410\": [1, 1, 2, 14, 0, 0, 1.2992829841302609, 4.880273476233012, 3], \"1371\": [1, 1, 10, 44, 0, 0, 1.1053237232560966, 3.6916533809966614, 3], \"1411\": [1, 2, 2, 16, 0, 0.07565042495900788, 0.07565042495900788, 1.7966590380692133, 2], \"1427\": [1, 2, 3, 15, 0, 0.4054651081081644, 0.7537718023763802, 3.371596911885865, 2], \"1002\": [0, 0, 3, 8, 0, 0, 1.252762968495368, 2.9326741375868544, 3], \"1228\": [0, 0, 2, 24, 0, 0, 0.7777045685880084, 5.138217653713134, 3], \"1308\": [0, 0, 3, 16, 0, 0, 1.252762968495368, 4.27820813936787, 3], \"1438\": [0, 0, 0, 4, 0, 0, 0, 1.4200325007517407, 4], \"87\": [0, 2, 3, 17, 0, 0.2646925542270822, 0.5198754592859085, 3.130872220246314, 2], \"1436\": [0, 0, 0, 7, 0, 0, 0, 3.58351893845611, 4], \"1400\": [0, 1, 10, 43, 0, 0, 2.483990479316221, 5.319035325715904, 3], \"1450\": [0, 0, 2, 9, 0, 0, 0.34228620648663277, 2.2262768999307214, 3], \"1288\": [1, 2, 2, 8, 0, 0.8286926725561692, 0.8286926725561692, 3.0747819324865358, 2], \"1454\": [0, 0, 0, 3, 0, 0, 0, 0.9264088620397397, 4], \"1370\": [0, 1, 2, 26, 0, 0, 0.20692071580732246, 3.6851368270304397, 3], \"1428\": [0, 0, 2, 14, 0, 0, 0.2629424662760252, 2.756004594224246, 3], \"1462\": [0, 0, 0, 2, 0, 0, 0, 0.08252102368800351, 4], \"1463\": [1, 3, 4, 19, 0, 0.6019569424953487, 0.9033634973726954, 3.529862211695926, 2], \"420\": [0, 0, 7, 31, 0, 0, 1.8632184332102, 4.680071494161209, 3], \"473\": [0, 0, 2, 11, 0, 0, 0.44183275227903923, 2.87951051846456, 3], \"476\": [0, 0, 2, 7, 0, 0, 0.19671029424605424, 1.2982943533033215, 3], \"1475\": [1, 1, 4, 23, 0, 0, 0.7472144018302211, 3.6306174904102924, 3], \"303\": [2, 3, 4, 11, 0.13397932096347895, 0.27958486221916157, 0.45328763125380567, 1.6746482508626435, 1], \"1249\": [1, 2, 6, 20, 0, 0.291910408561302, 1.398926108025791, 3.55243826312207, 2], \"1437\": [0, 4, 5, 30, 0, 0.7435780341868372, 1.0021520224805474, 4.144228818404391, 2], \"1476\": [2, 4, 5, 28, 0.14107859825990554, 0.4737843520856416, 0.666274162308849, 3.424163942782203, 1], \"584\": [4, 6, 9, 24, 0.06671919477965885, 0.14430753228907708, 0.29957740641335046, 1.2481320442241768, 1], \"1350\": [0, 1, 2, 11, 0, 0, 1.0360919316867756, 4.02535169073515, 3], \"1446\": [0, 0, 7, 34, 0, 0, 2.277267285009756, 5.334787046329428, 3], \"1481\": [0, 0, 0, 4, 0, 0, 0, 1.552005863348225, 4], \"1008\": [0, 0, 5, 20, 0, 0, 1.5310845981875851, 4.07704604340443, 3], \"1274\": [0, 1, 7, 33, 0, 0, 2.230560997603811, 5.223465962967706, 3], \"1478\": [3, 4, 7, 47, 0.4700036292457356, 0.7259370033829362, 1.4508328822574619, 4.999012454268263, 1], \"1349\": [0, 5, 5, 7, 0, 1.0479685558493548, 1.0479685558493548, 1.5324768712979722, 2], \"1482\": [0, 0, 4, 23, 0, 0, 0.27427904232444056, 2.4365848177485496, 3], \"327\": [0, 2, 3, 9, 0, 0.6576404921030354, 1.1291490125281913, 2.987559431798117, 2], \"841\": [1, 1, 2, 3, 0, 0, 0.3856624808119847, 0.7221347174331976, 3], \"957\": [0, 0, 4, 15, 0, 0, 0.3393540829961018, 1.8993901334204204, 3], \"1511\": [0, 0, 1, 20, 0, 0, 0, 4.836281906951478, 4], \"1520\": [0, 0, 0, 2, 0, 0, 0, 1.252762968495368, 4], \"603\": [0, 0, 3, 23, 0, 0, 0.9694005571881035, 4.5765836382266745, 3], \"916\": [2, 3, 3, 9, 0.4321333551903257, 0.7958013346200287, 0.7958013346200287, 2.4803919694334735, 1], \"1129\": [2, 3, 7, 19, 0.2595111954850846, 0.5108256237659907, 1.5324768712979722, 3.3229021175128906, 1], \"1524\": [0, 1, 4, 8, 0, 0, 1.363304842895192, 2.5365786603323213, 3], \"1525\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"937\": [0, 6, 13, 72, 0, 0.8187244879431477, 1.9388429818322208, 5.2124065361035905, 2], \"1218\": [1, 1, 2, 7, 0, 0, 0.3933437475758196, 1.9320451089181416, 3], \"1254\": [2, 2, 5, 19, 0.19105523676270922, 0.19105523676270922, 0.8397506547518208, 2.995732273553991, 1], \"424\": [6, 7, 22, 79, 0.3123250091771612, 0.40478599093435563, 1.7798078159511026, 4.1675016411438115, 1], \"1465\": [1, 1, 3, 19, 0, 0, 1.084013489246957, 4.375483536084945, 3], \"1469\": [3, 3, 4, 14, 0.37948962170490375, 0.37948962170490375, 0.5991182309116689, 2.402546443974101, 1], \"1551\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1426\": [0, 1, 2, 10, 0, 0, 0.20800057121164617, 1.9140282541556966, 3], \"201\": [5, 5, 7, 22, 0.38282263135840455, 0.38282263135840455, 0.6492888646599129, 2.3055657211321834, 1], \"1221\": [2, 2, 2, 7, 0.30774963550259016, 0.30774963550259016, 0.30774963550259016, 1.6890647332228734, 1], \"1238\": [0, 1, 3, 9, 0, 0, 2.505525936990736, 4.627420794922911, 3], \"1267\": [0, 1, 2, 9, 0, 0, 0.41397579777607296, 2.4322629163025784, 3], \"1330\": [2, 4, 4, 10, 0.5543107357057295, 1.376991968457577, 1.376991968457577, 2.9713636825370333, 1], \"1567\": [3, 5, 5, 13, 0.0876900332762814, 0.22680283573899918, 0.22680283573899918, 1.0009912263020704, 1], \"1568\": [3, 4, 4, 9, 0.9473813189441862, 1.3368460857059095, 1.3368460857059095, 2.7219877089459916, 1], \"197\": [2, 4, 8, 28, 0.01821543989134118, 0.07095173597228444, 0.2578291093020998, 1.5266954853640464, 1], \"602\": [0, 2, 2, 8, 0, 0.12062798778861472, 0.12062798778861472, 1.1155618469818829, 2], \"1523\": [0, 1, 2, 5, 0, 0, 0.2529118727100632, 1.0291054104877544, 3], \"220\": [1, 1, 3, 19, 0, 0, 0.5020919437972361, 3.301723958201108, 3], \"389\": [1, 3, 6, 16, 0, 0.12412606741381713, 0.4243747624654565, 1.560074896992035, 2], \"677\": [1, 2, 2, 3, 0, 0.6466271649250525, 0.6466271649250525, 1.11365016603265, 2], \"1278\": [1, 1, 4, 18, 0, 0, 0.2664662333015083, 1.971745816384228, 3], \"1421\": [0, 1, 2, 9, 0, 0, 0.07120444629179161, 0.9140742551632632, 3], \"1579\": [1, 1, 3, 9, 0, 0, 1.591893602783191, 3.589539426237693, 3], \"1414\": [1, 1, 11, 31, 0, 0, 2.4207447055707143, 4.412078979740284, 3], \"1492\": [1, 3, 9, 25, 0, 0.6931471805599453, 2.302585092994046, 4.254824377101007, 2], \"1304\": [1, 1, 6, 20, 0, 0, 1.7578579175523736, 3.9951379121386528, 3], \"1474\": [3, 6, 10, 32, 0.33647223662121295, 0.9555114450274365, 1.6945957207744073, 3.83969123267568, 1], \"1613\": [0, 1, 1, 8, 0, 0, 0, 3.106080330722856, 4], \"1619\": [4, 4, 6, 12, 0.8241754429663495, 0.8241754429663495, 1.355835153635182, 2.5273273656719524, 1], \"1623\": [0, 0, 0, 11, 0, 0, 0, 4.908561552145052, 4], \"1528\": [7, 12, 14, 34, 0.31144666139283217, 0.7293949709522863, 0.9008098485715145, 2.263889223443458, 1], \"1624\": [0, 0, 1, 6, 0, 0, 0, 3.959451698999257, 4], \"1626\": [0, 2, 2, 7, 0, 0.21825356602001797, 0.21825356602001797, 1.3832409236330003, 2], \"1457\": [1, 2, 10, 178, 0, 0.4978384282391795, 2.8407748167567926, 8.389192072293984, 2], \"1634\": [0, 0, 0, 2, 0, 0, 0, 1.4053425560905852, 4], \"1639\": [0, 0, 0, 3, 0, 0, 0, 1.1962507582320256, 4], \"922\": [0, 0, 3, 12, 0, 0, 0.682218110027755, 2.8125407732514964, 3], \"1185\": [3, 3, 4, 14, 0.5858181603294468, 0.5858181603294468, 0.8820839764726192, 2.909364293723439, 1], \"1374\": [0, 0, 2, 3, 0, 0, 0.5623075796011341, 0.9925527167077854, 3], \"1620\": [2, 3, 6, 17, 0.39730179746900346, 0.7407752295491999, 1.684590634813445, 3.5902711585733966, 1], \"1644\": [0, 1, 1, 7, 0, 0, 0, 2.791931685082912, 4], \"755\": [0, 3, 5, 16, 0, 0.9925527167077854, 1.7434408919572473, 3.8979623519684905, 2], \"930\": [1, 2, 6, 28, 0, 0.42285685082003355, 1.7469089030627032, 4.645907966436125, 2], \"1078\": [3, 4, 4, 11, 0.20112063922677242, 0.33363937353690887, 0.33363937353690887, 1.385055970868744, 1], \"1258\": [3, 5, 5, 11, 0.030438602876830676, 0.08236460845284074, 0.08236460845284074, 0.3474983521338278, 1], \"1654\": [1, 1, 2, 17, 0, 0, 0.6466271649250525, 4.199932324784666, 3], \"1603\": [2, 5, 12, 85, 0.04202298977484789, 0.2376303832804523, 0.9341559454320248, 4.363371953385702, 1], \"1662\": [1, 1, 1, 2, 0, 0, 0, 1.349926716949016, 4], \"1451\": [0, 2, 6, 18, 0, 0.49159426183810306, 1.9042374526547454, 3.959451698999257, 2], \"933\": [1, 2, 2, 16, 0, 0.28978070910870213, 0.28978070910870213, 3.1140753764330795, 2], \"946\": [0, 3, 3, 11, 0, 0.6716409753389817, 0.6716409753389817, 2.6298969602165942, 2], \"951\": [1, 1, 2, 5, 0, 0, 0.8668106746107854, 2.2639159518348917, 3], \"1547\": [1, 1, 3, 15, 0, 0, 0.4130123137435473, 2.6235150944658434, 3], \"1672\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1679\": [1, 2, 2, 11, 0, 1.0986122886681096, 1.0986122886681096, 4.119037174812473, 2], \"932\": [1, 2, 3, 14, 0, 0.1656671218888174, 0.34032580593720296, 2.2853197845207367, 2], \"939\": [0, 0, 2, 7, 0, 0, 2.03688192726104, 4.4148164574968725, 3], \"1178\": [0, 0, 2, 4, 0, 0, 0.2646925542270822, 0.7939518796819109, 3], \"1484\": [0, 0, 2, 11, 0, 0, 0.4737843520856416, 2.9618307218783095, 3], \"1635\": [5, 5, 9, 29, 0.23361485118150516, 0.23361485118150516, 0.6166071034376109, 2.2877385848770513, 1], \"1694\": [3, 3, 3, 6, 0.8690378470236095, 0.8690378470236095, 0.8690378470236095, 1.8777018990287797, 1], \"1538\": [1, 1, 9, 17, 0, 0, 1.83961549040569, 2.990161228504536, 3], \"1544\": [0, 1, 3, 22, 0, 0, 0.1357502538475314, 2.1769156290971616, 3], \"1708\": [1, 3, 28, 78, 0, 0.3483066942682158, 3.586088360845341, 5.644268347123793, 2], \"811\": [0, 0, 2, 9, 0, 0, 0.7191226669632059, 3.1052944760655175, 3], \"1191\": [0, 0, 2, 8, 0, 0, 1.209837923778334, 3.6544706744283944, 3], \"1360\": [4, 4, 5, 13, 0.9315582040049435, 0.9315582040049435, 1.2249060139924017, 2.847812143477369, 1], \"1582\": [1, 4, 9, 24, 0, 0.5790338737925242, 1.6035381903069121, 3.3753766820404127, 2], \"1676\": [0, 1, 2, 4, 0, 0, 1.1700712526502546, 2.2914117923959205, 3], \"1685\": [0, 0, 2, 4, 0, 0, 1.6945957207744073, 2.9326741375868544, 3], \"1718\": [1, 1, 1, 8, 0, 0, 0, 2.833213344056216, 4], \"446\": [2, 3, 3, 7, 0.48550781578170077, 0.8780695190539574, 0.8780695190539574, 2.158281603387612, 1], \"546\": [0, 1, 2, 7, 0, 0, 1.252762968495368, 3.453947947047684, 3], \"1447\": [0, 0, 4, 17, 0, 0, 1.4350845252893227, 4.074141854904581, 3], \"1723\": [0, 1, 1, 5, 0, 0, 0, 2.3978952727983707, 4], \"1725\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"1119\": [2, 4, 10, 566, 0.2124355370417375, 0.6661590358422984, 1.934005246548995, 9.023061165730068, 1], \"1580\": [3, 8, 10, 48, 0.12193705984360334, 0.6534652659687645, 0.8923759147051952, 3.53219193771828, 1], \"1604\": [1, 2, 4, 55, 0, 0.1541506798272583, 0.5108256237659907, 4.844515116640309, 2], \"953\": [1, 2, 3, 13, 0, 0.13534134786976212, 0.2822324676842163, 1.9633554349899618, 2], \"984\": [0, 2, 6, 16, 0, 0.3030501026800949, 1.4317075697795925, 3.1635688974265785, 2], \"1170\": [2, 5, 7, 21, 0.27380672595816385, 1.0880581009894195, 1.5806819374467964, 3.5758341932053725, 1], \"1320\": [2, 3, 20, 56, 0.14897379164772453, 0.30854721091574266, 2.836986043650104, 4.843744272686173, 1], \"1736\": [0, 0, 8, 28, 0, 0, 4.493630479576695, 7.02197642307216, 3], \"745\": [1, 5, 7, 14, 0, 0.39507540425902854, 0.6676305851781218, 1.568292868322924, 2], \"910\": [0, 0, 2, 13, 0, 0, 0.42285685082003355, 3.145739040877574, 3], \"1352\": [4, 4, 8, 54, 0.5026288565618121, 0.5026288565618121, 1.2843294344632024, 4.7876617963493295, 1], \"820\": [0, 0, 4, 8, 0, 0, 0.5334746755483791, 1.3400889592991392, 3], \"962\": [0, 0, 9, 114, 0, 0, 3.18398856586776, 8.069881806210997, 3], \"1107\": [0, 0, 5, 42, 0, 0, 2.0028650419827856, 6.1165711273763765, 3], \"1261\": [0, 0, 2, 7, 0, 0, 1.1700712526502546, 3.340109689682317, 3], \"1754\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1759\": [0, 0, 1, 2, 0, 0, 0, 1.791759469228055, 4], \"1763\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1168\": [0, 4, 5, 13, 0, 0.4931402753644507, 0.691153161953081, 2.0455056440372266, 2], \"1767\": [1, 1, 1, 6, 0, 0, 0, 2.6288008294480694, 4], \"1768\": [0, 0, 10, 49, 0, 0, 4.803476241082586, 7.857095887081608, 3], \"1306\": [0, 1, 2, 11, 0, 0, 0.3452699473247421, 2.600778735120839, 3], \"1774\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1299\": [0, 1, 4, 11, 0, 0, 1.791759469228055, 3.6587423596936977, 3], \"526\": [0, 1, 2, 7, 0, 0, 0.5968160716215132, 2.3978952727983707, 3], \"1487\": [0, 0, 2, 10, 0, 0, 0.8472978603872036, 3.5361166995615263, 3], \"1800\": [0, 0, 3, 3, 0, 0, 1.83961549040569, 1.83961549040569, 3], \"1212\": [3, 3, 11, 31, 0.2813443418672318, 0.2813443418672318, 1.6804984402728165, 3.5749585357097944, 1], \"1499\": [0, 0, 6, 13, 0, 0, 2.5347203555002196, 4.016673591726393, 3], \"1801\": [5, 6, 6, 14, 0.23672610308007871, 0.325422400434628, 0.325422400434628, 1.129470277028015, 1], \"1816\": [1, 1, 1, 6, 0, 0, 0, 1.8152899666382492, 4], \"1241\": [0, 2, 3, 13, 0, 0.19966567025192705, 0.4036217896138752, 2.335731295008264, 2], \"1402\": [0, 0, 2, 19, 0, 0, 0.42285685082003355, 3.8815637979434374, 3], \"1646\": [1, 2, 6, 28, 0, 0.07847161544149522, 0.5508309583796899, 2.833213344056216, 2], \"1792\": [0, 0, 2, 8, 0, 0, 0.8873031950009028, 3.172083663361442, 3], \"1825\": [0, 0, 3, 10, 0, 0, 1.591893602783191, 3.795000550022477, 3], \"1761\": [0, 1, 5, 9, 0, 0, 1.2599520720678372, 2.217225244042889, 3], \"1790\": [1, 1, 6, 19, 0, 0, 0.7313309675301041, 2.4688097227458257, 3], \"1829\": [0, 0, 26, 224, 0, 0, 3.871852153546525, 8.041658850622394, 3], \"1835\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1272\": [0, 0, 2, 8, 0, 0, 0.6466271649250525, 2.743768283704289, 3], \"1498\": [1, 1, 2, 6, 0, 0, 0.245122458032985, 1.252762968495368, 3], \"1776\": [3, 4, 4, 15, 0.6563976383512038, 0.9743651063918369, 0.9743651063918369, 3.186182217347641, 1], \"528\": [0, 0, 2, 21, 0, 0, 0.16430305129127631, 3.0295296531372817, 3], \"1842\": [0, 0, 0, 8, 0, 0, 0, 3.546284555336067, 4], \"728\": [0, 0, 2, 7, 0, 0, 0.18149202543157925, 1.234834915708594, 3], \"1692\": [0, 3, 3, 10, 0, 1.9459101490553132, 1.9459101490553132, 4.214593690373678, 2], \"1771\": [0, 0, 2, 63, 0, 0, 1.4053425560905852, 7.874211273650167, 3], \"1836\": [0, 0, 0, 2, 0, 0, 0, 2.662587827025453, 4], \"718\": [1, 2, 3, 26, 0, 0.291910408561302, 0.5668534552356532, 4.065398566526547, 2], \"1298\": [0, 1, 2, 9, 0, 0, 0.4572413776318843, 2.5446783930879175, 3], \"1791\": [1, 3, 10, 30, 0, 0.11686434013931092, 0.8660118568185772, 2.595007976138935, 2], \"1309\": [0, 0, 2, 8, 0, 0, 1.007640510462383, 3.361280774256713, 3], \"1575\": [0, 1, 3, 131, 0, 0, 1.0698333241180664, 8.053084577543405, 3], \"1741\": [0, 1, 2, 18, 0, 0, 0.35454501768090746, 3.5686332810407353, 3], \"1874\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"648\": [0, 0, 2, 6, 0, 0, 0.4321333551903257, 1.7689794408962352, 3], \"1549\": [1, 1, 12, 27, 0, 0, 2.921061291157378, 4.4987250715254605, 3], \"1700\": [2, 2, 4, 8, 0.3933437475758196, 0.3933437475758196, 1.0742208355439504, 2.164568614362167, 1], \"1713\": [0, 0, 2, 13, 0, 0, 0.12796988096337653, 1.9121935195027286, 3], \"1770\": [3, 3, 3, 13, 0.7812544480702122, 0.7812544480702122, 0.7812544480702122, 3.145739040877574, 1], \"1883\": [0, 0, 2, 11, 0, 0, 0.8472978603872036, 3.721669276936927, 3], \"1887\": [0, 0, 0, 8, 0, 0, 0, 3.6544706744283944, 4], \"1888\": [0, 0, 0, 4, 0, 0, 0, 0.9679921062510455, 4], \"1891\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1892\": [0, 0, 0, 9, 0, 0, 0, 1.394686018756139, 4], \"550\": [0, 1, 14, 49, 0, 0, 3.8792173395592537, 6.399010821419971, 3], \"1584\": [0, 3, 3, 10, 0, 0.5491078103370076, 0.5491078103370076, 2.211574599366026, 2], \"1669\": [0, 3, 7, 22, 0, 0.676886659688165, 1.8355876931972364, 3.9711031080804826, 2], \"1850\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1693\": [1, 3, 3, 18, 0, 0.5198754592859085, 0.5198754592859085, 3.240459396535375, 2], \"1706\": [3, 3, 4, 15, 0.35667494393873234, 0.35667494393873234, 0.5663954749208014, 2.46080909820894, 1], \"1886\": [0, 1, 2, 5, 0, 0, 0.6690496289808848, 1.9390841839849136, 3], \"1919\": [0, 0, 0, 6, 0, 0, 0, 4.795790545596741, 4], \"1332\": [4, 4, 6, 14, 1.6506808709681495, 1.6506808709681495, 2.348865845558052, 3.962315799482113, 1], \"1926\": [1, 1, 2, 4, 0, 0, 1.209837923778334, 2.342936388517613, 3], \"1917\": [0, 1, 1, 14, 0, 0, 0, 4.37449836825309, 4], \"1932\": [0, 0, 0, 2, 0, 0, 0, 0.8668106746107854, 4], \"843\": [1, 1, 5, 13, 0, 0, 2.176171168138387, 3.9855057821879494, 3], \"1937\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1253\": [0, 0, 2, 12, 0, 0, 0.3746934494414107, 2.854378155248259, 3], \"1512\": [0, 0, 2, 12, 0, 0, 0.6576404921030354, 3.54062222644437, 3], \"1948\": [0, 0, 0, 7, 0, 0, 0, 1.3741730005875459, 4], \"1851\": [1, 4, 4, 12, 0, 1.9352717508502575, 1.9352717508502575, 3.9951379121386528, 2], \"1958\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"806\": [2, 3, 5, 16, 0.2421400520048648, 0.48022518331727365, 0.9978075895461441, 2.919620187022397, 1], \"883\": [2, 3, 4, 15, 0.10058723690516862, 0.21357410029805904, 0.3529643645421967, 1.9390841839849136, 1], \"1296\": [1, 1, 2, 7, 0, 0, 0.8873031950009028, 2.917770732084279, 3], \"1964\": [0, 0, 0, 5, 0, 0, 0, 3.3596034843633182, 4], \"999\": [0, 1, 2, 9, 0, 0, 1.2992829841302609, 4.007333185232471, 3], \"1731\": [0, 0, 2, 3, 0, 0, 0.0008420166795770327, 0.0018935414872973623, 3], \"1925\": [3, 3, 3, 6, 0.9264088620397397, 0.9264088620397397, 0.9264088620397397, 1.9603334760164182, 1], \"1956\": [6, 6, 6, 13, 1.4663370687934272, 1.4663370687934272, 1.4663370687934272, 2.812298987907346, 1], \"1957\": [0, 0, 0, 3, 0, 0, 0, 1.890850371872286, 4], \"696\": [0, 0, 7, 104, 0, 0, 1.8919341478535157, 7.126262813200257, 3], \"1206\": [2, 2, 3, 11, 0.42285685082003355, 0.42285685082003355, 0.7812544480702122, 2.8285585645112334, 1], \"1997\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"1753\": [1, 1, 3, 22, 0, 0, 0.3860812412871159, 3.271100622444689, 3], \"1978\": [0, 1, 2, 4, 0, 0, 1.791759469228055, 3.044522437723423, 3], \"2003\": [0, 0, 1, 2, 0, 0, 0, 2.1972245773362196, 4], \"474\": [0, 0, 2, 8, 0, 0, 0.16989903679539747, 1.376991968457577, 3], \"1797\": [1, 1, 2, 6, 0, 0, 0.1147388932751553, 0.7391835202482866, 3], \"1993\": [0, 1, 3, 4, 0, 0, 0.8347976976229722, 1.1996154989569803, 3], \"1737\": [0, 1, 3, 8, 0, 0, 0.29334780998745824, 1.2308802572458604, 3], \"1966\": [2, 7, 8, 29, 0.14842000511827327, 1.085189268335969, 1.269760544863939, 3.5450090836942345, 1], \"2001\": [1, 1, 2, 4, 0, 0, 0.538996500732687, 1.349926716949016, 3], \"2015\": [0, 0, 0, 4, 0, 0, 0, 1.0434802179733935, 4], \"2018\": [0, 0, 0, 5, 0, 0, 0, 5.5254529391317835, 4], \"1806\": [2, 2, 2, 9, 0.15355773584309076, 0.15355773584309076, 0.15355773584309076, 1.4727004373862962, 1], \"1675\": [1, 2, 3, 9, 0, 0.3452699473247421, 0.6563976383512038, 2.235431471611754, 2], \"1849\": [1, 1, 2, 4, 0, 0, 0.8109302162163288, 1.791759469228055, 3], \"1962\": [1, 1, 8, 17, 0, 0, 2.342936388517613, 3.7727609380946383, 3], \"1179\": [1, 1, 4, 10, 0, 0, 0.27909399238798177, 1.1026283583229997, 3], \"1895\": [0, 0, 2, 7, 0, 0, 0.38193461069797024, 1.9017603644423835, 3], \"783\": [0, 1, 3, 17, 0, 0, 0.0680020237096062, 1.1815976763019542, 3], \"1894\": [23, 30, 30, 65, 1.2786720484137417, 1.688175732629292, 1.688175732629292, 3.0773416123126585, 1], \"924\": [2, 2, 3, 13, 0.41836851294407224, 0.41836851294407224, 0.7741883905630712, 3.1332330504660124, 1], \"1970\": [2, 3, 3, 8, 0.20067069546215116, 0.4054651081081644, 0.4054651081081644, 1.5163474893680884, 1], \"363\": [0, 1, 4, 13, 0, 0, 1.2872888373444415, 3.3570684681125407, 3], \"2047\": [1, 2, 3, 9, 0, 0.20692071580732246, 0.41689380393178715, 1.7325705978377244, 2], \"2051\": [0, 0, 0, 5, 0, 0, 0, 2.650272400435399, 4], \"326\": [0, 1, 3, 13, 0, 0, 0.09143420595963188, 1.0288592499077607, 3], \"1456\": [2, 3, 4, 10, 0.3101549283038395, 0.5978370007556205, 0.8979415932059586, 2.3116349285139637, 1], \"1477\": [2, 3, 4, 9, 0.4013413909243023, 0.7472144018302211, 1.090347778818216, 2.3978952727983707, 1], \"1677\": [3, 3, 4, 10, 0.27871340246902054, 0.27871340246902054, 0.4519851237430572, 1.5198257537444133, 1], \"1690\": [5, 7, 31, 70, 1.4766784225881597, 2.0229848330121785, 4.8413595589848875, 6.49701954875886, 1], \"610\": [2, 3, 3, 8, 0.08252102368800351, 0.1769307081590782, 0.1769307081590782, 0.865563208364497, 1], \"2058\": [2, 4, 4, 19, 0.03157326191609021, 0.1207191114343526, 0.1207191114343526, 1.3596802966657084, 1], \"959\": [0, 0, 2, 10, 0, 0, 0.6576404921030354, 3.18865633930721, 3], \"2054\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2012\": [1, 1, 3, 6, 0, 0, 0.5596157879354227, 1.3862943611198906, 3], \"2084\": [1, 1, 3, 9, 0, 0, 1.55814461804655, 3.548179572010801, 3], \"2087\": [2, 2, 2, 6, 0.036235848454044865, 0.036235848454044865, 0.036235848454044865, 0.28675913745318005, 1], \"2072\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2086\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"797\": [1, 1, 5, 10, 0, 0, 1.7434408919572473, 2.989106598581854, 3], \"986\": [0, 0, 3, 7, 0, 0, 1.2939210409888755, 2.735131159704881, 3], \"1464\": [0, 0, 3, 7, 0, 0, 0.8780695190539574, 2.158281603387612, 3], \"2094\": [0, 0, 3, 9, 0, 0, 0.581921545449721, 2.092513623247189, 3], \"2080\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1220\": [0, 3, 4, 5, 0, 1.591893602783191, 2.0739919369122712, 2.47397757925581, 2], \"491\": [0, 2, 3, 10, 0, 0.49159426183810306, 0.8873031950009028, 2.825715651950415, 2], \"896\": [0, 1, 3, 6, 0, 0, 0.6418538861723948, 1.5260563034950494, 3], \"1407\": [1, 2, 2, 6, 0, 0.2561688067457042, 0.2561688067457042, 1.2886091002685038, 2], \"1585\": [4, 10, 14, 88, 0.3746934494414107, 1.3457090810048122, 1.882237054194171, 5.3981627015177525, 1], \"1651\": [1, 3, 3, 9, 0, 0.23607730009877803, 0.23607730009877803, 1.2227306813964929, 2], \"1798\": [1, 1, 4, 15, 0, 0, 0.2161812104912073, 1.480163766773572, 3], \"1951\": [0, 2, 3, 20, 0, 0.23780070911418325, 0.47251724598605155, 3.326676314387409, 2], \"2048\": [3, 4, 5, 25, 0.10318423623523076, 0.17666954336260812, 0.2638495970836828, 2.145733506520149, 1], \"2108\": [0, 1, 1, 3, 0, 0, 0, 1.55814461804655, 4], \"2125\": [0, 0, 0, 2, 0, 0, 0, 1.6094379124341003, 4], \"927\": [0, 0, 2, 7, 0, 0, 0.8668106746107854, 2.8846080531794147, 3], \"1286\": [3, 3, 4, 9, 1.2144441041932312, 1.2144441041932312, 1.6506808709681495, 3.1052944760655175, 1], \"1574\": [3, 4, 7, 13, 0.320742934712669, 0.5141813316129631, 1.1180303745252111, 2.0919678014990164, 1], \"1807\": [0, 1, 4, 10, 0, 0, 0.6466271649250525, 1.8993901334204204, 3], \"1814\": [1, 2, 4, 9, 0, 0.8286926725561692, 1.8182862235614836, 3.300604455487802, 2], \"1909\": [1, 1, 3, 9, 0, 0, 0.25562013999211797, 1.2868494314141798, 3], \"2116\": [1, 1, 3, 6, 0, 0, 0.3184537311185346, 0.9162907318741551, 3], \"2138\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"527\": [0, 0, 2, 4, 0, 0, 2.3978952727983707, 3.713572066704308, 3], \"2134\": [0, 2, 2, 6, 0, 0.44685032427101873, 0.44685032427101873, 1.8034282130624324, 2], \"2155\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2021\": [2, 3, 4, 11, 0.12555653398976382, 0.2631357702277599, 0.4286066366698587, 1.6187588853771626, 1], \"2035\": [1, 1, 2, 7, 0, 0, 0.3513978868378886, 1.8177349556313156, 3], \"2038\": [2, 2, 5, 9, 0.14107859825990554, 0.14107859825990554, 0.666274162308849, 1.403196171922494, 1], \"2120\": [0, 0, 5, 18, 0, 0, 3.720612309382615, 6.293419278846481, 3], \"512\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"972\": [4, 5, 11, 22, 1.209837923778334, 1.5425436776040702, 2.9335439297613735, 4.279114100654695, 1], \"1327\": [2, 2, 2, 6, 0.07637297878457401, 0.07637297878457401, 0.07637297878457401, 0.538996500732687, 1], \"1612\": [1, 1, 3, 4, 0, 0, 1.252762968495368, 1.6945957207744073, 3], \"2165\": [15, 20, 51, 78, 2.5216283271892377, 2.707199770907916, 5.058197175633566, 5.937241171479237, 1], \"441\": [1, 2, 5, 18, 0, 0.08607460877124298, 0.44583756339855196, 2.1139515224571968, 2], \"1762\": [4, 4, 13, 23, 0.40755934971127916, 0.40755934971127916, 1.842843098031443, 2.869898045934249, 1], \"2163\": [1, 1, 1, 2, 0, 0, 0, 0.5245244681241525, 4], \"1514\": [0, 2, 3, 6, 0, 0.22067136216882066, 0.44183275227903923, 1.1700712526502546, 2], \"1508\": [0, 2, 2, 6, 0, 0.37117603462953225, 0.37117603462953225, 1.6183865180101145, 2], \"1878\": [3, 9, 11, 23, 0.09275439349224782, 0.6284646605741161, 0.8358159654339061, 1.904007657401304, 1], \"2197\": [0, 0, 2, 2, 0, 0, 1.791759469228055, 1.791759469228055, 3], \"1621\": [0, 2, 2, 14, 0, 0.4054651081081644, 0.4054651081081644, 3.2386784521643803, 2], \"1305\": [2, 3, 6, 10, 0.33363937353690887, 0.6371529112053704, 1.5182775261553891, 2.3888536198814205, 1], \"2205\": [0, 0, 9, 13, 0, 0, 4.115201177346641, 4.875197323201151, 3], \"2217\": [0, 0, 7, 22, 0, 0, 2.3978952727983707, 4.602922764468019, 3], \"2227\": [0, 1, 68, 138, 0, 0, 5.3248180982561, 7.2378306655292315, 3], \"2207\": [0, 0, 16, 17, 0, 0, 4.7786040961262986, 4.9317295060222, 3], \"1111\": [0, 2, 4, 13, 0, 0.7621400520468967, 1.717651497074333, 3.8976342679760463, 2], \"2233\": [0, 0, 4, 9, 0, 0, 2.5199979695992702, 4.075113200294213, 3], \"2234\": [0, 1, 2, 6, 0, 0, 1.1700712526502546, 3.044522437723423, 3], \"2232\": [0, 0, 2, 3, 0, 0, 0.5623075796011341, 0.9925527167077854, 3], \"1559\": [0, 1, 3, 8, 0, 0, 0.38776553100876343, 1.4744016286301573, 3], \"2117\": [0, 0, 3, 8, 0, 0, 0.760450862456052, 2.2084135052540255, 3], \"2237\": [0, 1, 2, 3, 0, 0, 0.6061358035703156, 1.0560526742493137, 3], \"2244\": [1, 1, 2, 12, 0, 0, 0.3101549283038395, 2.645529844120876, 3], \"2259\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1423\": [0, 1, 2, 6, 0, 0, 0.6931471805599453, 2.302585092994046, 3], \"2206\": [1, 2, 2, 10, 0, 0.24067603007585034, 0.24067603007585034, 2.054472530350634, 2], \"2220\": [2, 2, 12, 21, 0.36101334553733055, 0.36101334553733055, 2.8125407732514964, 3.8904884444176373, 1], \"500\": [1, 2, 2, 5, 0, 0.2295744416445002, 0.2295744416445002, 0.9604619501872924, 2], \"506\": [1, 4, 6, 10, 0, 0.8241754429663495, 1.355835153635182, 2.1972245773362196, 2], \"1515\": [0, 0, 2, 4, 0, 0, 1.0663514264498883, 2.1539745935424026, 3], \"2231\": [0, 2, 2, 6, 0, 0.08994823666293948, 0.08994823666293948, 0.6135945488579916, 2], \"2236\": [0, 1, 27, 41, 0, 0, 2.5795071423318396, 3.3710943957050374, 3], \"2263\": [1, 3, 3, 8, 0, 1.591893602783191, 1.591893602783191, 3.361280774256713, 2], \"649\": [1, 3, 3, 8, 0, 0.20909179785855941, 0.20909179785855941, 0.9759725168987764, 2], \"1988\": [2, 2, 2, 4, 0.34228620648663277, 0.34228620648663277, 0.34228620648663277, 0.9679921062510455, 1], \"2249\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2271\": [2, 3, 5, 17, 0.06222847139840936, 0.1349349016268428, 0.33738903705214907, 1.729679133478374, 1], \"1813\": [2, 2, 3, 8, 0.4274440148269396, 0.4274440148269396, 0.7884573603642702, 2.2547944291576973, 1], \"2132\": [1, 2, 2, 3, 0, 0.5175824062288705, 0.5175824062288705, 0.9264088620397397, 2], \"2188\": [0, 1, 2, 5, 0, 0, 0.5790338737925242, 1.7752846320245501, 3], \"2264\": [0, 0, 1, 5, 0, 0, 0, 0.7664319041284378, 4], \"2265\": [0, 0, 1, 2, 0, 0, 0, 0.4369283775639494, 4], \"1915\": [2, 2, 3, 4, 0.3856624808119847, 0.3856624808119847, 0.7221347174331976, 1.0586069540544105, 1], \"1985\": [0, 0, 7, 9, 0, 0, 3.340109689682317, 3.828641396489095, 3], \"2213\": [3, 3, 3, 5, 0.14378789279171172, 0.14378789279171172, 0.14378789279171172, 0.35736199308977074, 1], \"2313\": [0, 0, 1, 3, 0, 0, 0, 2.9444389791664403, 4], \"458\": [2, 2, 5, 9, 0.9315582040049435, 0.9315582040049435, 2.362304327695668, 3.4705320750632196, 1], \"815\": [2, 2, 4, 10, 0.5108256237659907, 0.5108256237659907, 1.2992829841302609, 2.8716796248840124, 1], \"1632\": [0, 0, 5, 11, 0, 0, 2.2335922215070942, 3.721669276936927, 3], \"1356\": [0, 0, 27, 35, 0, 0, 5.64352436263972, 6.7064547555903795, 3], \"1461\": [5, 5, 6, 10, 2.0724728723637424, 2.064468547082032, 2.3978952727983707, 3.3596034843633182, 1], \"1952\": [0, 1, 2, 2, 0, 0, 0.7939518796819109, 0.7939518796819109, 3], \"2167\": [1, 1, 2, 2, 0, 0, 1.6945957207744073, 1.6945957207744073, 3], \"2294\": [0, 1, 3, 5, 0, 0, 0.9808292530117262, 1.7280436548419473, 3], \"2305\": [0, 0, 5, 6, 0, 0, 1.8086232752800597, 2.1218948579321752, 3], \"2307\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1630\": [0, 0, 5, 20, 0, 0, 0.7591051483517428, 2.953962860677696, 3], \"1772\": [0, 0, 2, 2, 0, 0, 1.5339303599259553, 1.5339303599259553, 3], \"1918\": [2, 2, 3, 6, 0.6157605169445252, 0.6157605169445252, 1.0698333241180664, 2.1586655837325366, 1], \"1947\": [1, 1, 2, 3, 0, 0, 1.6094379124341003, 2.302585092994046, 3], \"2150\": [0, 0, 2, 4, 0, 0, 1.0360919316867756, 2.1129642337184795, 3], \"1764\": [1, 1, 2, 4, 0, 0, 0.3201675275962693, 0.920057214669632, 3], \"2162\": [2, 2, 9, 11, 0.41836851294407224, 0.41836851294407224, 2.4440395604558955, 2.816263785742443, 1], \"2255\": [0, 1, 4, 5, 0, 0, 2.2914117923959205, 2.700615222614692, 3], \"2354\": [0, 0, 47, 58, 0, 0, 5.926022403393794, 7.288660374403826, 3], \"2309\": [1, 1, 1, 2, 0, 0, 0, 1.4053425560905852, 4], \"1120\": [0, 0, 2, 5, 0, 0, 0.6931471805599453, 1.9810014688665833, 3], \"1534\": [0, 0, 2, 2, 0, 0, 0.6576404921030354, 0.6576404921030354, 3], \"1616\": [0, 0, 3, 4, 0, 0, 1.252762968495368, 1.6945957207744073, 3], \"1983\": [0, 1, 3, 8, 0, 0, 0.8032907596583713, 2.2790219792659046, 3], \"2288\": [0, 0, 2, 3, 0, 0, 0.36772478012531734, 0.6931471805599453, 3], \"2369\": [0, 0, 2, 3, 0, 0, 2.3978952727983707, 3.157000421150113, 3], \"255\": [0, 0, 2, 5, 0, 0, 1.133098464739279, 2.650272400435399, 3], \"1351\": [1, 1, 2, 5, 0, 0, 0.4795730802618863, 1.578185368929996, 3], \"2210\": [0, 1, 2, 6, 0, 0, 0.1578069910303688, 0.9315582040049435, 3], \"2324\": [0, 0, 28, 33, 0, 0, 4.312511662534604, 4.670284997349228, 3], \"2325\": [2, 2, 27, 37, 0.538996500732687, 0.538996500732687, 4.843753869775571, 5.503151460946401, 1], \"2326\": [0, 2, 2, 3, 0, 0.7777045685880084, 0.7777045685880084, 1.2939210409888755, 2], \"2370\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"2383\": [7, 11, 20, 48, 0.544520359374281, 1.025072272456275, 1.9327408848136112, 3.5562760966526197, 1], \"2384\": [1, 2, 4, 6, 0, 0.08338160893905106, 0.29849298855599654, 0.5780778507751582, 2], \"889\": [1, 2, 3, 8, 0, 0.2421400520048648, 0.48022518331727365, 1.68335017072087, 2], \"969\": [1, 5, 7, 9, 0, 0.3392378525807959, 0.583108714665771, 0.8366249052452713, 2], \"1586\": [2, 6, 7, 16, 0.07956481041235021, 0.5569503043492827, 0.7003674285334324, 1.8405824962443984, 1], \"1724\": [3, 7, 10, 16, 0.04509782218673358, 0.22406572976984887, 0.4138020343198282, 0.8381767967852847, 1], \"1824\": [0, 0, 5, 6, 0, 0, 2.2639159518348917, 2.596283513631972, 3], \"2175\": [1, 1, 2, 4, 0, 0, 0.680877087968131, 1.589732841354768, 3], \"2192\": [0, 1, 2, 2, 0, 0, 0.8109302162163288, 0.8109302162163288, 3], \"2204\": [0, 0, 2, 3, 0, 0, 0.35454501768090746, 0.6716409753389817, 3], \"2302\": [1, 1, 2, 3, 0, 0, 1.0986122886681096, 1.7047480922384253, 3], \"2350\": [0, 1, 2, 3, 0, 0, 0.29626581614317243, 0.5742859776832164, 3], \"2364\": [0, 1, 3, 4, 0, 0, 1.5260563034950494, 2.0014800002101243, 3], \"2362\": [1, 3, 11, 21, 0, 1.2729656758128876, 3.538737081540502, 4.844187086458591, 2], \"2376\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1303\": [1, 2, 5, 8, 0, 0.5245244681241525, 1.6696567724271552, 2.4877760922159533, 2], \"1994\": [0, 0, 13, 18, 0, 0, 4.415710710073823, 5.093750200806762, 3], \"2333\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"1782\": [0, 0, 2, 4, 0, 0, 0.8286926725561692, 1.8182862235614836, 3], \"2183\": [0, 1, 2, 2, 0, 0, 1.4053425560905852, 1.4053425560905852, 3], \"2337\": [0, 0, 2, 2, 0, 0, 0.1629613095094132, 0.1629613095094132, 3], \"2340\": [0, 4, 25, 36, 0, 2.0288776019793295, 5.19431940887652, 6.293419278846481, 2], \"2342\": [1, 1, 8, 13, 0, 0, 2.959364629383116, 3.8976342679760463, 3], \"2339\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"408\": [1, 1, 2, 6, 0, 0, 0.09374540917097383, 0.6336736159246612, 3], \"2360\": [0, 11, 184, 238, 0, 2.978477154526482, 6.208520444147867, 8.953664437694556, 2], \"2405\": [3, 3, 22, 32, 1.252762968495368, 1.252762968495368, 4.87575588627616, 5.654047419773664, 1], \"2368\": [4, 9, 141, 177, 1.499234772300486, 2.6301250869510504, 6.114354430563176, 8.567382574547725, 1], \"2348\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2355\": [0, 0, 1, 3, 0, 0, 0, 1.2332691738143668, 4], \"2358\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"664\": [1, 1, 2, 5, 0, 0, 1.252762968495368, 2.810907586541918, 3], \"2304\": [0, 1, 2, 3, 0, 0, 0.36772478012531734, 0.6931471805599453, 3], \"2366\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1065\": [0, 0, 2, 2, 0, 0, 0.7939518796819109, 0.7939518796819109, 3], \"1486\": [0, 0, 2, 6, 0, 0, 0.5175824062288705, 1.9603334760164182, 3], \"1557\": [0, 0, 2, 3, 0, 0, 0.6931471805599453, 1.1786549963416462, 3], \"2387\": [0, 0, 10, 14, 0, 0, 3.0072046747162275, 3.6556408126382025, 3], \"2372\": [0, 0, 4, 6, 0, 0, 1.6506808709681495, 2.348865845558052, 3], \"2373\": [1, 2, 6, 7, 0, 0.9555114450274365, 2.7343675094195836, 3.0252910757955354, 2], \"1908\": [17, 24, 27, 64, 0.7271535485451404, 1.1413414533936583, 1.3075225805853417, 2.7821387942474494, 1], \"2374\": [0, 2, 4, 5, 0, 0.6576404921030354, 1.552005863348225, 1.9189724933235048, 2], \"2394\": [0, 0, 2, 4, 0, 0, 0.5705448584676129, 1.4053425560905852, 3], \"2388\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2389\": [1, 1, 2, 2, 0, 0, 1.0986122886681096, 1.0986122886681096, 3], \"2431\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"903\": [0, 1, 2, 5, 0, 0, 0.2646925542270822, 1.0626186860202043, 3], \"1684\": [1, 1, 2, 2, 0, 0, 1.2992829841302609, 1.2992829841302609, 3], \"1845\": [3, 3, 4, 9, 1.252762968495368, 1.252762968495368, 1.6945957207744073, 3.157000421150113, 1], \"2056\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1479\": [0, 0, 2, 4, 0, 0, 1.9042374526547454, 3.172083663361442, 3], \"2344\": [1, 1, 2, 4, 0, 0, 1.6094379124341003, 2.833213344056216, 3], \"2065\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"462\": [0, 0, 3, 10, 0, 0, 0.8109302162163288, 2.700615222614692, 3], \"2400\": [0, 0, 1, 2, 0, 0, 0, 2.3978952727983707, 4], \"2401\": [1, 1, 2, 2, 0, 0, 0.22440062250426088, 0.22440062250426088, 3], \"2403\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1680\": [0, 1, 2, 4, 0, 0, 1.4663370687934272, 2.662587827025453, 3], \"2262\": [0, 1, 2, 4, 0, 0, 0.41836851294407224, 1.1242547192814474, 3], \"2267\": [0, 0, 3, 3, 0, 0, 2.069779630768099, 2.069779630768099, 3], \"2330\": [0, 0, 2, 2, 0, 0, 1.4663370687934272, 1.4663370687934272, 3], \"2408\": [0, 0, 2, 5, 0, 0, 1.4663370687934272, 3.0834378539730967, 3], \"2451\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"2458\": [1, 2, 2, 2, 0, 0.8668106746107854, 0.8668106746107854, 0.8668106746107854, 2], \"1073\": [2, 6, 8, 14, 0.18485641239714268, 1.0393615111892955, 1.446620341751487, 2.393269917651168, 1], \"2179\": [0, 0, 2, 2, 0, 0, 0.3393540829961018, 0.3393540829961018, 3], \"2413\": [0, 1, 3, 4, 0, 0, 0.44183275227903923, 0.6869552103120242, 3], \"2474\": [7, 11, 24, 28, 1.65328979496295, 2.3076001083520286, 3.892235680318511, 4.228091448867498, 1], \"2414\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2418\": [0, 1, 1, 2, 0, 0, 0, 1.6945957207744073, 4], \"2452\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2468\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2334\": [2, 2, 3, 8, 0.41836851294407224, 0.41836851294407224, 0.7741883905630712, 2.2312704187459365, 1], \"2395\": [0, 0, 2, 3, 0, 0, 1.9042374526547454, 2.6288008294480694, 3], \"2421\": [0, 1, 2, 2, 0, 0, 0.3101549283038395, 0.3101549283038395, 3], \"2473\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2182\": [0, 1, 2, 4, 0, 0, 0.5042466526679481, 1.2872888373444415, 3], \"2429\": [2, 2, 3, 6, 0.6157605169445252, 0.6157605169445252, 1.0698333241180664, 2.1586655837325366, 1], \"2435\": [0, 0, 2, 2, 0, 0, 1.2992829841302609, 1.2992829841302609, 3], \"2433\": [0, 0, 2, 3, 0, 0, 0.8286926725561692, 1.3618033411115948, 3], \"1987\": [1, 1, 3, 5, 0, 0, 0.6234672599219555, 1.2249060139924017, 3], \"2301\": [1, 4, 5, 5, 0, 1.8458266904983307, 2.2335922215070942, 2.2335922215070942, 2], \"2436\": [10, 14, 36, 41, 2.0028650419827856, 2.4786949144412382, 4.3989264648461095, 4.689110613118143, 1], \"2490\": [5, 10, 35, 38, 2.097141118779237, 2.8186672019919223, 5.361026321885647, 6.024830240951783, 1], \"1468\": [0, 1, 2, 7, 0, 0, 0.1636294237818021, 1.1561821404895873, 3], \"2216\": [0, 1, 2, 12, 0, 0, 0.034308682282985885, 0.813834662057118, 3], \"2443\": [0, 2, 3, 4, 0, 0.5316597106688327, 0.9473813189441862, 1.3368460857059095, 2], \"1393\": [0, 1, 2, 5, 0, 0, 0.7472144018302211, 2.0724728723637424, 3], \"2256\": [0, 1, 2, 3, 0, 0, 1.1700712526502546, 1.791759469228055, 3], \"2457\": [1, 1, 4, 4, 0, 0, 2.662587827025453, 2.662587827025453, 3], \"2456\": [0, 1, 1, 2, 0, 0, 0, 0.7777045685880084, 4], \"275\": [1, 1, 2, 4, 0, 0, 0.291910408561302, 0.8569364892249722, 3], \"900\": [2, 2, 3, 6, 0.8472978603872036, 0.8472978603872036, 1.3862943611198906, 2.5649493574615367, 1], \"1715\": [1, 1, 2, 2, 0, 0, 0.6931471805599453, 0.6931471805599453, 3], \"1786\": [1, 1, 2, 4, 0, 0, 0.21825356602001797, 0.680877087968131, 3], \"2032\": [5, 7, 8, 12, 0.3360157198362929, 0.5781557718411577, 0.7042672316040229, 1.1940192785794854, 1], \"2428\": [0, 1, 2, 5, 0, 0, 0.10318423623523076, 0.5184055192887599, 3], \"2461\": [4, 7, 11, 19, 0.7698398013481997, 1.5152864813109939, 2.2791236063150477, 3.301723958201108, 1], \"2462\": [0, 0, 9, 14, 0, 0, 3.974527519363579, 4.880273476233012, 3], \"2464\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1364\": [0, 0, 2, 2, 0, 0, 1.349926716949016, 1.349926716949016, 3], \"2449\": [0, 2, 16, 28, 0, 1.1700712526502546, 4.931591759734076, 6.07891564222224, 2], \"2470\": [0, 0, 0, 5, 0, 0, 0, 0.24344327707854, 4], \"1324\": [0, 0, 2, 8, 0, 0, 1.791759469228055, 4.394449154672439, 3], \"2031\": [1, 4, 5, 11, 0, 1.4053425560905852, 1.7591832987934422, 3.189209324519731, 2], \"2347\": [0, 1, 3, 4, 0, 0, 0.4374678391943382, 0.680877087968131, 3], \"2409\": [0, 2, 3, 3, 0, 0.8472978603872036, 1.3862943611198906, 1.3862943611198906, 2], \"2481\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2534\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1823\": [1, 1, 3, 4, 0, 0, 0.4310822724784647, 0.6719663584804982, 3], \"1938\": [1, 2, 3, 4, 0, 0.291910408561302, 0.5668534552356532, 0.8569364892249722, 2], \"2487\": [3, 13, 15, 25, 0.20386340056870947, 1.6575099437180916, 1.8951079117724612, 2.8156193312508466, 1], \"2488\": [0, 1, 3, 3, 0, 0, 1.7469089030627032, 1.7469089030627032, 3], \"2555\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1605\": [3, 3, 6, 10, 0.3106945937243845, 0.3106945937243845, 0.8991404544315211, 1.6191076090520593, 1], \"2477\": [1, 1, 2, 3, 0, 0, 0.9088557533866369, 1.4663370687934272, 3], \"2497\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2498\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2499\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"793\": [1, 1, 4, 7, 0, 0, 1.241713132308783, 2.144580843850797, 3], \"2504\": [0, 1, 2, 3, 0, 0, 1.1700712526502546, 1.791759469228055, 3], \"623\": [0, 0, 2, 4, 0, 0, 0.4519851237430572, 1.1895840668738362, 3], \"1466\": [0, 0, 2, 3, 0, 0, 1.209837923778334, 1.83961549040569, 3], \"2161\": [1, 1, 2, 3, 0, 0, 0.7777045685880084, 1.2939210409888755, 3], \"2450\": [1, 3, 4, 7, 0, 1.3618033411115948, 1.8182862235614836, 2.8217628372682206, 2], \"2565\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1355\": [0, 1, 2, 3, 0, 0, 1.133098464739279, 1.7469089030627032, 3], \"2520\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2139\": [1, 1, 2, 3, 0, 0, 0.41397579777607296, 0.7672551527136672, 3], \"2541\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1353\": [0, 1, 2, 4, 0, 0, 0.6466271649250525, 1.5339303599259553, 3], \"1781\": [2, 2, 3, 6, 0.08252102368800351, 0.08252102368800351, 0.1769307081590782, 0.5733459807473247, 1], \"2491\": [1, 1, 2, 5, 0, 0, 0.0918075492531228, 0.4706044102791258, 3], \"2552\": [2, 3, 3, 8, 0.22067136216882066, 0.44183275227903923, 0.44183275227903923, 1.5995122726341304, 1], \"2558\": [0, 0, 0, 2, 0, 0, 0, 0.5877866649021191, 4], \"2561\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"2606\": [2, 2, 5, 12, 0.41397579777607296, 0.41397579777607296, 1.436304781694552, 2.9684401312659836, 1], \"2613\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1777\": [3, 3, 4, 5, 0.1755467047088198, 0.1755467047088198, 0.29352848825416117, 0.42725858927476734, 1], \"2572\": [0, 1, 4, 6, 0, 0, 1.264037045068586, 1.9042374526547454, 3], \"2573\": [1, 2, 3, 6, 0, 0.1616413515564159, 0.3327057538257361, 0.9473813189441862, 2], \"2571\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"2586\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"2587\": [0, 1, 1, 2, 0, 0, 0, 1.252762968495368, 4], \"2590\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2658\": [5, 10, 10, 12, 2.353757315758966, 3.025028112191484, 3.6425208218403404, 4.032196344425115, 1], \"1961\": [1, 1, 2, 6, 0, 0, 0.38193461069797024, 1.6459716557665565, 3], \"2621\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2617\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2713\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"2646\": [0, 1, 1, 0, 0, 0, 0, 0, 4], \"2650\": [1, 1, 1, 2, 0, 0, 0, 0.41397579777607296, 4], \"2530\": [1, 2, 2, 2, 0, 0.44183275227903923, 0.44183275227903923, 0.44183275227903923, 2], \"2669\": [0, 1, 1, 2, 0, 0, 0, 0.9315582040049435, 4], \"1054\": [0, 3, 3, 14, 0, 0.24991141156531438, 0.24991141156531438, 1.971712292186459, 2], \"1460\": [1, 2, 2, 5, 0, 0.219455778235025, 0.219455778235025, 0.9296973921542704, 2], \"2670\": [1, 3, 3, 3, 0, 1.6650077635889111, 1.6650077635889111, 1.6650077635889111, 2], \"2720\": [0, 5, 5, 11, 0, 1.7752846320245501, 1.7752846320245501, 3.207834703240594, 2], \"2724\": [1, 3, 3, 4, 0, 0.3964152725882465, 0.3964152725882465, 0.623188591953035, 2], \"2732\": [5, 8, 8, 14, 0.20083244232865827, 0.4506902061131003, 0.4506902061131003, 1.0093337042295838, 1], \"2762\": [0, 2, 2, 2, 0, 0.2363887780642304, 0.2363887780642304, 0.2363887780642304, 2], \"911\": [0, 2, 2, 7, 0, 1.791759469228055, 1.791759469228055, 4.131158535344817, 2], \"2677\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2738\": [0, 1, 1, 0, 0, 0, 0, 0, 4], \"2684\": [0, 2, 2, 2, 0, 0.46813621507094005, 0.46813621507094005, 0.46813621507094005, 2], \"2734\": [1, 5, 5, 7, 0, 0.5705448584676129, 0.5705448584676129, 0.9193629309111252, 2], \"2743\": [1, 2, 2, 3, 0, 0.21706450523782758, 0.21706450523782758, 0.4353180712578455, 2], \"1392\": [0, 2, 2, 8, 0, 0.05765285142727736, 0.05765285142727736, 0.6676010881322488, 2], \"1509\": [1, 3, 3, 5, 0, 0.036323605857535135, 0.036323605857535135, 0.09781050764210153, 2], \"2794\": [0, 3, 3, 3, 0, 1.7469089030627032, 1.7469089030627032, 1.7469089030627032, 2], \"577\": [1, 2, 2, 6, 0, 0.024112078333711137, 0.024112078333711137, 0.19856075575657037, 2], \"2636\": [0, 3, 3, 6, 0, 0.4881938233057933, 0.4881938233057933, 1.2577455398398318, 2], \"2809\": [14, 20, 20, 59, 0.8725623620466855, 1.3462346322676157, 1.3462346322676157, 3.248068843725345, 1], \"2755\": [1, 3, 3, 8, 0, 1.1451323043030026, 1.1451323043030026, 2.787360039560094, 2], \"2756\": [2, 3, 3, 4, 0.1636294237818021, 0.33647223662121295, 0.33647223662121295, 0.537142932083364, 1], \"2818\": [0, 2, 2, 3, 0, 0.680877087968131, 0.680877087968131, 1.1616252564968437, 2], \"2757\": [0, 2, 2, 3, 0, 1.349926716949016, 1.349926716949016, 2.005333569526114, 2], \"2808\": [3, 6, 6, 7, 0.8967461358011848, 1.9178709289909204, 1.9178709289909204, 2.1864136612320038, 1], \"2810\": [0, 2, 2, 3, 0, 1.133098464739279, 1.133098464739279, 1.7469089030627032, 2], \"1415\": [0, 4, 4, 8, 0, 0.12035544138590286, 0.12035544138590286, 0.41316255819154635, 2], \"2211\": [0, 3, 3, 8, 0, 0.5742859776832164, 0.5742859776832164, 1.8744511850731684, 2], \"2538\": [0, 2, 2, 7, 0, 1.5339303599259553, 1.5339303599259553, 3.8187108282864943, 2], \"1048\": [1, 2, 2, 5, 0, 0.7328875092094594, 0.7328875092094594, 2.0485643031153966, 2], \"1802\": [1, 2, 2, 7, 0, 0.17985546429876115, 0.17985546429876115, 1.2278240201481159, 2], \"2553\": [0, 2, 2, 5, 0, 0.21706450523782758, 0.21706450523782758, 0.9223330463301177, 2], \"2741\": [0, 4, 4, 4, 0, 0.3013248488555675, 0.3013248488555675, 0.3013248488555675, 2], \"2868\": [0, 2, 2, 2, 0, 1.0663514264498883, 1.0663514264498883, 1.0663514264498883, 2], \"2539\": [1, 2, 2, 2, 0, 1.4053425560905852, 1.4053425560905852, 1.4053425560905852, 2], \"2681\": [0, 2, 2, 7, 0, 0.5790338737925242, 0.5790338737925242, 2.361593646122156, 2], \"2603\": [1, 2, 2, 3, 0, 1.0360919316867756, 1.0360919316867756, 1.6274564179367788, 2], \"2834\": [0, 1, 1, 2, 0, 0, 0, 1.0986122886681096, 4], \"1683\": [1, 2, 2, 4, 0, 0.34228620648663277, 0.34228620648663277, 0.9679921062510455, 2], \"2566\": [1, 2, 2, 3, 0, 0.680877087968131, 0.680877087968131, 1.1616252564968437, 2], \"2789\": [2, 3, 3, 4, 0.04410858325627566, 0.09664166973320325, 0.09664166973320325, 0.16583922856095737, 1], \"2812\": [1, 3, 3, 4, 0, 0.23987034511952326, 0.23987034511952326, 0.3933437475758196, 2], \"2884\": [71, 76, 76, 91, 2.767906796903054, 3.1021027961483494, 5.455192335470338, 6.328877460844834, 1], \"826\": [0, 2, 2, 5, 0, 1.4663370687934272, 1.4663370687934272, 3.0834378539730967, 2], \"2000\": [1, 2, 2, 3, 0, 0.9808292530117262, 0.9808292530117262, 1.55814461804655, 2], \"2274\": [1, 2, 2, 2, 0, 0.35774963506849783, 0.35774963506849783, 0.35774963506849783, 2], \"2995\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1338\": [2, 3, 3, 3, 0.06301296782873406, 0.1365755350057508, 0.1365755350057508, 0.1365755350057508, 1], \"1758\": [0, 2, 2, 2, 0, 1.0986122886681096, 1.0986122886681096, 1.0986122886681096, 2], \"2921\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"2479\": [2, 3, 3, 6, 0.11216225709564905, 0.23670108287626285, 0.23670108287626285, 0.7267024804081622, 1], \"2876\": [1, 2, 2, 7, 0, 0.06646964500774162, 0.06646964500774162, 0.6108108938993095, 2], \"3018\": [1, 7, 7, 10, 0, 2.553050402994185, 2.6817822742815998, 3.3596034843633182, 2], \"2871\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2979\": [1, 1, 1, 4, 0, 0, 0, 2.2429468266743147, 4], \"3088\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1652\": [2, 3, 3, 4, 0.5245244681241525, 0.9367692632176957, 0.9367692632176957, 1.3240520522426698, 1], \"1730\": [2, 3, 3, 5, 0.30538164955118186, 0.5897688261061103, 0.5897688261061103, 1.1731453405306764, 1], \"2042\": [2, 3, 3, 8, 0.15355773584309076, 0.31732144188640793, 0.31732144188640793, 1.2962606924455244, 1], \"2576\": [0, 2, 2, 4, 0, 0.3452699473247421, 0.3452699473247421, 0.9743651063918369, 2], \"2626\": [1, 2, 2, 2, 0, 0.5042466526679481, 0.5042466526679481, 0.5042466526679481, 2], \"2796\": [2, 4, 4, 6, 0.08796877294595712, 0.31321537445694564, 0.31321537445694564, 0.6029960835656478, 1], \"2813\": [1, 2, 2, 6, 0, 0.04073883097910362, 0.04073883097910362, 0.3178865697459251, 2], \"2954\": [0, 1, 1, 0, 0, 0, 0, 0, 4], \"3019\": [1, 3, 3, 3, 0, 0.8602012652231115, 0.8602012652231115, 0.8602012652231115, 2], \"3025\": [0, 2, 2, 3, 0, 0.9808292530117262, 0.9808292530117262, 1.55814461804655, 2], \"2998\": [2, 2, 2, 3, 0.22440062250426088, 0.22440062250426088, 0.22440062250426088, 0.4485486942444761, 1], \"1045\": [2, 2, 2, 3, 0.5465437063680699, 0.5465437063680699, 0.5465437063680699, 0.9694005571881035, 1], \"2471\": [2, 2, 2, 4, 0.3513978868378886, 0.3513978868378886, 0.3513978868378886, 0.9873866535578852, 1], \"2692\": [2, 2, 2, 2, 0.3452699473247421, 0.3452699473247421, 0.3452699473247421, 0.3452699473247421, 1], \"3095\": [2, 2, 2, 2, 0.8109302162163288, 0.8109302162163288, 0.8109302162163288, 0.8109302162163288, 1], \"3045\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1061\": [2, 2, 2, 2, 1.252762968495368, 1.252762968495368, 1.252762968495368, 1.252762968495368, 1], \"2614\": [2, 2, 2, 2, 0.16430305129127631, 0.16430305129127631, 0.16430305129127631, 0.16430305129127631, 1], \"1161\": [2, 2, 2, 4, 0.051691093239179656, 0.051691093239179656, 0.051691093239179656, 0.19243820344619395, 1], \"1535\": [4, 4, 4, 8, 1.1996154989569803, 1.1996154989569803, 1.1996154989569803, 2.329749021934868, 1], \"1827\": [2, 2, 2, 3, 0.014164542768650788, 0.014164542768650788, 0.014164542768650788, 0.03159265903694846, 1], \"2149\": [3, 3, 3, 5, 0.6931471805599453, 0.6931471805599453, 0.6931471805599453, 1.329135947279942, 1], \"3094\": [8, 8, 8, 15, 1.4950275612563562, 1.4950275612563562, 1.4950275612563562, 2.5773462104383653, 1], \"830\": [3, 3, 3, 4, 1.0698333241180664, 1.0698333241180664, 1.0698333241180664, 1.4825711915553106, 1], \"1882\": [2, 2, 2, 4, 0.06080900459560568, 0.06080900459560568, 0.06080900459560568, 0.22377031410501885, 1], \"2551\": [2, 2, 2, 2, 0.3281156420302715, 0.3281156420302715, 0.3281156420302715, 0.3281156420302715, 1], \"1275\": [3, 3, 3, 8, 0.5456944494168147, 0.5456944494168147, 0.5456944494168147, 1.8182862235614836, 1], \"3150\": [2, 2, 2, 2, 0.7191226669632059, 0.7191226669632059, 0.7191226669632059, 0.7191226669632059, 1], \"3182\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3139\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3183\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3184\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3199\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"3201\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3216\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3207\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2556\": [2, 2, 2, 2, 0.08052638362008792, 0.08052638362008792, 0.08052638362008792, 0.08052638362008792, 1], \"3193\": [2, 2, 2, 2, 0.3393540829961018, 0.3393540829961018, 0.3393540829961018, 0.3393540829961018, 1], \"2820\": [2, 2, 2, 6, 0.05807146640389905, 0.05807146640389905, 0.05807146640389905, 0.4305586757058212, 1], \"3062\": [4, 4, 4, 5, 0.2061181797504451, 0.2061181797504451, 0.2061181797504451, 0.3057580563761176, 1], \"3208\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3210\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3211\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"2025\": [3, 3, 3, 4, 0.7537718023763802, 0.7537718023763802, 0.7537718023763802, 1.0986122886681096, 1], \"2917\": [2, 2, 2, 2, 0.08644688360743705, 0.08644688360743705, 0.08644688360743705, 0.08644688360743705, 1], \"1817\": [2, 2, 2, 4, 0.219455778235025, 0.219455778235025, 0.219455778235025, 0.6839021224158942, 1], \"3194\": [2, 2, 2, 3, 0.056512210263342307, 0.056512210263342307, 0.056512210263342307, 0.12293768624504794, 1], \"3218\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"1637\": [4, 4, 4, 12, 1.2992829841302609, 1.2992829841302609, 1.2992829841302609, 3.2188758248682006, 1], \"3273\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1354\": [2, 2, 2, 4, 0.322773392263051, 0.322773392263051, 0.322773392263051, 0.9257694758286988, 1], \"3275\": [2, 2, 2, 3, 0.2664662333015083, 0.2664662333015083, 0.2664662333015083, 0.5229653783166013, 1], \"3276\": [0, 0, 0, 2, 0, 0, 0, 0.4321333551903257, 4], \"3299\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3343\": [0, 0, 0, 0, 0, 0, 0, 0, 4]}"
}