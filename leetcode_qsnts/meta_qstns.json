{
    "name": "Facebook",
    "slug": "facebook",
    "questions": [
        {
            "status": "ac",
            "questionId": "1",
            "questionFrontendId": "1",
            "title": "Two Sum",
            "titleSlug": "two-sum",
            "acRate": "52.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2",
            "questionFrontendId": "2",
            "title": "Add Two Numbers",
            "titleSlug": "add-two-numbers",
            "acRate": "42.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "3",
            "questionFrontendId": "3",
            "title": "Longest Substring Without Repeating Characters",
            "titleSlug": "longest-substring-without-repeating-characters",
            "acRate": "34.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "4",
            "questionFrontendId": "4",
            "title": "Median of Two Sorted Arrays",
            "titleSlug": "median-of-two-sorted-arrays",
            "acRate": "39.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "5",
            "questionFrontendId": "5",
            "title": "Longest Palindromic Substring",
            "titleSlug": "longest-palindromic-substring",
            "acRate": "33.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "6",
            "questionFrontendId": "6",
            "title": "Zigzag Conversion",
            "titleSlug": "zigzag-conversion",
            "acRate": "47.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "7",
            "questionFrontendId": "7",
            "title": "Reverse Integer",
            "titleSlug": "reverse-integer",
            "acRate": "28.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "8",
            "questionFrontendId": "8",
            "title": "String to Integer (atoi)",
            "titleSlug": "string-to-integer-atoi",
            "acRate": "17.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "9",
            "questionFrontendId": "9",
            "title": "Palindrome Number",
            "titleSlug": "palindrome-number",
            "acRate": "55.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "10",
            "questionFrontendId": "10",
            "title": "Regular Expression Matching",
            "titleSlug": "regular-expression-matching",
            "acRate": "28.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "11",
            "questionFrontendId": "11",
            "title": "Container With Most Water",
            "titleSlug": "container-with-most-water",
            "acRate": "54.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "12",
            "questionFrontendId": "12",
            "title": "Integer to Roman",
            "titleSlug": "integer-to-roman",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "13",
            "questionFrontendId": "13",
            "title": "Roman to Integer",
            "titleSlug": "roman-to-integer",
            "acRate": "60.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "14",
            "questionFrontendId": "14",
            "title": "Longest Common Prefix",
            "titleSlug": "longest-common-prefix",
            "acRate": "42.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "15",
            "questionFrontendId": "15",
            "title": "3Sum",
            "titleSlug": "3sum",
            "acRate": "34.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "16",
            "questionFrontendId": "16",
            "title": "3Sum Closest",
            "titleSlug": "3sum-closest",
            "acRate": "45.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "17",
            "questionFrontendId": "17",
            "title": "Letter Combinations of a Phone Number",
            "titleSlug": "letter-combinations-of-a-phone-number",
            "acRate": "60.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "18",
            "questionFrontendId": "18",
            "title": "4Sum",
            "titleSlug": "4sum",
            "acRate": "36.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "19",
            "questionFrontendId": "19",
            "title": "Remove Nth Node From End of List",
            "titleSlug": "remove-nth-node-from-end-of-list",
            "acRate": "44.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "20",
            "questionFrontendId": "20",
            "title": "Valid Parentheses",
            "titleSlug": "valid-parentheses",
            "acRate": "40.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "21",
            "questionFrontendId": "21",
            "title": "Merge Two Sorted Lists",
            "titleSlug": "merge-two-sorted-lists",
            "acRate": "64.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "22",
            "questionFrontendId": "22",
            "title": "Generate Parentheses",
            "titleSlug": "generate-parentheses",
            "acRate": "74.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "23",
            "questionFrontendId": "23",
            "title": "Merge k Sorted Lists",
            "titleSlug": "merge-k-sorted-lists",
            "acRate": "52.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "24",
            "questionFrontendId": "24",
            "title": "Swap Nodes in Pairs",
            "titleSlug": "swap-nodes-in-pairs",
            "acRate": "64.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "25",
            "questionFrontendId": "25",
            "title": "Reverse Nodes in k-Group",
            "titleSlug": "reverse-nodes-in-k-group",
            "acRate": "58.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "26",
            "questionFrontendId": "26",
            "title": "Remove Duplicates from Sorted Array",
            "titleSlug": "remove-duplicates-from-sorted-array",
            "acRate": "55.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "27",
            "questionFrontendId": "27",
            "title": "Remove Element",
            "titleSlug": "remove-element",
            "acRate": "56.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "28",
            "questionFrontendId": "28",
            "title": "Find the Index of the First Occurrence in a String",
            "titleSlug": "find-the-index-of-the-first-occurrence-in-a-string",
            "acRate": "41.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "29",
            "questionFrontendId": "29",
            "title": "Divide Two Integers",
            "titleSlug": "divide-two-integers",
            "acRate": "17.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "31",
            "questionFrontendId": "31",
            "title": "Next Permutation",
            "titleSlug": "next-permutation",
            "acRate": "39.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "32",
            "questionFrontendId": "32",
            "title": "Longest Valid Parentheses",
            "titleSlug": "longest-valid-parentheses",
            "acRate": "33.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "33",
            "questionFrontendId": "33",
            "title": "Search in Rotated Sorted Array",
            "titleSlug": "search-in-rotated-sorted-array",
            "acRate": "40.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "34",
            "questionFrontendId": "34",
            "title": "Find First and Last Position of Element in Sorted Array",
            "titleSlug": "find-first-and-last-position-of-element-in-sorted-array",
            "acRate": "44.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "35",
            "questionFrontendId": "35",
            "title": "Search Insert Position",
            "titleSlug": "search-insert-position",
            "acRate": "45.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "36",
            "questionFrontendId": "36",
            "title": "Valid Sudoku",
            "titleSlug": "valid-sudoku",
            "acRate": "59.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "38",
            "questionFrontendId": "38",
            "title": "Count and Say",
            "titleSlug": "count-and-say",
            "acRate": "54.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "39",
            "questionFrontendId": "39",
            "title": "Combination Sum",
            "titleSlug": "combination-sum",
            "acRate": "71.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "40",
            "questionFrontendId": "40",
            "title": "Combination Sum II",
            "titleSlug": "combination-sum-ii",
            "acRate": "54.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "41",
            "questionFrontendId": "41",
            "title": "First Missing Positive",
            "titleSlug": "first-missing-positive",
            "acRate": "37.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "42",
            "questionFrontendId": "42",
            "title": "Trapping Rain Water",
            "titleSlug": "trapping-rain-water",
            "acRate": "60.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "43",
            "questionFrontendId": "43",
            "title": "Multiply Strings",
            "titleSlug": "multiply-strings",
            "acRate": "40.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "44",
            "questionFrontendId": "44",
            "title": "Wildcard Matching",
            "titleSlug": "wildcard-matching",
            "acRate": "27.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "45",
            "questionFrontendId": "45",
            "title": "Jump Game II",
            "titleSlug": "jump-game-ii",
            "acRate": "40.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "46",
            "questionFrontendId": "46",
            "title": "Permutations",
            "titleSlug": "permutations",
            "acRate": "78.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "47",
            "questionFrontendId": "47",
            "title": "Permutations II",
            "titleSlug": "permutations-ii",
            "acRate": "58.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "48",
            "questionFrontendId": "48",
            "title": "Rotate Image",
            "titleSlug": "rotate-image",
            "acRate": "73.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "49",
            "questionFrontendId": "49",
            "title": "Group Anagrams",
            "titleSlug": "group-anagrams",
            "acRate": "68.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "50",
            "questionFrontendId": "50",
            "title": "Pow(x, n)",
            "titleSlug": "powx-n",
            "acRate": "34.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "51",
            "questionFrontendId": "51",
            "title": "N-Queens",
            "titleSlug": "n-queens",
            "acRate": "67.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "53",
            "questionFrontendId": "53",
            "title": "Maximum Subarray",
            "titleSlug": "maximum-subarray",
            "acRate": "50.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "54",
            "questionFrontendId": "54",
            "title": "Spiral Matrix",
            "titleSlug": "spiral-matrix",
            "acRate": "48.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "55",
            "questionFrontendId": "55",
            "title": "Jump Game",
            "titleSlug": "jump-game",
            "acRate": "38.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "56",
            "questionFrontendId": "56",
            "title": "Merge Intervals",
            "titleSlug": "merge-intervals",
            "acRate": "47.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "57",
            "questionFrontendId": "57",
            "title": "Insert Interval",
            "titleSlug": "insert-interval",
            "acRate": "40.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "58",
            "questionFrontendId": "58",
            "title": "Length of Last Word",
            "titleSlug": "length-of-last-word",
            "acRate": "49.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "59",
            "questionFrontendId": "59",
            "title": "Spiral Matrix II",
            "titleSlug": "spiral-matrix-ii",
            "acRate": "70.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "61",
            "questionFrontendId": "61",
            "title": "Rotate List",
            "titleSlug": "rotate-list",
            "acRate": "37.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "62",
            "questionFrontendId": "62",
            "title": "Unique Paths",
            "titleSlug": "unique-paths",
            "acRate": "64.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "63",
            "questionFrontendId": "63",
            "title": "Unique Paths II",
            "titleSlug": "unique-paths-ii",
            "acRate": "41.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "64",
            "questionFrontendId": "64",
            "title": "Minimum Path Sum",
            "titleSlug": "minimum-path-sum",
            "acRate": "63.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "65",
            "questionFrontendId": "65",
            "title": "Valid Number",
            "titleSlug": "valid-number",
            "acRate": "19.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "66",
            "questionFrontendId": "66",
            "title": "Plus One",
            "titleSlug": "plus-one",
            "acRate": "45.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "67",
            "questionFrontendId": "67",
            "title": "Add Binary",
            "titleSlug": "add-binary",
            "acRate": "53.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "68",
            "questionFrontendId": "68",
            "title": "Text Justification",
            "titleSlug": "text-justification",
            "acRate": "42.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "69",
            "questionFrontendId": "69",
            "title": "Sqrt(x)",
            "titleSlug": "sqrtx",
            "acRate": "38.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "70",
            "questionFrontendId": "70",
            "title": "Climbing Stairs",
            "titleSlug": "climbing-stairs",
            "acRate": "52.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "71",
            "questionFrontendId": "71",
            "title": "Simplify Path",
            "titleSlug": "simplify-path",
            "acRate": "41.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "72",
            "questionFrontendId": "72",
            "title": "Edit Distance",
            "titleSlug": "edit-distance",
            "acRate": "56.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "73",
            "questionFrontendId": "73",
            "title": "Set Matrix Zeroes",
            "titleSlug": "set-matrix-zeroes",
            "acRate": "55.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "74",
            "questionFrontendId": "74",
            "title": "Search a 2D Matrix",
            "titleSlug": "search-a-2d-matrix",
            "acRate": "49.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "75",
            "questionFrontendId": "75",
            "title": "Sort Colors",
            "titleSlug": "sort-colors",
            "acRate": "61.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "76",
            "questionFrontendId": "76",
            "title": "Minimum Window Substring",
            "titleSlug": "minimum-window-substring",
            "acRate": "42.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "77",
            "questionFrontendId": "77",
            "title": "Combinations",
            "titleSlug": "combinations",
            "acRate": "70.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "78",
            "questionFrontendId": "78",
            "title": "Subsets",
            "titleSlug": "subsets",
            "acRate": "77.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "79",
            "questionFrontendId": "79",
            "title": "Word Search",
            "titleSlug": "word-search",
            "acRate": "41.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "80",
            "questionFrontendId": "80",
            "title": "Remove Duplicates from Sorted Array II",
            "titleSlug": "remove-duplicates-from-sorted-array-ii",
            "acRate": "57.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "83",
            "questionFrontendId": "83",
            "title": "Remove Duplicates from Sorted List",
            "titleSlug": "remove-duplicates-from-sorted-list",
            "acRate": "52.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "84",
            "questionFrontendId": "84",
            "title": "Largest Rectangle in Histogram",
            "titleSlug": "largest-rectangle-in-histogram",
            "acRate": "44.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "85",
            "questionFrontendId": "85",
            "title": "Maximal Rectangle",
            "titleSlug": "maximal-rectangle",
            "acRate": "46.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "86",
            "questionFrontendId": "86",
            "title": "Partition List",
            "titleSlug": "partition-list",
            "acRate": "55.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "87",
            "questionFrontendId": "87",
            "title": "Scramble String",
            "titleSlug": "scramble-string",
            "acRate": "39.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "88",
            "questionFrontendId": "88",
            "title": "Merge Sorted Array",
            "titleSlug": "merge-sorted-array",
            "acRate": "49.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "90",
            "questionFrontendId": "90",
            "title": "Subsets II",
            "titleSlug": "subsets-ii",
            "acRate": "57.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "91",
            "questionFrontendId": "91",
            "title": "Decode Ways",
            "titleSlug": "decode-ways",
            "acRate": "34.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "92",
            "questionFrontendId": "92",
            "title": "Reverse Linked List II",
            "titleSlug": "reverse-linked-list-ii",
            "acRate": "47.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "94",
            "questionFrontendId": "94",
            "title": "Binary Tree Inorder Traversal",
            "titleSlug": "binary-tree-inorder-traversal",
            "acRate": "75.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "95",
            "questionFrontendId": "95",
            "title": "Unique Binary Search Trees II",
            "titleSlug": "unique-binary-search-trees-ii",
            "acRate": "57.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "98",
            "questionFrontendId": "98",
            "title": "Validate Binary Search Tree",
            "titleSlug": "validate-binary-search-tree",
            "acRate": "32.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "100",
            "questionFrontendId": "100",
            "title": "Same Tree",
            "titleSlug": "same-tree",
            "acRate": "61.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "101",
            "questionFrontendId": "101",
            "title": "Symmetric Tree",
            "titleSlug": "symmetric-tree",
            "acRate": "56.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "102",
            "questionFrontendId": "102",
            "title": "Binary Tree Level Order Traversal",
            "titleSlug": "binary-tree-level-order-traversal",
            "acRate": "66.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "103",
            "questionFrontendId": "103",
            "title": "Binary Tree Zigzag Level Order Traversal",
            "titleSlug": "binary-tree-zigzag-level-order-traversal",
            "acRate": "58.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "104",
            "questionFrontendId": "104",
            "title": "Maximum Depth of Binary Tree",
            "titleSlug": "maximum-depth-of-binary-tree",
            "acRate": "75.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "109",
            "questionFrontendId": "109",
            "title": "Convert Sorted List to Binary Search Tree",
            "titleSlug": "convert-sorted-list-to-binary-search-tree",
            "acRate": "61.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "110",
            "questionFrontendId": "110",
            "title": "Balanced Binary Tree",
            "titleSlug": "balanced-binary-tree",
            "acRate": "51.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "111",
            "questionFrontendId": "111",
            "title": "Minimum Depth of Binary Tree",
            "titleSlug": "minimum-depth-of-binary-tree",
            "acRate": "47.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "112",
            "questionFrontendId": "112",
            "title": "Path Sum",
            "titleSlug": "path-sum",
            "acRate": "50.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "113",
            "questionFrontendId": "113",
            "title": "Path Sum II",
            "titleSlug": "path-sum-ii",
            "acRate": "58.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "114",
            "questionFrontendId": "114",
            "title": "Flatten Binary Tree to Linked List",
            "titleSlug": "flatten-binary-tree-to-linked-list",
            "acRate": "64.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "116",
            "questionFrontendId": "116",
            "title": "Populating Next Right Pointers in Each Node",
            "titleSlug": "populating-next-right-pointers-in-each-node",
            "acRate": "62.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "117",
            "questionFrontendId": "117",
            "title": "Populating Next Right Pointers in Each Node II",
            "titleSlug": "populating-next-right-pointers-in-each-node-ii",
            "acRate": "52.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "118",
            "questionFrontendId": "118",
            "title": "Pascal's Triangle",
            "titleSlug": "pascals-triangle",
            "acRate": "73.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "121",
            "questionFrontendId": "121",
            "title": "Best Time to Buy and Sell Stock",
            "titleSlug": "best-time-to-buy-and-sell-stock",
            "acRate": "53.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "122",
            "questionFrontendId": "122",
            "title": "Best Time to Buy and Sell Stock II",
            "titleSlug": "best-time-to-buy-and-sell-stock-ii",
            "acRate": "66.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "124",
            "questionFrontendId": "124",
            "title": "Binary Tree Maximum Path Sum",
            "titleSlug": "binary-tree-maximum-path-sum",
            "acRate": "39.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "125",
            "questionFrontendId": "125",
            "title": "Valid Palindrome",
            "titleSlug": "valid-palindrome",
            "acRate": "47.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "126",
            "questionFrontendId": "126",
            "title": "Word Ladder II",
            "titleSlug": "word-ladder-ii",
            "acRate": "27.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "127",
            "questionFrontendId": "127",
            "title": "Word Ladder",
            "titleSlug": "word-ladder",
            "acRate": "38.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "128",
            "questionFrontendId": "128",
            "title": "Longest Consecutive Sequence",
            "titleSlug": "longest-consecutive-sequence",
            "acRate": "47.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "129",
            "questionFrontendId": "129",
            "title": "Sum Root to Leaf Numbers",
            "titleSlug": "sum-root-to-leaf-numbers",
            "acRate": "63.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "133",
            "questionFrontendId": "133",
            "title": "Clone Graph",
            "titleSlug": "clone-graph",
            "acRate": "56.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "134",
            "questionFrontendId": "134",
            "title": "Gas Station",
            "titleSlug": "gas-station",
            "acRate": "45.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "135",
            "questionFrontendId": "135",
            "title": "Candy",
            "titleSlug": "candy",
            "acRate": "43.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "136",
            "questionFrontendId": "136",
            "title": "Single Number",
            "titleSlug": "single-number",
            "acRate": "72.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "138",
            "questionFrontendId": "138",
            "title": "Copy List with Random Pointer",
            "titleSlug": "copy-list-with-random-pointer",
            "acRate": "55.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "139",
            "questionFrontendId": "139",
            "title": "Word Break",
            "titleSlug": "word-break",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "140",
            "questionFrontendId": "140",
            "title": "Word Break II",
            "titleSlug": "word-break-ii",
            "acRate": "47.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "143",
            "questionFrontendId": "143",
            "title": "Reorder List",
            "titleSlug": "reorder-list",
            "acRate": "56.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "146",
            "questionFrontendId": "146",
            "title": "LRU Cache",
            "titleSlug": "lru-cache",
            "acRate": "42.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "150",
            "questionFrontendId": "150",
            "title": "Evaluate Reverse Polish Notation",
            "titleSlug": "evaluate-reverse-polish-notation",
            "acRate": "51.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "151",
            "questionFrontendId": "151",
            "title": "Reverse Words in a String",
            "titleSlug": "reverse-words-in-a-string",
            "acRate": "40.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "152",
            "questionFrontendId": "152",
            "title": "Maximum Product Subarray",
            "titleSlug": "maximum-product-subarray",
            "acRate": "35.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "153",
            "questionFrontendId": "153",
            "title": "Find Minimum in Rotated Sorted Array",
            "titleSlug": "find-minimum-in-rotated-sorted-array",
            "acRate": "50.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "155",
            "questionFrontendId": "155",
            "title": "Min Stack",
            "titleSlug": "min-stack",
            "acRate": "53.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "157",
            "questionFrontendId": "157",
            "title": "Read N Characters Given Read4",
            "titleSlug": "read-n-characters-given-read4",
            "acRate": "41.4%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "158",
            "questionFrontendId": "158",
            "title": "Read N Characters Given read4 II - Call Multiple Times",
            "titleSlug": "read-n-characters-given-read4-ii-call-multiple-times",
            "acRate": "42.1%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "160",
            "questionFrontendId": "160",
            "title": "Intersection of Two Linked Lists",
            "titleSlug": "intersection-of-two-linked-lists",
            "acRate": "57.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "161",
            "questionFrontendId": "161",
            "title": "One Edit Distance",
            "titleSlug": "one-edit-distance",
            "acRate": "34.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "162",
            "questionFrontendId": "162",
            "title": "Find Peak Element",
            "titleSlug": "find-peak-element",
            "acRate": "45.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "163",
            "questionFrontendId": "163",
            "title": "Missing Ranges",
            "titleSlug": "missing-ranges",
            "acRate": "33.4%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "166",
            "questionFrontendId": "166",
            "title": "Fraction to Recurring Decimal",
            "titleSlug": "fraction-to-recurring-decimal",
            "acRate": "24.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "167",
            "questionFrontendId": "167",
            "title": "Two Sum II - Input Array Is Sorted",
            "titleSlug": "two-sum-ii-input-array-is-sorted",
            "acRate": "61.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "168",
            "questionFrontendId": "168",
            "title": "Excel Sheet Column Title",
            "titleSlug": "excel-sheet-column-title",
            "acRate": "40.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "169",
            "questionFrontendId": "169",
            "title": "Majority Element",
            "titleSlug": "majority-element",
            "acRate": "64.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "171",
            "questionFrontendId": "171",
            "title": "Excel Sheet Column Number",
            "titleSlug": "excel-sheet-column-number",
            "acRate": "63.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "173",
            "questionFrontendId": "173",
            "title": "Binary Search Tree Iterator",
            "titleSlug": "binary-search-tree-iterator",
            "acRate": "71.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "175",
            "questionFrontendId": "175",
            "title": "Combine Two Tables",
            "titleSlug": "combine-two-tables",
            "acRate": "75.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "179",
            "questionFrontendId": "179",
            "title": "Largest Number",
            "titleSlug": "largest-number",
            "acRate": "35.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "180",
            "questionFrontendId": "180",
            "title": "Consecutive Numbers",
            "titleSlug": "consecutive-numbers",
            "acRate": "47.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "185",
            "questionFrontendId": "185",
            "title": "Department Top Three Salaries",
            "titleSlug": "department-top-three-salaries",
            "acRate": "52.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "188",
            "questionFrontendId": "188",
            "title": "Best Time to Buy and Sell Stock IV",
            "titleSlug": "best-time-to-buy-and-sell-stock-iv",
            "acRate": "42.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "189",
            "questionFrontendId": "189",
            "title": "Rotate Array",
            "titleSlug": "rotate-array",
            "acRate": "40.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "190",
            "questionFrontendId": "190",
            "title": "Reverse Bits",
            "titleSlug": "reverse-bits",
            "acRate": "57.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "191",
            "questionFrontendId": "191",
            "title": "Number of 1 Bits",
            "titleSlug": "number-of-1-bits",
            "acRate": "70.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "198",
            "questionFrontendId": "198",
            "title": "House Robber",
            "titleSlug": "house-robber",
            "acRate": "50.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "199",
            "questionFrontendId": "199",
            "title": "Binary Tree Right Side View",
            "titleSlug": "binary-tree-right-side-view",
            "acRate": "62.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "200",
            "questionFrontendId": "200",
            "title": "Number of Islands",
            "titleSlug": "number-of-islands",
            "acRate": "58.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "202",
            "questionFrontendId": "202",
            "title": "Happy Number",
            "titleSlug": "happy-number",
            "acRate": "55.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "203",
            "questionFrontendId": "203",
            "title": "Remove Linked List Elements",
            "titleSlug": "remove-linked-list-elements",
            "acRate": "48.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "206",
            "questionFrontendId": "206",
            "title": "Reverse Linked List",
            "titleSlug": "reverse-linked-list",
            "acRate": "75.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "207",
            "questionFrontendId": "207",
            "title": "Course Schedule",
            "titleSlug": "course-schedule",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "208",
            "questionFrontendId": "208",
            "title": "Implement Trie (Prefix Tree)",
            "titleSlug": "implement-trie-prefix-tree",
            "acRate": "64.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "209",
            "questionFrontendId": "209",
            "title": "Minimum Size Subarray Sum",
            "titleSlug": "minimum-size-subarray-sum",
            "acRate": "46.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "210",
            "questionFrontendId": "210",
            "title": "Course Schedule II",
            "titleSlug": "course-schedule-ii",
            "acRate": "50.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "211",
            "questionFrontendId": "211",
            "title": "Design Add and Search Words Data Structure",
            "titleSlug": "design-add-and-search-words-data-structure",
            "acRate": "45.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "212",
            "questionFrontendId": "212",
            "title": "Word Search II",
            "titleSlug": "word-search-ii",
            "acRate": "36.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "213",
            "questionFrontendId": "213",
            "title": "House Robber II",
            "titleSlug": "house-robber-ii",
            "acRate": "41.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "215",
            "questionFrontendId": "215",
            "title": "Kth Largest Element in an Array",
            "titleSlug": "kth-largest-element-in-an-array",
            "acRate": "66.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "217",
            "questionFrontendId": "217",
            "title": "Contains Duplicate",
            "titleSlug": "contains-duplicate",
            "acRate": "61.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "218",
            "questionFrontendId": "218",
            "title": "The Skyline Problem",
            "titleSlug": "the-skyline-problem",
            "acRate": "42.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Line Sweep",
                    "slug": "line-sweep"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "219",
            "questionFrontendId": "219",
            "title": "Contains Duplicate II",
            "titleSlug": "contains-duplicate-ii",
            "acRate": "44.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "221",
            "questionFrontendId": "221",
            "title": "Maximal Square",
            "titleSlug": "maximal-square",
            "acRate": "46.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "223",
            "questionFrontendId": "223",
            "title": "Rectangle Area",
            "titleSlug": "rectangle-area",
            "acRate": "46.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "224",
            "questionFrontendId": "224",
            "title": "Basic Calculator",
            "titleSlug": "basic-calculator",
            "acRate": "43.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "226",
            "questionFrontendId": "226",
            "title": "Invert Binary Tree",
            "titleSlug": "invert-binary-tree",
            "acRate": "76.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "227",
            "questionFrontendId": "227",
            "title": "Basic Calculator II",
            "titleSlug": "basic-calculator-ii",
            "acRate": "43.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "229",
            "questionFrontendId": "229",
            "title": "Majority Element II",
            "titleSlug": "majority-element-ii",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "230",
            "questionFrontendId": "230",
            "title": "Kth Smallest Element in a BST",
            "titleSlug": "kth-smallest-element-in-a-bst",
            "acRate": "72.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "234",
            "questionFrontendId": "234",
            "title": "Palindrome Linked List",
            "titleSlug": "palindrome-linked-list",
            "acRate": "51.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "235",
            "questionFrontendId": "235",
            "title": "Lowest Common Ancestor of a Binary Search Tree",
            "titleSlug": "lowest-common-ancestor-of-a-binary-search-tree",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "236",
            "questionFrontendId": "236",
            "title": "Lowest Common Ancestor of a Binary Tree",
            "titleSlug": "lowest-common-ancestor-of-a-binary-tree",
            "acRate": "61.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "237",
            "questionFrontendId": "237",
            "title": "Delete Node in a Linked List",
            "titleSlug": "delete-node-in-a-linked-list",
            "acRate": "78.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "238",
            "questionFrontendId": "238",
            "title": "Product of Array Except Self",
            "titleSlug": "product-of-array-except-self",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "239",
            "questionFrontendId": "239",
            "title": "Sliding Window Maximum",
            "titleSlug": "sliding-window-maximum",
            "acRate": "46.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "240",
            "questionFrontendId": "240",
            "title": "Search a 2D Matrix II",
            "titleSlug": "search-a-2d-matrix-ii",
            "acRate": "52.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "241",
            "questionFrontendId": "241",
            "title": "Different Ways to Add Parentheses",
            "titleSlug": "different-ways-to-add-parentheses",
            "acRate": "65.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "242",
            "questionFrontendId": "242",
            "title": "Valid Anagram",
            "titleSlug": "valid-anagram",
            "acRate": "64.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "246",
            "questionFrontendId": "246",
            "title": "Strobogrammatic Number",
            "titleSlug": "strobogrammatic-number",
            "acRate": "47.7%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "247",
            "questionFrontendId": "247",
            "title": "Strobogrammatic Number II",
            "titleSlug": "strobogrammatic-number-ii",
            "acRate": "52.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "249",
            "questionFrontendId": "249",
            "title": "Group Shifted Strings",
            "titleSlug": "group-shifted-strings",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "252",
            "questionFrontendId": "252",
            "title": "Meeting Rooms",
            "titleSlug": "meeting-rooms",
            "acRate": "57.9%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "253",
            "questionFrontendId": "253",
            "title": "Meeting Rooms II",
            "titleSlug": "meeting-rooms-ii",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "257",
            "questionFrontendId": "257",
            "title": "Binary Tree Paths",
            "titleSlug": "binary-tree-paths",
            "acRate": "63.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "260",
            "questionFrontendId": "260",
            "title": "Single Number III",
            "titleSlug": "single-number-iii",
            "acRate": "68.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "261",
            "questionFrontendId": "261",
            "title": "Graph Valid Tree",
            "titleSlug": "graph-valid-tree",
            "acRate": "47.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "263",
            "questionFrontendId": "263",
            "title": "Ugly Number",
            "titleSlug": "ugly-number",
            "acRate": "42.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "265",
            "questionFrontendId": "265",
            "title": "Paint House II",
            "titleSlug": "paint-house-ii",
            "acRate": "54.5%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "266",
            "questionFrontendId": "266",
            "title": "Palindrome Permutation",
            "titleSlug": "palindrome-permutation",
            "acRate": "67.0%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "267",
            "questionFrontendId": "267",
            "title": "Palindrome Permutation II",
            "titleSlug": "palindrome-permutation-ii",
            "acRate": "41.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "268",
            "questionFrontendId": "268",
            "title": "Missing Number",
            "titleSlug": "missing-number",
            "acRate": "66.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "269",
            "questionFrontendId": "269",
            "title": "Alien Dictionary",
            "titleSlug": "alien-dictionary",
            "acRate": "35.7%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "270",
            "questionFrontendId": "270",
            "title": "Closest Binary Search Tree Value",
            "titleSlug": "closest-binary-search-tree-value",
            "acRate": "52.1%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "271",
            "questionFrontendId": "271",
            "title": "Encode and Decode Strings",
            "titleSlug": "encode-and-decode-strings",
            "acRate": "46.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "273",
            "questionFrontendId": "273",
            "title": "Integer to English Words",
            "titleSlug": "integer-to-english-words",
            "acRate": "30.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "274",
            "questionFrontendId": "274",
            "title": "H-Index",
            "titleSlug": "h-index",
            "acRate": "38.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting Sort",
                    "slug": "counting-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "275",
            "questionFrontendId": "275",
            "title": "H-Index II",
            "titleSlug": "h-index-ii",
            "acRate": "38.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "277",
            "questionFrontendId": "277",
            "title": "Find the Celebrity",
            "titleSlug": "find-the-celebrity",
            "acRate": "47.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "278",
            "questionFrontendId": "278",
            "title": "First Bad Version",
            "titleSlug": "first-bad-version",
            "acRate": "44.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "282",
            "questionFrontendId": "282",
            "title": "Expression Add Operators",
            "titleSlug": "expression-add-operators",
            "acRate": "39.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "283",
            "questionFrontendId": "283",
            "title": "Move Zeroes",
            "titleSlug": "move-zeroes",
            "acRate": "61.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "284",
            "questionFrontendId": "284",
            "title": "Peeking Iterator",
            "titleSlug": "peeking-iterator",
            "acRate": "59.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "285",
            "questionFrontendId": "285",
            "title": "Inorder Successor in BST",
            "titleSlug": "inorder-successor-in-bst",
            "acRate": "49.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "286",
            "questionFrontendId": "286",
            "title": "Walls and Gates",
            "titleSlug": "walls-and-gates",
            "acRate": "61.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "287",
            "questionFrontendId": "287",
            "title": "Find the Duplicate Number",
            "titleSlug": "find-the-duplicate-number",
            "acRate": "59.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "290",
            "questionFrontendId": "290",
            "title": "Word Pattern",
            "titleSlug": "word-pattern",
            "acRate": "41.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "295",
            "questionFrontendId": "295",
            "title": "Find Median from Data Stream",
            "titleSlug": "find-median-from-data-stream",
            "acRate": "51.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "296",
            "questionFrontendId": "296",
            "title": "Best Meeting Point",
            "titleSlug": "best-meeting-point",
            "acRate": "60.8%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "297",
            "questionFrontendId": "297",
            "title": "Serialize and Deserialize Binary Tree",
            "titleSlug": "serialize-and-deserialize-binary-tree",
            "acRate": "56.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "298",
            "questionFrontendId": "298",
            "title": "Binary Tree Longest Consecutive Sequence",
            "titleSlug": "binary-tree-longest-consecutive-sequence",
            "acRate": "53.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "299",
            "questionFrontendId": "299",
            "title": "Bulls and Cows",
            "titleSlug": "bulls-and-cows",
            "acRate": "50.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "300",
            "questionFrontendId": "300",
            "title": "Longest Increasing Subsequence",
            "titleSlug": "longest-increasing-subsequence",
            "acRate": "55.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "301",
            "questionFrontendId": "301",
            "title": "Remove Invalid Parentheses",
            "titleSlug": "remove-invalid-parentheses",
            "acRate": "48.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "303",
            "questionFrontendId": "303",
            "title": "Range Sum Query - Immutable",
            "titleSlug": "range-sum-query-immutable",
            "acRate": "62.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "304",
            "questionFrontendId": "304",
            "title": "Range Sum Query 2D - Immutable",
            "titleSlug": "range-sum-query-2d-immutable",
            "acRate": "54.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "310",
            "questionFrontendId": "310",
            "title": "Minimum Height Trees",
            "titleSlug": "minimum-height-trees",
            "acRate": "38.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "311",
            "questionFrontendId": "311",
            "title": "Sparse Matrix Multiplication",
            "titleSlug": "sparse-matrix-multiplication",
            "acRate": "68.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "314",
            "questionFrontendId": "314",
            "title": "Binary Tree Vertical Order Traversal",
            "titleSlug": "binary-tree-vertical-order-traversal",
            "acRate": "53.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "317",
            "questionFrontendId": "317",
            "title": "Shortest Distance from All Buildings",
            "titleSlug": "shortest-distance-from-all-buildings",
            "acRate": "43.0%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "319",
            "questionFrontendId": "319",
            "title": "Bulb Switcher",
            "titleSlug": "bulb-switcher",
            "acRate": "52.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Brainteaser",
                    "slug": "brainteaser"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "322",
            "questionFrontendId": "322",
            "title": "Coin Change",
            "titleSlug": "coin-change",
            "acRate": "43.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "323",
            "questionFrontendId": "323",
            "title": "Number of Connected Components in an Undirected Graph",
            "titleSlug": "number-of-connected-components-in-an-undirected-graph",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "325",
            "questionFrontendId": "325",
            "title": "Maximum Size Subarray Sum Equals k",
            "titleSlug": "maximum-size-subarray-sum-equals-k",
            "acRate": "49.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "328",
            "questionFrontendId": "328",
            "title": "Odd Even Linked List",
            "titleSlug": "odd-even-linked-list",
            "acRate": "61.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "329",
            "questionFrontendId": "329",
            "title": "Longest Increasing Path in a Matrix",
            "titleSlug": "longest-increasing-path-in-a-matrix",
            "acRate": "53.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "332",
            "questionFrontendId": "332",
            "title": "Reconstruct Itinerary",
            "titleSlug": "reconstruct-itinerary",
            "acRate": "43.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Eulerian Circuit",
                    "slug": "eulerian-circuit"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "333",
            "questionFrontendId": "333",
            "title": "Largest BST Subtree",
            "titleSlug": "largest-bst-subtree",
            "acRate": "43.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "334",
            "questionFrontendId": "334",
            "title": "Increasing Triplet Subsequence",
            "titleSlug": "increasing-triplet-subsequence",
            "acRate": "40.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "339",
            "questionFrontendId": "339",
            "title": "Nested List Weight Sum",
            "titleSlug": "nested-list-weight-sum",
            "acRate": "83.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "341",
            "questionFrontendId": "341",
            "title": "Flatten Nested List Iterator",
            "titleSlug": "flatten-nested-list-iterator",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "343",
            "questionFrontendId": "343",
            "title": "Integer Break",
            "titleSlug": "integer-break",
            "acRate": "60.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "344",
            "questionFrontendId": "344",
            "title": "Reverse String",
            "titleSlug": "reverse-string",
            "acRate": "77.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "346",
            "questionFrontendId": "346",
            "title": "Moving Average from Data Stream",
            "titleSlug": "moving-average-from-data-stream",
            "acRate": "78.1%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "347",
            "questionFrontendId": "347",
            "title": "Top K Frequent Elements",
            "titleSlug": "top-k-frequent-elements",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "348",
            "questionFrontendId": "348",
            "title": "Design Tic-Tac-Toe",
            "titleSlug": "design-tic-tac-toe",
            "acRate": "57.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "349",
            "questionFrontendId": "349",
            "title": "Intersection of Two Arrays",
            "titleSlug": "intersection-of-two-arrays",
            "acRate": "72.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "350",
            "questionFrontendId": "350",
            "title": "Intersection of Two Arrays II",
            "titleSlug": "intersection-of-two-arrays-ii",
            "acRate": "56.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "366",
            "questionFrontendId": "366",
            "title": "Find Leaves of Binary Tree",
            "titleSlug": "find-leaves-of-binary-tree",
            "acRate": "80.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "367",
            "questionFrontendId": "367",
            "title": "Valid Perfect Square",
            "titleSlug": "valid-perfect-square",
            "acRate": "43.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "374",
            "questionFrontendId": "374",
            "title": "Guess Number Higher or Lower",
            "titleSlug": "guess-number-higher-or-lower",
            "acRate": "53.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "377",
            "questionFrontendId": "377",
            "title": "Combination Sum IV",
            "titleSlug": "combination-sum-iv",
            "acRate": "54.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "378",
            "questionFrontendId": "378",
            "title": "Kth Smallest Element in a Sorted Matrix",
            "titleSlug": "kth-smallest-element-in-a-sorted-matrix",
            "acRate": "62.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "380",
            "questionFrontendId": "380",
            "title": "Insert Delete GetRandom O(1)",
            "titleSlug": "insert-delete-getrandom-o1",
            "acRate": "54.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "381",
            "questionFrontendId": "381",
            "title": "Insert Delete GetRandom O(1) - Duplicates allowed",
            "titleSlug": "insert-delete-getrandom-o1-duplicates-allowed",
            "acRate": "35.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "383",
            "questionFrontendId": "383",
            "title": "Ransom Note",
            "titleSlug": "ransom-note",
            "acRate": "60.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "384",
            "questionFrontendId": "384",
            "title": "Shuffle an Array",
            "titleSlug": "shuffle-an-array",
            "acRate": "58.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "386",
            "questionFrontendId": "386",
            "title": "Lexicographical Numbers",
            "titleSlug": "lexicographical-numbers",
            "acRate": "63.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "388",
            "questionFrontendId": "388",
            "title": "Longest Absolute File Path",
            "titleSlug": "longest-absolute-file-path",
            "acRate": "47.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "389",
            "questionFrontendId": "389",
            "title": "Find the Difference",
            "titleSlug": "find-the-difference",
            "acRate": "59.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "392",
            "questionFrontendId": "392",
            "title": "Is Subsequence",
            "titleSlug": "is-subsequence",
            "acRate": "47.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "394",
            "questionFrontendId": "394",
            "title": "Decode String",
            "titleSlug": "decode-string",
            "acRate": "59.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "398",
            "questionFrontendId": "398",
            "title": "Random Pick Index",
            "titleSlug": "random-pick-index",
            "acRate": "63.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Reservoir Sampling",
                    "slug": "reservoir-sampling"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "399",
            "questionFrontendId": "399",
            "title": "Evaluate Division",
            "titleSlug": "evaluate-division",
            "acRate": "61.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "402",
            "questionFrontendId": "402",
            "title": "Remove K Digits",
            "titleSlug": "remove-k-digits",
            "acRate": "31.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "404",
            "questionFrontendId": "404",
            "title": "Sum of Left Leaves",
            "titleSlug": "sum-of-left-leaves",
            "acRate": "57.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "406",
            "questionFrontendId": "406",
            "title": "Queue Reconstruction by Height",
            "titleSlug": "queue-reconstruction-by-height",
            "acRate": "73.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "408",
            "questionFrontendId": "408",
            "title": "Valid Word Abbreviation",
            "titleSlug": "valid-word-abbreviation",
            "acRate": "35.5%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "410",
            "questionFrontendId": "410",
            "title": "Split Array Largest Sum",
            "titleSlug": "split-array-largest-sum",
            "acRate": "55.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "412",
            "questionFrontendId": "412",
            "title": "Fizz Buzz",
            "titleSlug": "fizz-buzz",
            "acRate": "71.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "415",
            "questionFrontendId": "415",
            "title": "Add Strings",
            "titleSlug": "add-strings",
            "acRate": "51.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "416",
            "questionFrontendId": "416",
            "title": "Partition Equal Subset Sum",
            "titleSlug": "partition-equal-subset-sum",
            "acRate": "46.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "419",
            "questionFrontendId": "419",
            "title": "Battleships in a Board",
            "titleSlug": "battleships-in-a-board",
            "acRate": "75.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "424",
            "questionFrontendId": "424",
            "title": "Longest Repeating Character Replacement",
            "titleSlug": "longest-repeating-character-replacement",
            "acRate": "53.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "435",
            "questionFrontendId": "435",
            "title": "Non-overlapping Intervals",
            "titleSlug": "non-overlapping-intervals",
            "acRate": "52.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "437",
            "questionFrontendId": "437",
            "title": "Path Sum III",
            "titleSlug": "path-sum-iii",
            "acRate": "46.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "438",
            "questionFrontendId": "438",
            "title": "Find All Anagrams in a String",
            "titleSlug": "find-all-anagrams-in-a-string",
            "acRate": "50.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "442",
            "questionFrontendId": "442",
            "title": "Find All Duplicates in an Array",
            "titleSlug": "find-all-duplicates-in-an-array",
            "acRate": "73.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "443",
            "questionFrontendId": "443",
            "title": "String Compression",
            "titleSlug": "string-compression",
            "acRate": "54.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "448",
            "questionFrontendId": "448",
            "title": "Find All Numbers Disappeared in an Array",
            "titleSlug": "find-all-numbers-disappeared-in-an-array",
            "acRate": "60.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "450",
            "questionFrontendId": "450",
            "title": "Delete Node in a BST",
            "titleSlug": "delete-node-in-a-bst",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "451",
            "questionFrontendId": "451",
            "title": "Sort Characters By Frequency",
            "titleSlug": "sort-characters-by-frequency",
            "acRate": "72.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "461",
            "questionFrontendId": "461",
            "title": "Hamming Distance",
            "titleSlug": "hamming-distance",
            "acRate": "75.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "463",
            "questionFrontendId": "463",
            "title": "Island Perimeter",
            "titleSlug": "island-perimeter",
            "acRate": "70.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "468",
            "questionFrontendId": "468",
            "title": "Validate IP Address",
            "titleSlug": "validate-ip-address",
            "acRate": "26.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "477",
            "questionFrontendId": "477",
            "title": "Total Hamming Distance",
            "titleSlug": "total-hamming-distance",
            "acRate": "52.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "480",
            "questionFrontendId": "480",
            "title": "Sliding Window Median",
            "titleSlug": "sliding-window-median",
            "acRate": "39.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "490",
            "questionFrontendId": "490",
            "title": "The Maze",
            "titleSlug": "the-maze",
            "acRate": "57.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "494",
            "questionFrontendId": "494",
            "title": "Target Sum",
            "titleSlug": "target-sum",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "496",
            "questionFrontendId": "496",
            "title": "Next Greater Element I",
            "titleSlug": "next-greater-element-i",
            "acRate": "72.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "498",
            "questionFrontendId": "498",
            "title": "Diagonal Traverse",
            "titleSlug": "diagonal-traverse",
            "acRate": "59.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "501",
            "questionFrontendId": "501",
            "title": "Find Mode in Binary Search Tree",
            "titleSlug": "find-mode-in-binary-search-tree",
            "acRate": "55.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "503",
            "questionFrontendId": "503",
            "title": "Next Greater Element II",
            "titleSlug": "next-greater-element-ii",
            "acRate": "63.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "515",
            "questionFrontendId": "515",
            "title": "Find Largest Value in Each Tree Row",
            "titleSlug": "find-largest-value-in-each-tree-row",
            "acRate": "65.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "516",
            "questionFrontendId": "516",
            "title": "Longest Palindromic Subsequence",
            "titleSlug": "longest-palindromic-subsequence",
            "acRate": "62.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "518",
            "questionFrontendId": "518",
            "title": "Coin Change II",
            "titleSlug": "coin-change-ii",
            "acRate": "63.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "523",
            "questionFrontendId": "523",
            "title": "Continuous Subarray Sum",
            "titleSlug": "continuous-subarray-sum",
            "acRate": "28.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "525",
            "questionFrontendId": "525",
            "title": "Contiguous Array",
            "titleSlug": "contiguous-array",
            "acRate": "46.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "528",
            "questionFrontendId": "1721",
            "title": "Swapping Nodes in a Linked List",
            "titleSlug": "swapping-nodes-in-a-linked-list",
            "acRate": "68.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "529",
            "questionFrontendId": "529",
            "title": "Minesweeper",
            "titleSlug": "minesweeper",
            "acRate": "66.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "530",
            "questionFrontendId": "530",
            "title": "Minimum Absolute Difference in BST",
            "titleSlug": "minimum-absolute-difference-in-bst",
            "acRate": "58.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "535",
            "questionFrontendId": "535",
            "title": "Encode and Decode TinyURL",
            "titleSlug": "encode-and-decode-tinyurl",
            "acRate": "86.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "536",
            "questionFrontendId": "536",
            "title": "Construct Binary Tree from String",
            "titleSlug": "construct-binary-tree-from-string",
            "acRate": "56.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "538",
            "questionFrontendId": "538",
            "title": "Convert BST to Greater Tree",
            "titleSlug": "convert-bst-to-greater-tree",
            "acRate": "68.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "540",
            "questionFrontendId": "540",
            "title": "Single Element in a Sorted Array",
            "titleSlug": "single-element-in-a-sorted-array",
            "acRate": "59.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "543",
            "questionFrontendId": "543",
            "title": "Diameter of Binary Tree",
            "titleSlug": "diameter-of-binary-tree",
            "acRate": "59.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "545",
            "questionFrontendId": "545",
            "title": "Boundary of Binary Tree",
            "titleSlug": "boundary-of-binary-tree",
            "acRate": "45.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "547",
            "questionFrontendId": "547",
            "title": "Number of Provinces",
            "titleSlug": "number-of-provinces",
            "acRate": "65.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "554",
            "questionFrontendId": "554",
            "title": "Brick Wall",
            "titleSlug": "brick-wall",
            "acRate": "54.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "556",
            "questionFrontendId": "556",
            "title": "Next Greater Element III",
            "titleSlug": "next-greater-element-iii",
            "acRate": "33.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "557",
            "questionFrontendId": "557",
            "title": "Reverse Words in a String III",
            "titleSlug": "reverse-words-in-a-string-iii",
            "acRate": "83.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "560",
            "questionFrontendId": "560",
            "title": "Subarray Sum Equals K",
            "titleSlug": "subarray-sum-equals-k",
            "acRate": "43.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "567",
            "questionFrontendId": "567",
            "title": "Permutation in String",
            "titleSlug": "permutation-in-string",
            "acRate": "44.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "572",
            "questionFrontendId": "572",
            "title": "Subtree of Another Tree",
            "titleSlug": "subtree-of-another-tree",
            "acRate": "47.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "578",
            "questionFrontendId": "578",
            "title": "Get Highest Answer Rate Question",
            "titleSlug": "get-highest-answer-rate-question",
            "acRate": "40.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "583",
            "questionFrontendId": "583",
            "title": "Delete Operation for Two Strings",
            "titleSlug": "delete-operation-for-two-strings",
            "acRate": "61.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "584",
            "questionFrontendId": "584",
            "title": "Find Customer Referee",
            "titleSlug": "find-customer-referee",
            "acRate": "69.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "593",
            "questionFrontendId": "593",
            "title": "Valid Square",
            "titleSlug": "valid-square",
            "acRate": "44.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "595",
            "questionFrontendId": "595",
            "title": "Big Countries",
            "titleSlug": "big-countries",
            "acRate": "68.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "597",
            "questionFrontendId": "597",
            "title": "Friend Requests I: Overall Acceptance Rate",
            "titleSlug": "friend-requests-i-overall-acceptance-rate",
            "acRate": "42.0%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "602",
            "questionFrontendId": "602",
            "title": "Friend Requests II: Who Has the Most Friends",
            "titleSlug": "friend-requests-ii-who-has-the-most-friends",
            "acRate": "57.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "605",
            "questionFrontendId": "605",
            "title": "Can Place Flowers",
            "titleSlug": "can-place-flowers",
            "acRate": "29.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "606",
            "questionFrontendId": "606",
            "title": "Construct String from Binary Tree",
            "titleSlug": "construct-string-from-binary-tree",
            "acRate": "69.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "611",
            "questionFrontendId": "611",
            "title": "Valid Triangle Number",
            "titleSlug": "valid-triangle-number",
            "acRate": "51.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "616",
            "questionFrontendId": "616",
            "title": "Add Bold Tag in String",
            "titleSlug": "add-bold-tag-in-string",
            "acRate": "49.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "617",
            "questionFrontendId": "617",
            "title": "Merge Two Binary Trees",
            "titleSlug": "merge-two-binary-trees",
            "acRate": "78.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "621",
            "questionFrontendId": "621",
            "title": "Task Scheduler",
            "titleSlug": "task-scheduler",
            "acRate": "58.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "623",
            "questionFrontendId": "623",
            "title": "Add One Row to Tree",
            "titleSlug": "add-one-row-to-tree",
            "acRate": "59.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "633",
            "questionFrontendId": "633",
            "title": "Sum of Square Numbers",
            "titleSlug": "sum-of-square-numbers",
            "acRate": "34.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "636",
            "questionFrontendId": "636",
            "title": "Exclusive Time of Functions",
            "titleSlug": "exclusive-time-of-functions",
            "acRate": "62.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "637",
            "questionFrontendId": "637",
            "title": "Average of Levels in Binary Tree",
            "titleSlug": "average-of-levels-in-binary-tree",
            "acRate": "72.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "639",
            "questionFrontendId": "639",
            "title": "Decode Ways II",
            "titleSlug": "decode-ways-ii",
            "acRate": "30.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "642",
            "questionFrontendId": "642",
            "title": "Design Search Autocomplete System",
            "titleSlug": "design-search-autocomplete-system",
            "acRate": "48.9%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "643",
            "questionFrontendId": "643",
            "title": "Maximum Average Subarray I",
            "titleSlug": "maximum-average-subarray-i",
            "acRate": "43.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "647",
            "questionFrontendId": "647",
            "title": "Palindromic Substrings",
            "titleSlug": "palindromic-substrings",
            "acRate": "69.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "649",
            "questionFrontendId": "649",
            "title": "Dota2 Senate",
            "titleSlug": "dota2-senate",
            "acRate": "47.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "653",
            "questionFrontendId": "653",
            "title": "Two Sum IV - Input is a BST",
            "titleSlug": "two-sum-iv-input-is-a-bst",
            "acRate": "61.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "658",
            "questionFrontendId": "658",
            "title": "Find K Closest Elements",
            "titleSlug": "find-k-closest-elements",
            "acRate": "47.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "662",
            "questionFrontendId": "662",
            "title": "Maximum Width of Binary Tree",
            "titleSlug": "maximum-width-of-binary-tree",
            "acRate": "42.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "670",
            "questionFrontendId": "670",
            "title": "Maximum Swap",
            "titleSlug": "maximum-swap",
            "acRate": "48.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "673",
            "questionFrontendId": "673",
            "title": "Number of Longest Increasing Subsequence",
            "titleSlug": "number-of-longest-increasing-subsequence",
            "acRate": "47.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "674",
            "questionFrontendId": "674",
            "title": "Longest Continuous Increasing Subsequence",
            "titleSlug": "longest-continuous-increasing-subsequence",
            "acRate": "50.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "676",
            "questionFrontendId": "676",
            "title": "Implement Magic Dictionary",
            "titleSlug": "implement-magic-dictionary",
            "acRate": "57.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "678",
            "questionFrontendId": "678",
            "title": "Valid Parenthesis String",
            "titleSlug": "valid-parenthesis-string",
            "acRate": "34.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "680",
            "questionFrontendId": "680",
            "title": "Valid Palindrome II",
            "titleSlug": "valid-palindrome-ii",
            "acRate": "40.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "684",
            "questionFrontendId": "684",
            "title": "Redundant Connection",
            "titleSlug": "redundant-connection",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "687",
            "questionFrontendId": "687",
            "title": "Longest Univalue Path",
            "titleSlug": "longest-univalue-path",
            "acRate": "41.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "688",
            "questionFrontendId": "688",
            "title": "Knight Probability in Chessboard",
            "titleSlug": "knight-probability-in-chessboard",
            "acRate": "56.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "689",
            "questionFrontendId": "689",
            "title": "Maximum Sum of 3 Non-Overlapping Subarrays",
            "titleSlug": "maximum-sum-of-3-non-overlapping-subarrays",
            "acRate": "49.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "691",
            "questionFrontendId": "691",
            "title": "Stickers to Spell Word",
            "titleSlug": "stickers-to-spell-word",
            "acRate": "48.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "692",
            "questionFrontendId": "692",
            "title": "Top K Frequent Words",
            "titleSlug": "top-k-frequent-words",
            "acRate": "57.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "695",
            "questionFrontendId": "695",
            "title": "Max Area of Island",
            "titleSlug": "max-area-of-island",
            "acRate": "71.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "698",
            "questionFrontendId": "698",
            "title": "Partition to K Equal Sum Subsets",
            "titleSlug": "partition-to-k-equal-sum-subsets",
            "acRate": "38.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "711",
            "questionFrontendId": "711",
            "title": "Number of Distinct Islands II",
            "titleSlug": "number-of-distinct-islands-ii",
            "acRate": "52.8%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "713",
            "questionFrontendId": "713",
            "title": "Subarray Product Less Than K",
            "titleSlug": "subarray-product-less-than-k",
            "acRate": "47.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "714",
            "questionFrontendId": "714",
            "title": "Best Time to Buy and Sell Stock with Transaction Fee",
            "titleSlug": "best-time-to-buy-and-sell-stock-with-transaction-fee",
            "acRate": "68.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "716",
            "questionFrontendId": "716",
            "title": "Max Stack",
            "titleSlug": "max-stack",
            "acRate": "45.0%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "721",
            "questionFrontendId": "721",
            "title": "Accounts Merge",
            "titleSlug": "accounts-merge",
            "acRate": "56.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "724",
            "questionFrontendId": "724",
            "title": "Find Pivot Index",
            "titleSlug": "find-pivot-index",
            "acRate": "57.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "727",
            "questionFrontendId": "727",
            "title": "Minimum Window Subsequence",
            "titleSlug": "minimum-window-subsequence",
            "acRate": "43.3%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "733",
            "questionFrontendId": "733",
            "title": "Flood Fill",
            "titleSlug": "flood-fill",
            "acRate": "63.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "735",
            "questionFrontendId": "735",
            "title": "Asteroid Collision",
            "titleSlug": "asteroid-collision",
            "acRate": "44.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "739",
            "questionFrontendId": "739",
            "title": "Daily Temperatures",
            "titleSlug": "daily-temperatures",
            "acRate": "66.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "746",
            "questionFrontendId": "745",
            "title": "Prefix and Suffix Search",
            "titleSlug": "prefix-and-suffix-search",
            "acRate": "41.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "751",
            "questionFrontendId": "750",
            "title": "Number Of Corner Rectangles",
            "titleSlug": "number-of-corner-rectangles",
            "acRate": "67.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "758",
            "questionFrontendId": "426",
            "title": "Convert Binary Search Tree to Sorted Doubly Linked List",
            "titleSlug": "convert-binary-search-tree-to-sorted-doubly-linked-list",
            "acRate": "64.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "765",
            "questionFrontendId": "428",
            "title": "Serialize and Deserialize N-ary Tree",
            "titleSlug": "serialize-and-deserialize-n-ary-tree",
            "acRate": "66.7%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "766",
            "questionFrontendId": "430",
            "title": "Flatten a Multilevel Doubly Linked List",
            "titleSlug": "flatten-a-multilevel-doubly-linked-list",
            "acRate": "60.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "768",
            "questionFrontendId": "763",
            "title": "Partition Labels",
            "titleSlug": "partition-labels",
            "acRate": "79.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "769",
            "questionFrontendId": "764",
            "title": "Largest Plus Sign",
            "titleSlug": "largest-plus-sign",
            "acRate": "48.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "777",
            "questionFrontendId": "766",
            "title": "Toeplitz Matrix",
            "titleSlug": "toeplitz-matrix",
            "acRate": "68.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "778",
            "questionFrontendId": "767",
            "title": "Reorganize String",
            "titleSlug": "reorganize-string",
            "acRate": "54.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "785",
            "questionFrontendId": "772",
            "title": "Basic Calculator III",
            "titleSlug": "basic-calculator-iii",
            "acRate": "50.2%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "789",
            "questionFrontendId": "703",
            "title": "Kth Largest Element in a Stream",
            "titleSlug": "kth-largest-element-in-a-stream",
            "acRate": "56.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "792",
            "questionFrontendId": "704",
            "title": "Binary Search",
            "titleSlug": "binary-search",
            "acRate": "57.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "794",
            "questionFrontendId": "778",
            "title": "Swim in Rising Water",
            "titleSlug": "swim-in-rising-water",
            "acRate": "60.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "795",
            "questionFrontendId": "779",
            "title": "K-th Symbol in Grammar",
            "titleSlug": "k-th-symbol-in-grammar",
            "acRate": "46.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "800",
            "questionFrontendId": "784",
            "title": "Letter Case Permutation",
            "titleSlug": "letter-case-permutation",
            "acRate": "74.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "801",
            "questionFrontendId": "785",
            "title": "Is Graph Bipartite?",
            "titleSlug": "is-graph-bipartite",
            "acRate": "55.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "803",
            "questionFrontendId": "787",
            "title": "Cheapest Flights Within K Stops",
            "titleSlug": "cheapest-flights-within-k-stops",
            "acRate": "39.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "804",
            "questionFrontendId": "788",
            "title": "Rotated Digits",
            "titleSlug": "rotated-digits",
            "acRate": "56.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "807",
            "questionFrontendId": "791",
            "title": "Custom Sort String",
            "titleSlug": "custom-sort-string",
            "acRate": "69.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "817",
            "questionFrontendId": "706",
            "title": "Design HashMap",
            "titleSlug": "design-hashmap",
            "acRate": "65.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "819",
            "questionFrontendId": "801",
            "title": "Minimum Swaps To Make Sequences Increasing",
            "titleSlug": "minimum-swaps-to-make-sequences-increasing",
            "acRate": "39.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "832",
            "questionFrontendId": "814",
            "title": "Binary Tree Pruning",
            "titleSlug": "binary-tree-pruning",
            "acRate": "72.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "850",
            "questionFrontendId": "708",
            "title": "Insert into a Sorted Circular Linked List",
            "titleSlug": "insert-into-a-sorted-circular-linked-list",
            "acRate": "35.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "851",
            "questionFrontendId": "824",
            "title": "Goat Latin",
            "titleSlug": "goat-latin",
            "acRate": "68.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "852",
            "questionFrontendId": "825",
            "title": "Friends Of Appropriate Ages",
            "titleSlug": "friends-of-appropriate-ages",
            "acRate": "47.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "854",
            "questionFrontendId": "827",
            "title": "Making A Large Island",
            "titleSlug": "making-a-large-island",
            "acRate": "46.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "860",
            "questionFrontendId": "622",
            "title": "Design Circular Queue",
            "titleSlug": "design-circular-queue",
            "acRate": "51.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "863",
            "questionFrontendId": "834",
            "title": "Sum of Distances in Tree",
            "titleSlug": "sum-of-distances-in-tree",
            "acRate": "59.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "865",
            "questionFrontendId": "489",
            "title": "Robot Room Cleaner",
            "titleSlug": "robot-room-cleaner",
            "acRate": "76.6%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "866",
            "questionFrontendId": "836",
            "title": "Rectangle Overlap",
            "titleSlug": "rectangle-overlap",
            "acRate": "44.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "882",
            "questionFrontendId": "852",
            "title": "Peak Index in a Mountain Array",
            "titleSlug": "peak-index-in-a-mountain-array",
            "acRate": "68.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "889",
            "questionFrontendId": "859",
            "title": "Buddy Strings",
            "titleSlug": "buddy-strings",
            "acRate": "33.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "893",
            "questionFrontendId": "863",
            "title": "All Nodes Distance K in Binary Tree",
            "titleSlug": "all-nodes-distance-k-in-binary-tree",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "896",
            "questionFrontendId": "865",
            "title": "Smallest Subtree with all the Deepest Nodes",
            "titleSlug": "smallest-subtree-with-all-the-deepest-nodes",
            "acRate": "70.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "907",
            "questionFrontendId": "875",
            "title": "Koko Eating Bananas",
            "titleSlug": "koko-eating-bananas",
            "acRate": "49.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "908",
            "questionFrontendId": "876",
            "title": "Middle of the Linked List",
            "titleSlug": "middle-of-the-linked-list",
            "acRate": "77.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "912",
            "questionFrontendId": "528",
            "title": "Random Pick with Weight",
            "titleSlug": "random-pick-with-weight",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "929",
            "questionFrontendId": "893",
            "title": "Groups of Special-Equivalent Strings",
            "titleSlug": "groups-of-special-equivalent-strings",
            "acRate": "71.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "930",
            "questionFrontendId": "894",
            "title": "All Possible Full Binary Trees",
            "titleSlug": "all-possible-full-binary-trees",
            "acRate": "82.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "931",
            "questionFrontendId": "895",
            "title": "Maximum Frequency Stack",
            "titleSlug": "maximum-frequency-stack",
            "acRate": "66.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "932",
            "questionFrontendId": "896",
            "title": "Monotonic Array",
            "titleSlug": "monotonic-array",
            "acRate": "61.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "940",
            "questionFrontendId": "904",
            "title": "Fruit Into Baskets",
            "titleSlug": "fruit-into-baskets",
            "acRate": "44.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "941",
            "questionFrontendId": "905",
            "title": "Sort Array By Parity",
            "titleSlug": "sort-array-by-parity",
            "acRate": "76.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "948",
            "questionFrontendId": "912",
            "title": "Sort an Array",
            "titleSlug": "sort-an-array",
            "acRate": "56.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Radix Sort",
                    "slug": "radix-sort"
                },
                {
                    "name": "Counting Sort",
                    "slug": "counting-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "955",
            "questionFrontendId": "919",
            "title": "Complete Binary Tree Inserter",
            "titleSlug": "complete-binary-tree-inserter",
            "acRate": "65.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "957",
            "questionFrontendId": "921",
            "title": "Minimum Add to Make Parentheses Valid",
            "titleSlug": "minimum-add-to-make-parentheses-valid",
            "acRate": "75.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "971",
            "questionFrontendId": "934",
            "title": "Shortest Bridge",
            "titleSlug": "shortest-bridge",
            "acRate": "57.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "972",
            "questionFrontendId": "935",
            "title": "Knight Dialer",
            "titleSlug": "knight-dialer",
            "acRate": "59.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "975",
            "questionFrontendId": "938",
            "title": "Range Sum of BST",
            "titleSlug": "range-sum-of-bst",
            "acRate": "86.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "976",
            "questionFrontendId": "939",
            "title": "Minimum Area Rectangle",
            "titleSlug": "minimum-area-rectangle",
            "acRate": "53.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "978",
            "questionFrontendId": "941",
            "title": "Valid Mountain Array",
            "titleSlug": "valid-mountain-array",
            "acRate": "33.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "990",
            "questionFrontendId": "953",
            "title": "Verifying an Alien Dictionary",
            "titleSlug": "verifying-an-alien-dictionary",
            "acRate": "54.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "998",
            "questionFrontendId": "958",
            "title": "Check Completeness of a Binary Tree",
            "titleSlug": "check-completeness-of-a-binary-tree",
            "acRate": "56.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1008",
            "questionFrontendId": "968",
            "title": "Binary Tree Cameras",
            "titleSlug": "binary-tree-cameras",
            "acRate": "46.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1014",
            "questionFrontendId": "973",
            "title": "K Closest Points to Origin",
            "titleSlug": "k-closest-points-to-origin",
            "acRate": "66.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1019",
            "questionFrontendId": "977",
            "title": "Squares of a Sorted Array",
            "titleSlug": "squares-of-a-sorted-array",
            "acRate": "72.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1025",
            "questionFrontendId": "983",
            "title": "Minimum Cost For Tickets",
            "titleSlug": "minimum-cost-for-tickets",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1028",
            "questionFrontendId": "986",
            "title": "Interval List Intersections",
            "titleSlug": "interval-list-intersections",
            "acRate": "71.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1029",
            "questionFrontendId": "987",
            "title": "Vertical Order Traversal of a Binary Tree",
            "titleSlug": "vertical-order-traversal-of-a-binary-tree",
            "acRate": "47.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1031",
            "questionFrontendId": "989",
            "title": "Add to Array-Form of Integer",
            "titleSlug": "add-to-array-form-of-integer",
            "acRate": "45.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1035",
            "questionFrontendId": "993",
            "title": "Cousins in Binary Tree",
            "titleSlug": "cousins-in-binary-tree",
            "acRate": "55.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1038",
            "questionFrontendId": "996",
            "title": "Number of Squareful Arrays",
            "titleSlug": "number-of-squareful-arrays",
            "acRate": "49.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1040",
            "questionFrontendId": "998",
            "title": "Maximum Binary Tree II",
            "titleSlug": "maximum-binary-tree-ii",
            "acRate": "68.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1046",
            "questionFrontendId": "1004",
            "title": "Max Consecutive Ones III",
            "titleSlug": "max-consecutive-ones-iii",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1050",
            "questionFrontendId": "1008",
            "title": "Construct Binary Search Tree from Preorder Traversal",
            "titleSlug": "construct-binary-search-tree-from-preorder-traversal",
            "acRate": "81.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1051",
            "questionFrontendId": "1055",
            "title": "Shortest Way to Form String",
            "titleSlug": "shortest-way-to-form-string",
            "acRate": "60.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1056",
            "questionFrontendId": "1011",
            "title": "Capacity To Ship Packages Within D Days",
            "titleSlug": "capacity-to-ship-packages-within-d-days",
            "acRate": "69.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1059",
            "questionFrontendId": "1060",
            "title": "Missing Element in Sorted Array",
            "titleSlug": "missing-element-in-sorted-array",
            "acRate": "56.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1073",
            "questionFrontendId": "1020",
            "title": "Number of Enclaves",
            "titleSlug": "number-of-enclaves",
            "acRate": "68.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1091",
            "questionFrontendId": "1120",
            "title": "Maximum Average Subtree",
            "titleSlug": "maximum-average-subtree",
            "acRate": "66.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1092",
            "questionFrontendId": "1026",
            "title": "Maximum Difference Between Node and Ancestor",
            "titleSlug": "maximum-difference-between-node-and-ancestor",
            "acRate": "78.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1093",
            "questionFrontendId": "1028",
            "title": "Recover a Tree From Preorder Traversal",
            "titleSlug": "recover-a-tree-from-preorder-traversal",
            "acRate": "74.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1095",
            "questionFrontendId": "1029",
            "title": "Two City Scheduling",
            "titleSlug": "two-city-scheduling",
            "acRate": "66.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1103",
            "questionFrontendId": "1033",
            "title": "Moving Stones Until Consecutive",
            "titleSlug": "moving-stones-until-consecutive",
            "acRate": "47.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Brainteaser",
                    "slug": "brainteaser"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1113",
            "questionFrontendId": "1040",
            "title": "Moving Stones Until Consecutive II",
            "titleSlug": "moving-stones-until-consecutive-ii",
            "acRate": "56.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1116",
            "questionFrontendId": "1161",
            "title": "Maximum Level Sum of a Binary Tree",
            "titleSlug": "maximum-level-sum-of-a-binary-tree",
            "acRate": "67.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1121",
            "questionFrontendId": "1043",
            "title": "Partition Array for Maximum Sum",
            "titleSlug": "partition-array-for-maximum-sum",
            "acRate": "76.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1128",
            "questionFrontendId": "1047",
            "title": "Remove All Adjacent Duplicates In String",
            "titleSlug": "remove-all-adjacent-duplicates-in-string",
            "acRate": "69.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1142",
            "questionFrontendId": "1197",
            "title": "Minimum Knight Moves",
            "titleSlug": "minimum-knight-moves",
            "acRate": "40.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1149",
            "questionFrontendId": "1213",
            "title": "Intersection of Three Sorted Arrays",
            "titleSlug": "intersection-of-three-sorted-arrays",
            "acRate": "79.8%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1161",
            "questionFrontendId": "1075",
            "title": "Project Employees I",
            "titleSlug": "project-employees-i",
            "acRate": "61.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1162",
            "questionFrontendId": "1076",
            "title": "Project Employees II",
            "titleSlug": "project-employees-ii",
            "acRate": "49.9%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1163",
            "questionFrontendId": "1077",
            "title": "Project Employees III",
            "titleSlug": "project-employees-iii",
            "acRate": "76.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1171",
            "questionFrontendId": "1091",
            "title": "Shortest Path in Binary Matrix",
            "titleSlug": "shortest-path-in-binary-matrix",
            "acRate": "47.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1177",
            "questionFrontendId": "1245",
            "title": "Tree Diameter",
            "titleSlug": "tree-diameter",
            "acRate": "61.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1178",
            "questionFrontendId": "1216",
            "title": "Valid Palindrome III",
            "titleSlug": "valid-palindrome-iii",
            "acRate": "50.0%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1185",
            "questionFrontendId": "1095",
            "title": "Find in Mountain Array",
            "titleSlug": "find-in-mountain-array",
            "acRate": "40.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1205",
            "questionFrontendId": "1108",
            "title": "Defanging an IP Address",
            "titleSlug": "defanging-an-ip-address",
            "acRate": "88.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1207",
            "questionFrontendId": "1110",
            "title": "Delete Nodes And Return Forest",
            "titleSlug": "delete-nodes-and-return-forest",
            "acRate": "69.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1215",
            "questionFrontendId": "1113",
            "title": "Reported Posts",
            "titleSlug": "reported-posts",
            "acRate": "64.9%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1218",
            "questionFrontendId": "1123",
            "title": "Lowest Common Ancestor of Deepest Leaves",
            "titleSlug": "lowest-common-ancestor-of-deepest-leaves",
            "acRate": "71.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1221",
            "questionFrontendId": "1287",
            "title": "Element Appearing More Than 25% In Sorted Array",
            "titleSlug": "element-appearing-more-than-25-in-sorted-array",
            "acRate": "61.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1231",
            "questionFrontendId": "1299",
            "title": "Replace Elements with Greatest Element on Right Side",
            "titleSlug": "replace-elements-with-greatest-element-on-right-side",
            "acRate": "71.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1237",
            "questionFrontendId": "1132",
            "title": "Reported Posts II",
            "titleSlug": "reported-posts-ii",
            "acRate": "32.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1245",
            "questionFrontendId": "1141",
            "title": "User Activity for the Past 30 Days I",
            "titleSlug": "user-activity-for-the-past-30-days-i",
            "acRate": "48.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1246",
            "questionFrontendId": "1142",
            "title": "User Activity for the Past 30 Days II",
            "titleSlug": "user-activity-for-the-past-30-days-ii",
            "acRate": "35.6%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1256",
            "questionFrontendId": "1331",
            "title": "Rank Transform of an Array",
            "titleSlug": "rank-transform-of-an-array",
            "acRate": "61.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1271",
            "questionFrontendId": "1236",
            "title": "Web Crawler",
            "titleSlug": "web-crawler",
            "acRate": "67.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1275",
            "questionFrontendId": "1361",
            "title": "Validate Binary Tree Nodes",
            "titleSlug": "validate-binary-tree-nodes",
            "acRate": "44.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1285",
            "questionFrontendId": "1382",
            "title": "Balance a Binary Search Tree",
            "titleSlug": "balance-a-binary-search-tree",
            "acRate": "81.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1288",
            "questionFrontendId": "1186",
            "title": "Maximum Subarray Sum with One Deletion",
            "titleSlug": "maximum-subarray-sum-with-one-deletion",
            "acRate": "43.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "1296",
            "questionFrontendId": "1483",
            "title": "Kth Ancestor of a Tree Node",
            "titleSlug": "kth-ancestor-of-a-tree-node",
            "acRate": "34.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1300",
            "questionFrontendId": "1192",
            "title": "Critical Connections in a Network",
            "titleSlug": "critical-connections-in-a-network",
            "acRate": "55.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Biconnected Component",
                    "slug": "biconnected-component"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1305",
            "questionFrontendId": "1944",
            "title": "Number of Visible People in a Queue",
            "titleSlug": "number-of-visible-people-in-a-queue",
            "acRate": "68.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1319",
            "questionFrontendId": "1207",
            "title": "Unique Number of Occurrences",
            "titleSlug": "unique-number-of-occurrences",
            "acRate": "77.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1320",
            "questionFrontendId": "1209",
            "title": "Remove All Adjacent Duplicates in String II",
            "titleSlug": "remove-all-adjacent-duplicates-in-string-ii",
            "acRate": "57.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1337",
            "questionFrontendId": "1206",
            "title": "Design Skiplist",
            "titleSlug": "design-skiplist",
            "acRate": "60.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1338",
            "questionFrontendId": "1211",
            "title": "Queries Quality and Percentage",
            "titleSlug": "queries-quality-and-percentage",
            "acRate": "52.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1357",
            "questionFrontendId": "1225",
            "title": "Report Contiguous Dates",
            "titleSlug": "report-contiguous-dates",
            "acRate": "58.1%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1368",
            "questionFrontendId": "1242",
            "title": "Web Crawler Multithreaded",
            "titleSlug": "web-crawler-multithreaded",
            "acRate": "48.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Concurrency",
                    "slug": "concurrency"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1371",
            "questionFrontendId": "1249",
            "title": "Minimum Remove to Make Valid Parentheses",
            "titleSlug": "minimum-remove-to-make-valid-parentheses",
            "acRate": "67.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1374",
            "questionFrontendId": "1428",
            "title": "Leftmost Column with at Least a One",
            "titleSlug": "leftmost-column-with-at-least-a-one",
            "acRate": "54.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1377",
            "questionFrontendId": "1241",
            "title": "Number of Comments per Post",
            "titleSlug": "number-of-comments-per-post",
            "acRate": "65.3%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1382",
            "questionFrontendId": "2303",
            "title": "Calculate Amount Paid in Taxes",
            "titleSlug": "calculate-amount-paid-in-taxes",
            "acRate": "65.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1397",
            "questionFrontendId": "1268",
            "title": "Search Suggestions System",
            "titleSlug": "search-suggestions-system",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1399",
            "questionFrontendId": "1264",
            "title": "Page Recommendations",
            "titleSlug": "page-recommendations",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1400",
            "questionFrontendId": "1275",
            "title": "Find Winner on a Tic Tac Toe Game",
            "titleSlug": "find-winner-on-a-tic-tac-toe-game",
            "acRate": "54.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1404",
            "questionFrontendId": "1265",
            "title": "Print Immutable Linked List in Reverse",
            "titleSlug": "print-immutable-linked-list-in-reverse",
            "acRate": "94.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1406",
            "questionFrontendId": "1281",
            "title": "Subtract the Product and Sum of Digits of an Integer",
            "titleSlug": "subtract-the-product-and-sum-of-digits-of-an-integer",
            "acRate": "86.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1414",
            "questionFrontendId": "1293",
            "title": "Shortest Path in a Grid with Obstacles Elimination",
            "titleSlug": "shortest-path-in-a-grid-with-obstacles-elimination",
            "acRate": "45.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1427",
            "questionFrontendId": "1305",
            "title": "All Elements in Two Binary Search Trees",
            "titleSlug": "all-elements-in-two-binary-search-trees",
            "acRate": "79.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1446",
            "questionFrontendId": "1344",
            "title": "Angle Between Hands of a Clock",
            "titleSlug": "angle-between-hands-of-a-clock",
            "acRate": "63.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1453",
            "questionFrontendId": "1322",
            "title": "Ads Performance",
            "titleSlug": "ads-performance",
            "acRate": "59.5%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1459",
            "questionFrontendId": "1357",
            "title": "Apply Discount Every n Orders",
            "titleSlug": "apply-discount-every-n-orders",
            "acRate": "71.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1460",
            "questionFrontendId": "1358",
            "title": "Number of Substrings Containing All Three Characters",
            "titleSlug": "number-of-substrings-containing-all-three-characters",
            "acRate": "66.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1466",
            "questionFrontendId": "1340",
            "title": "Jump Game V",
            "titleSlug": "jump-game-v",
            "acRate": "63.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1477",
            "questionFrontendId": "1352",
            "title": "Product of the Last K Numbers",
            "titleSlug": "product-of-the-last-k-numbers",
            "acRate": "50.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1498",
            "questionFrontendId": "1379",
            "title": "Find a Corresponding Node of a Binary Tree in a Clone of That Tree",
            "titleSlug": "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",
            "acRate": "85.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1516",
            "questionFrontendId": "1415",
            "title": "The k-th Lexicographical String of All Happy Strings of Length n",
            "titleSlug": "the-k-th-lexicographical-string-of-all-happy-strings-of-length-n",
            "acRate": "73.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1536",
            "questionFrontendId": "1398",
            "title": "Customers Who Bought Products A and B but Not C",
            "titleSlug": "customers-who-bought-products-a-and-b-but-not-c",
            "acRate": "73.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1539",
            "questionFrontendId": "1424",
            "title": "Diagonal Traverse II",
            "titleSlug": "diagonal-traverse-ii",
            "acRate": "56.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1542",
            "questionFrontendId": "1446",
            "title": "Consecutive Characters",
            "titleSlug": "consecutive-characters",
            "acRate": "60.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1549",
            "questionFrontendId": "1438",
            "title": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",
            "titleSlug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
            "acRate": "49.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "1550",
            "questionFrontendId": "1439",
            "title": "Find the Kth Smallest Sum of a Matrix With Sorted Rows",
            "titleSlug": "find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows",
            "acRate": "61.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1554",
            "questionFrontendId": "1443",
            "title": "Minimum Time to Collect All Apples in a Tree",
            "titleSlug": "minimum-time-to-collect-all-apples-in-a-tree",
            "acRate": "62.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1556",
            "questionFrontendId": "1460",
            "title": "Make Two Arrays Equal by Reversing Subarrays",
            "titleSlug": "make-two-arrays-equal-by-reversing-subarrays",
            "acRate": "71.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1563",
            "questionFrontendId": "1453",
            "title": "Maximum Number of Darts Inside of a Circular Dartboard",
            "titleSlug": "maximum-number-of-darts-inside-of-a-circular-dartboard",
            "acRate": "37.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1578",
            "questionFrontendId": "1445",
            "title": "Apples & Oranges",
            "titleSlug": "apples-oranges",
            "acRate": "88.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1579",
            "questionFrontendId": "1454",
            "title": "Active Users",
            "titleSlug": "active-users",
            "acRate": "36.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1585",
            "questionFrontendId": "1492",
            "title": "The kth Factor of n",
            "titleSlug": "the-kth-factor-of-n",
            "acRate": "66.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1603",
            "questionFrontendId": "1480",
            "title": "Running Sum of 1d Array",
            "titleSlug": "running-sum-of-1d-array",
            "acRate": "86.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1604",
            "questionFrontendId": "1481",
            "title": "Least Number of Unique Integers after K Removals",
            "titleSlug": "least-number-of-unique-integers-after-k-removals",
            "acRate": "62.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1621",
            "questionFrontendId": "1498",
            "title": "Number of Subsequences That Satisfy the Given Sum Condition",
            "titleSlug": "number-of-subsequences-that-satisfy-the-given-sum-condition",
            "acRate": "43.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1635",
            "questionFrontendId": "1512",
            "title": "Number of Good Pairs",
            "titleSlug": "number-of-good-pairs",
            "acRate": "88.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1646",
            "questionFrontendId": "1539",
            "title": "Kth Missing Positive Number",
            "titleSlug": "kth-missing-positive-number",
            "acRate": "59.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1648",
            "questionFrontendId": "1541",
            "title": "Minimum Insertions to Balance a Parentheses String",
            "titleSlug": "minimum-insertions-to-balance-a-parentheses-string",
            "acRate": "51.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1663",
            "questionFrontendId": "1559",
            "title": "Detect Cycles in 2D Grid",
            "titleSlug": "detect-cycles-in-2d-grid",
            "acRate": "48.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1665",
            "questionFrontendId": "1522",
            "title": "Diameter of N-Ary Tree",
            "titleSlug": "diameter-of-n-ary-tree",
            "acRate": "74.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1706",
            "questionFrontendId": "1584",
            "title": "Min Cost to Connect All Points",
            "titleSlug": "min-cost-to-connect-all-points",
            "acRate": "66.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Minimum Spanning Tree",
                    "slug": "minimum-spanning-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1713",
            "questionFrontendId": "1570",
            "title": "Dot Product of Two Sparse Vectors",
            "titleSlug": "dot-product-of-two-sparse-vectors",
            "acRate": "89.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1729",
            "questionFrontendId": "1586",
            "title": "Binary Search Tree Iterator II",
            "titleSlug": "binary-search-tree-iterator-ii",
            "acRate": "68.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1737",
            "questionFrontendId": "1614",
            "title": "Maximum Nesting Depth of the Parentheses",
            "titleSlug": "maximum-nesting-depth-of-the-parentheses",
            "acRate": "81.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1777",
            "questionFrontendId": "1657",
            "title": "Determine if Two Strings Are Close",
            "titleSlug": "determine-if-two-strings-are-close",
            "acRate": "55.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1780",
            "questionFrontendId": "1644",
            "title": "Lowest Common Ancestor of a Binary Tree II",
            "titleSlug": "lowest-common-ancestor-of-a-binary-tree-ii",
            "acRate": "63.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1781",
            "questionFrontendId": "1662",
            "title": "Check If Two String Arrays are Equivalent",
            "titleSlug": "check-if-two-string-arrays-are-equivalent",
            "acRate": "85.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1782",
            "questionFrontendId": "1663",
            "title": "Smallest String With A Given Numeric Value",
            "titleSlug": "smallest-string-with-a-given-numeric-value",
            "acRate": "66.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1790",
            "questionFrontendId": "1650",
            "title": "Lowest Common Ancestor of a Binary Tree III",
            "titleSlug": "lowest-common-ancestor-of-a-binary-tree-iii",
            "acRate": "79.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1801",
            "questionFrontendId": "1661",
            "title": "Average Time of Process per Machine",
            "titleSlug": "average-time-of-process-per-machine",
            "acRate": "66.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1819",
            "questionFrontendId": "1718",
            "title": "Construct the Lexicographically Largest Valid Sequence",
            "titleSlug": "construct-the-lexicographically-largest-valid-sequence",
            "acRate": "53.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1842",
            "questionFrontendId": "1699",
            "title": "Number of Calls Between Two Persons",
            "titleSlug": "number-of-calls-between-two-persons",
            "acRate": "81.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1848",
            "questionFrontendId": "1748",
            "title": "Sum of Unique Elements",
            "titleSlug": "sum-of-unique-elements",
            "acRate": "77.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1883",
            "questionFrontendId": "1740",
            "title": "Find Distance in a Binary Tree",
            "titleSlug": "find-distance-in-a-binary-tree",
            "acRate": "70.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1894",
            "questionFrontendId": "1768",
            "title": "Merge Strings Alternately",
            "titleSlug": "merge-strings-alternately",
            "acRate": "79.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1899",
            "questionFrontendId": "1773",
            "title": "Count Items Matching a Rule",
            "titleSlug": "count-items-matching-a-rule",
            "acRate": "84.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1908",
            "questionFrontendId": "1757",
            "title": "Recyclable and Low Fat Products",
            "titleSlug": "recyclable-and-low-fat-products",
            "acRate": "89.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1909",
            "questionFrontendId": "1762",
            "title": "Buildings With an Ocean View",
            "titleSlug": "buildings-with-an-ocean-view",
            "acRate": "79.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1915",
            "questionFrontendId": "1790",
            "title": "Check if One String Swap Can Make Strings Equal",
            "titleSlug": "check-if-one-string-swap-can-make-strings-equal",
            "acRate": "45.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1931",
            "questionFrontendId": "1778",
            "title": "Shortest Path in a Hidden Grid",
            "titleSlug": "shortest-path-in-a-hidden-grid",
            "acRate": "39.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1942",
            "questionFrontendId": "1789",
            "title": "Primary Department for Each Employee",
            "titleSlug": "primary-department-for-each-employee",
            "acRate": "64.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1951",
            "questionFrontendId": "1823",
            "title": "Find the Winner of the Circular Game",
            "titleSlug": "find-the-winner-of-the-circular-game",
            "acRate": "78.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1959",
            "questionFrontendId": "1810",
            "title": "Minimum Path Cost in a Hidden Grid",
            "titleSlug": "minimum-path-cost-in-a-hidden-grid",
            "acRate": "55.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1966",
            "questionFrontendId": "1838",
            "title": "Frequency of the Most Frequent Element",
            "titleSlug": "frequency-of-the-most-frequent-element",
            "acRate": "45.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1970",
            "questionFrontendId": "1859",
            "title": "Sorting the Sentence",
            "titleSlug": "sorting-the-sentence",
            "acRate": "83.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1980",
            "questionFrontendId": "1826",
            "title": "Faulty Sensor",
            "titleSlug": "faulty-sensor",
            "acRate": "49.8%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2019",
            "questionFrontendId": "1868",
            "title": "Product of Two Run-Length Encoded Arrays",
            "titleSlug": "product-of-two-run-length-encoded-arrays",
            "acRate": "58.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2038",
            "questionFrontendId": "1926",
            "title": "Nearest Exit from Entrance in Maze",
            "titleSlug": "nearest-exit-from-entrance-in-maze",
            "acRate": "46.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2040",
            "questionFrontendId": "1928",
            "title": "Minimum Cost to Reach Destination in Time",
            "titleSlug": "minimum-cost-to-reach-destination-in-time",
            "acRate": "37.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2045",
            "questionFrontendId": "1891",
            "title": "Cutting Ribbons",
            "titleSlug": "cutting-ribbons",
            "acRate": "49.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2046",
            "questionFrontendId": "1892",
            "title": "Page Recommendations II",
            "titleSlug": "page-recommendations-ii",
            "acRate": "42.9%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2047",
            "questionFrontendId": "1901",
            "title": "Find a Peak Element II",
            "titleSlug": "find-a-peak-element-ii",
            "acRate": "50.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2048",
            "questionFrontendId": "1920",
            "title": "Build Array from Permutation",
            "titleSlug": "build-array-from-permutation",
            "acRate": "89.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2078",
            "questionFrontendId": "1947",
            "title": "Maximum Compatibility Score Sum",
            "titleSlug": "maximum-compatibility-score-sum",
            "acRate": "61.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2090",
            "questionFrontendId": "1976",
            "title": "Number of Ways to Arrive at Destination",
            "titleSlug": "number-of-ways-to-arrive-at-destination",
            "acRate": "28.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2095",
            "questionFrontendId": "1963",
            "title": "Minimum Number of Swaps to Make the String Balanced",
            "titleSlug": "minimum-number-of-swaps-to-make-the-string-balanced",
            "acRate": "71.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2097",
            "questionFrontendId": "1949",
            "title": "Strong Friendship",
            "titleSlug": "strong-friendship",
            "acRate": "54.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "2102",
            "questionFrontendId": "1991",
            "title": "Find the Middle Index in Array",
            "titleSlug": "find-the-middle-index-in-array",
            "acRate": "67.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2107",
            "questionFrontendId": "1980",
            "title": "Find Unique Binary String",
            "titleSlug": "find-unique-binary-string",
            "acRate": "74.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2123",
            "questionFrontendId": "1996",
            "title": "The Number of Weak Characters in the Game",
            "titleSlug": "the-number-of-weak-characters-in-the-game",
            "acRate": "43.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2126",
            "questionFrontendId": "1973",
            "title": "Count Nodes Equal to Sum of Descendants",
            "titleSlug": "count-nodes-equal-to-sum-of-descendants",
            "acRate": "76.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2134",
            "questionFrontendId": "2024",
            "title": "Maximize the Confusion of an Exam",
            "titleSlug": "maximize-the-confusion-of-an-exam",
            "acRate": "67.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2140",
            "questionFrontendId": "2014",
            "title": "Longest Subsequence Repeated k Times",
            "titleSlug": "longest-subsequence-repeated-k-times",
            "acRate": "55.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2184",
            "questionFrontendId": "2060",
            "title": "Check if an Original String Exists Given Two Encoded Strings",
            "titleSlug": "check-if-an-original-string-exists-given-two-encoded-strings",
            "acRate": "42.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2211",
            "questionFrontendId": "2090",
            "title": "K Radius Subarray Averages",
            "titleSlug": "k-radius-subarray-averages",
            "acRate": "46.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2217",
            "questionFrontendId": "2096",
            "title": "Step-By-Step Directions From a Binary Tree Node to Another",
            "titleSlug": "step-by-step-directions-from-a-binary-tree-node-to-another",
            "acRate": "48.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2232",
            "questionFrontendId": "2109",
            "title": "Adding Spaces to a String",
            "titleSlug": "adding-spaces-to-a-string",
            "acRate": "57.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2316",
            "questionFrontendId": "2210",
            "title": "Count Hills and Valleys in an Array",
            "titleSlug": "count-hills-and-valleys-in-an-array",
            "acRate": "59.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2335",
            "questionFrontendId": "2199",
            "title": "Finding the Topic of Each Post",
            "titleSlug": "finding-the-topic-of-each-post",
            "acRate": "48.4%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2342",
            "questionFrontendId": "2256",
            "title": "Minimum Average Difference",
            "titleSlug": "minimum-average-difference",
            "acRate": "43.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2347",
            "questionFrontendId": "2265",
            "title": "Count Nodes Equal to Average of Subtree",
            "titleSlug": "count-nodes-equal-to-average-of-subtree",
            "acRate": "86.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2374",
            "questionFrontendId": "2289",
            "title": "Steps to Make Array Non-decreasing",
            "titleSlug": "steps-to-make-array-non-decreasing",
            "acRate": "21.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2383",
            "questionFrontendId": "2235",
            "title": "Add Two Integers",
            "titleSlug": "add-two-integers",
            "acRate": "87.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2473",
            "questionFrontendId": "2342",
            "title": "Max Sum of a Pair With Equal Sum of Digits",
            "titleSlug": "max-sum-of-a-pair-with-equal-sum-of-digits",
            "acRate": "54.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2483",
            "questionFrontendId": "2365",
            "title": "Task Scheduler II",
            "titleSlug": "task-scheduler-ii",
            "acRate": "50.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2494",
            "questionFrontendId": "2416",
            "title": "Sum of Prefix Scores of Strings",
            "titleSlug": "sum-of-prefix-scores-of-strings",
            "acRate": "45.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2550",
            "questionFrontendId": "2452",
            "title": "Words Within Two Edits of Dictionary",
            "titleSlug": "words-within-two-edits-of-dictionary",
            "acRate": "60.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2552",
            "questionFrontendId": "2461",
            "title": "Maximum Sum of Distinct Subarrays With Length K",
            "titleSlug": "maximum-sum-of-distinct-subarrays-with-length-k",
            "acRate": "33.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2563",
            "questionFrontendId": "2468",
            "title": "Split Message Based on Limit",
            "titleSlug": "split-message-based-on-limit",
            "acRate": "43.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2639",
            "questionFrontendId": "2553",
            "title": "Separate the Digits in an Array",
            "titleSlug": "separate-the-digits-in-an-array",
            "acRate": "78.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2662",
            "questionFrontendId": "2596",
            "title": "Check Knight Tour Configuration",
            "titleSlug": "check-knight-tour-configuration",
            "acRate": "56.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2696",
            "questionFrontendId": "2597",
            "title": "The Number of Beautiful Subsets",
            "titleSlug": "the-number-of-beautiful-subsets",
            "acRate": "33.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2732",
            "questionFrontendId": "2620",
            "title": "Counter",
            "titleSlug": "counter",
            "acRate": "80.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2809",
            "questionFrontendId": "2667",
            "title": "Create Hello World Function",
            "titleSlug": "create-hello-world-function",
            "acRate": "80.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2917",
            "questionFrontendId": "2824",
            "title": "Count Pairs Whose Sum is Less than Target",
            "titleSlug": "count-pairs-whose-sum-is-less-than-target",
            "acRate": "86.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3206",
            "questionFrontendId": "2956",
            "title": "Find Common Elements Between Two Arrays",
            "titleSlug": "find-common-elements-between-two-arrays",
            "acRate": "82.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3315",
            "questionFrontendId": "3009",
            "title": "Maximum Number of Intersections on the Chart",
            "titleSlug": "maximum-number-of-intersections-on-the-chart",
            "acRate": "47.9%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        }
    ],
    "frequencies": "{\"621\": [0, 0, 3, 350, 0, 0, 0.1769307081590782, 7.8767935161835885, 3], \"56\": [70, 83, 153, 773, 3.253203681602053, 3.5826725566874287, 4.696088638816326, 8.01768400521191, 1], \"350\": [1, 1, 7, 126, 0, 0, 0.6620162619647721, 5.720763907280876, 3], \"15\": [62, 70, 89, 700, 2.332653761870696, 2.5542410536290494, 3.0044211165477686, 7.079313681732076, 1], \"10\": [3, 4, 11, 393, 0.09381875521765481, 0.16115187528624186, 0.8426030160829958, 7.431872504609174, 1], \"674\": [4, 4, 7, 43, 0.7857399673877702, 0.7857399673877702, 1.5383105684185163, 4.934366550580253, 1], \"121\": [9, 13, 27, 376, 0.13966539087290322, 0.2721099362534777, 0.8539900207863259, 5.570683824732022, 1], \"314\": [169, 187, 291, 697, 5.88388272454667, 6.019786928217657, 6.426196081897896, 9.16432612713141, 1], \"69\": [1, 1, 3, 44, 0, 0, 0.04180822530231373, 2.3208238236354664, 3], \"257\": [0, 0, 0, 143, 0, 0, 0, 6.238763981633263, 4], \"51\": [2, 2, 3, 76, 0.058155920157074034, 0.058155920157074034, 0.12639521210572593, 4.471262332434056, 1], \"42\": [5, 7, 15, 432, 0.12681608843350814, 0.23507853519705418, 0.7960980891172127, 6.918026309788449, 1], \"173\": [15, 18, 50, 378, 1.8297868648172944, 2.144161732361008, 4.079899649728557, 8.10888917369386, 1], \"151\": [2, 3, 5, 61, 0.018018505502678313, 0.04009445720187811, 0.10763066419236544, 2.885562230842642, 1], \"43\": [7, 7, 9, 205, 0.4816152456661895, 0.4816152456661895, 0.7044467358138786, 6.275926478344457, 1], \"38\": [17, 19, 24, 92, 1.684934412104153, 1.8696956810963268, 2.2776568903444847, 4.864701355220725, 1], \"273\": [3, 4, 9, 618, 0.462623521948113, 0.7157652691477178, 1.83961549040569, 9.675390718469854, 1], \"91\": [1, 2, 9, 360, 0, 0.05667238709891086, 0.7796725308085374, 7.544444709115187, 2], \"138\": [37, 44, 78, 358, 2.819704235017853, 3.1486313475395233, 4.235771546099287, 7.298136379164021, 1], \"283\": [49, 59, 75, 538, 2.250881985438306, 2.5890987548821833, 3.039962466301728, 6.932660528415128, 1], \"236\": [78, 89, 183, 626, 3.8655205450484194, 4.124504697851543, 5.463817053110418, 8.009961205199584, 1], \"253\": [13, 15, 32, 385, 1.6028434467088197, 1.8376390749787486, 3.220377044891177, 8.154919774919291, 1], \"133\": [25, 26, 44, 346, 1.9975601586095888, 2.0657136976393504, 3.0318213730371237, 7.107709287326786, 1], \"49\": [5, 10, 26, 133, 0.08796103013128909, 0.3131906492925993, 1.248814659820571, 4.190518100320808, 1], \"31\": [42, 51, 81, 580, 2.5310912887731436, 2.89346351265507, 3.7847111074652964, 7.699344837680546, 1], \"339\": [96, 101, 157, 339, 5.273167945315912, 5.3783242437147205, 5.9292550253626874, 8.349019897784606, 1], \"518\": [1, 2, 2, 27, 0, 0.08701137698962977, 0.08701137698962977, 2.866089414669161, 2], \"29\": [6, 6, 14, 372, 0.2672622334430382, 0.2672622334430382, 0.9813610264887618, 7.072198101291579, 1], \"114\": [9, 10, 14, 202, 0.8024512778491436, 0.9241624043699231, 1.380961015144528, 6.431526844650116, 1], \"301\": [17, 22, 46, 655, 2.785660803807134, 3.2761511909332985, 4.631819118061584, 9.575102350016058, 1], \"1\": [16, 22, 52, 820, 0.1802490972278095, 0.3173097870540579, 1.1269596053602036, 6.253419363575844, 1], \"412\": [0, 1, 4, 19, 0, 0, 0.18315872720701828, 1.7111233415179055, 3], \"98\": [3, 3, 8, 286, 0.04587960575069364, 0.04587960575069364, 0.28807323224554215, 6.0583928649436665, 1], \"88\": [75, 83, 132, 585, 2.526915248101407, 2.714850635334257, 3.60191460065359, 6.553310628659127, 1], \"242\": [1, 1, 5, 61, 0, 0, 0.06455519211090634, 2.3910824286169494, 3], \"642\": [0, 0, 0, 16, 0, 0, 0, 4.1032197893010025, 4], \"18\": [2, 3, 8, 63, 0.035122135027826476, 0.07735814230286744, 0.45231003642563294, 3.5964672159896147, 1], \"139\": [18, 20, 34, 355, 1.3434306566881082, 1.5033000939777121, 2.4073860115471737, 7.005441844641003, 1], \"560\": [70, 73, 127, 909, 3.591889189405444, 3.673597572657432, 4.673945096369882, 8.640047194807813, 1], \"212\": [8, 9, 13, 60, 0.8630796750397396, 1.0059395983636419, 1.530144388720259, 4.357833763359059, 1], \"297\": [3, 5, 9, 418, 0.18571714579509285, 0.4490949483208239, 1.042653635020065, 8.284755448817489, 1], \"392\": [1, 1, 2, 26, 0, 0, 0.021243496694561038, 1.532244960350736, 3], \"102\": [4, 4, 7, 107, 0.07763353611776078, 0.07763353611776078, 0.2209211036876481, 4.073544464863229, 1], \"325\": [1, 1, 2, 95, 0, 0, 0.462623521948113, 7.1915843499124525, 3], \"378\": [9, 11, 25, 100, 1.1903207151576087, 1.485705007971482, 2.926133891906244, 5.647162300784593, 1], \"348\": [9, 11, 16, 100, 2.040468731680326, 2.3978952727983707, 3.098154592639218, 6.718344187913472, 1], \"4\": [4, 8, 14, 147, 0.0606476084726819, 0.22322170378972916, 0.5686741732514908, 4.447851147151496, 1], \"278\": [3, 3, 9, 428, 0.10973238837921641, 0.10973238837921641, 0.7148178820115746, 7.767102492056952, 1], \"76\": [24, 26, 41, 405, 1.779566820155313, 1.9143782418003306, 2.7330557276542264, 7.247167708123027, 1], \"65\": [35, 38, 71, 301, 3.4324085475940267, 3.59197264585326, 4.732346594910648, 7.703541794481092, 1], \"32\": [1, 2, 5, 91, 0, 0.04723428175685054, 0.2641299821326973, 4.616436589869868, 2], \"234\": [8, 10, 18, 96, 0.39383412996130407, 0.5619831623328019, 1.2364706563439332, 4.255644800699602, 1], \"8\": [18, 20, 28, 209, 1.0207741506661918, 1.1605790124173094, 1.6669311256258394, 5.482087645127138, 1], \"215\": [130, 151, 224, 793, 4.440138850858242, 4.626738756962953, 5.486420180364797, 8.101248137141704, 1], \"785\": [2, 2, 5, 37, 0.5705448584676129, 0.5705448584676129, 1.7591832987934422, 5.576968397009594, 1], \"17\": [25, 29, 40, 352, 1.525655732676284, 1.765018608037978, 2.3234933659644814, 6.571333588003449, 1], \"567\": [1, 1, 3, 58, 0, 0, 0.1034215911531522, 3.731133836320544, 3], \"5\": [4, 5, 13, 170, 0.05417709326950732, 0.08340944432060635, 0.46249464434299603, 4.620617414636262, 1], \"636\": [15, 15, 28, 210, 2.5924625560092625, 2.5924625560092625, 3.7859363592532027, 7.793206080628319, 1], \"349\": [2, 2, 7, 175, 0.05189231600351913, 0.05189231600351913, 0.5022671334404725, 6.013200632128885, 1], \"295\": [5, 5, 8, 83, 0.31508104663989533, 0.31508104663989533, 0.6668792537393351, 4.635304155403447, 1], \"13\": [3, 9, 24, 194, 0.024973550926254966, 0.2050545434412432, 0.9625757202754628, 4.670478465576266, 1], \"380\": [11, 13, 25, 153, 1.0791627290522519, 1.311754143443986, 2.400809452334152, 5.931572251377095, 1], \"277\": [0, 0, 0, 88, 0, 0, 0, 7.232629910371072, 4], \"282\": [5, 7, 16, 214, 1.1793477570205468, 1.6890647332228734, 3.1806780117976268, 8.325249271603406, 1], \"27\": [3, 4, 8, 24, 0.019388802116478133, 0.03421330062605349, 0.1303448984732597, 0.8122587027826509, 1], \"122\": [1, 1, 3, 77, 0, 0, 0.0535205007755437, 3.6168111278300845, 3], \"341\": [3, 4, 6, 103, 0.4374678391943382, 0.680877087968131, 1.1616252564968437, 6.473721305312655, 1], \"538\": [0, 1, 2, 11, 0, 0, 0.36101334553733055, 2.649868245719474, 3], \"285\": [1, 1, 2, 53, 0, 0, 0.3007541540191337, 5.511020642444436, 3], \"44\": [0, 0, 1, 54, 0, 0, 0, 4.121046546926775, 4], \"20\": [13, 14, 40, 319, 0.27268424420010523, 0.3101054619224189, 1.3782393763501364, 5.245764846998724, 1], \"270\": [22, 24, 34, 162, 2.912897903029097, 3.078206996576147, 3.7514488615600334, 6.851215378859108, 1], \"203\": [2, 3, 4, 57, 0.0492104205319947, 0.10750197896911202, 0.18379168201935414, 3.736978813468319, 1], \"191\": [1, 1, 5, 38, 0, 0, 0.22274427001523373, 2.735093067223951, 3], \"57\": [3, 4, 8, 92, 0.0840831172105414, 0.1449185538269559, 0.48475779699607313, 4.424788267347084, 1], \"67\": [0, 3, 9, 692, 0, 0.06208890405694066, 0.45521510071138993, 8.134257782147149, 2], \"680\": [130, 149, 283, 1094, 4.935448609769775, 5.211182747283229, 6.162149702468239, 9.318143807056682, 1], \"200\": [38, 46, 68, 447, 2.2036522879707747, 2.550072764126325, 3.2885351408983126, 7.017511143248775, 1], \"3\": [8, 10, 24, 274, 0.11200505837649488, 0.16989903679539747, 0.7259370033829362, 4.941854040428314, 1], \"146\": [51, 56, 85, 412, 3.0047621774394146, 3.183325065354524, 3.994187354633041, 7.133135854314891, 1], \"158\": [0, 0, 1, 222, 0, 0, 0, 9.421284670090786, 4], \"125\": [58, 64, 121, 692, 2.3262254442986707, 2.505497911106027, 3.7187168671160573, 7.1825034082817645, 1], \"157\": [0, 0, 1, 122, 0, 0, 0, 8.149715925876295, 4], \"127\": [4, 5, 11, 143, 0.245122458032985, 0.36048711282508683, 1.1316261007405533, 5.874979496828994, 1], \"211\": [1, 1, 1, 252, 0, 0, 0, 7.23311558598574, 4], \"34\": [13, 21, 45, 427, 0.6343225625022465, 1.1973471293537987, 2.4521430320723865, 6.8633881802562255, 1], \"477\": [0, 0, 0, 24, 0, 0, 0, 4.5264361454455875, 4], \"111\": [6, 9, 10, 71, 0.37273104840346155, 0.7012696869472976, 0.813019207993344, 4.162776841642228, 1], \"23\": [40, 41, 71, 547, 2.4646970802535044, 2.509976444504411, 3.552500317554932, 7.607463604955104, 1], \"556\": [2, 2, 6, 43, 0.2629424662760252, 0.2629424662760252, 1.3101600458209364, 4.941803526709752, 1], \"179\": [0, 0, 2, 13, 0, 0, 0.10058723690516862, 1.699443040008732, 3], \"249\": [19, 25, 56, 177, 2.919081863778596, 3.4448890411602036, 4.941995873734581, 7.327665711013479, 1], \"124\": [9, 10, 15, 399, 0.5755442439585287, 0.6732580941948759, 1.1510096803283711, 7.333224534830658, 1], \"543\": [56, 61, 102, 505, 2.710971739073401, 2.8715106188923474, 3.8626652821083636, 7.041475917021501, 1], \"22\": [2, 3, 15, 122, 0.0215874546043835, 0.047932497749074716, 0.8008780434798707, 4.409157956821321, 1], \"384\": [2, 2, 6, 19, 0.291910408561302, 0.291910408561302, 1.398926108025791, 3.452942551339817, 1], \"346\": [39, 40, 68, 158, 3.8700429331872632, 3.919648180733367, 4.877875645141102, 6.648328670683059, 1], \"468\": [3, 3, 3, 34, 0.6061358035703156, 0.6061358035703156, 0.6061358035703156, 4.682474103863393, 1], \"284\": [0, 0, 2, 12, 0, 0, 0.5245244681241525, 3.2514431535307455, 3], \"235\": [4, 4, 9, 61, 0.1270540670843162, 0.1270540670843162, 0.522275487866834, 3.4814615199083434, 1], \"206\": [0, 1, 4, 134, 0, 0, 0.04591911426478357, 3.9840499381174244, 3], \"438\": [0, 1, 2, 212, 0, 0, 0.0840831172105414, 6.894278914410717, 3], \"317\": [11, 11, 17, 138, 2.383002964806291, 2.383002964806291, 3.198507183757884, 7.345553772165837, 1], \"9\": [1, 4, 9, 56, 0, 0.030179582027776965, 0.14419816042871783, 1.946675845876797, 2], \"252\": [0, 0, 0, 48, 0, 0, 0, 4.982960251056913, 4], \"126\": [1, 1, 3, 68, 0, 0, 0.3416302106614813, 5.348205828466531, 3], \"304\": [6, 8, 14, 147, 1.11365016603265, 1.5339303599259553, 2.4962062050419336, 7.113780415458271, 1], \"247\": [1, 1, 2, 54, 0, 0, 0.5877866649021191, 6.37024338995364, 3], \"209\": [2, 2, 5, 60, 0.03207973561022761, 0.03207973561022761, 0.18544083782046836, 3.4124621387318177, 1], \"143\": [1, 1, 2, 108, 0, 0, 0.047684838131185944, 4.965760531650678, 3], \"399\": [1, 1, 7, 46, 0, 0, 0.8655886287541927, 4.1016213925411025, 3], \"647\": [9, 9, 18, 123, 0.9298349569819123, 0.9298349569819123, 1.9652033519899923, 5.661341430282798, 1], \"11\": [1, 2, 5, 124, 0, 0.011176422568838024, 0.06788708096841137, 3.788795984544463, 2], \"128\": [2, 4, 10, 75, 0.01748296278034749, 0.06816948733174619, 0.3652797911322508, 3.2504360133524273, 1], \"227\": [105, 115, 186, 450, 4.7182645698443135, 4.903250956918723, 5.667854213085601, 8.179239294297746, 1], \"2\": [3, 5, 19, 226, 0.02169805472857657, 0.05914684911011145, 0.631188803491813, 4.8321824323967695, 1], \"801\": [0, 1, 3, 143, 0, 0, 0.18571714579509285, 6.141383740650277, 3], \"50\": [89, 99, 186, 580, 3.681717997107765, 3.889843361717171, 5.046369225041019, 7.405607373200426, 1], \"852\": [5, 6, 11, 70, 1.2456657066246064, 1.5182775261553891, 2.5634249669224403, 6.186514163332734, 1], \"53\": [2, 2, 13, 200, 0.012783811042270835, 0.012783811042270835, 0.43410643179949177, 4.864905865763274, 1], \"381\": [1, 1, 2, 37, 0, 0, 0.4013413909243023, 5.135871056054687, 3], \"21\": [7, 11, 25, 157, 0.12302353261649472, 0.28010602468380874, 0.9819974189573604, 4.202505054897618, 1], \"238\": [5, 7, 17, 655, 0.07656017809622721, 0.14492392090561745, 0.6522190908722255, 7.219972835659719, 1], \"408\": [135, 144, 220, 374, 5.5512936643019835, 5.65483644367049, 6.200745059307739, 8.142574432060146, 1], \"688\": [1, 2, 2, 10, 0, 0.49159426183810306, 0.49159426183810306, 2.825715651950415, 2], \"494\": [3, 6, 7, 92, 0.18610227963386067, 0.5978370007556205, 0.7484098592349947, 5.264572542401867, 1], \"103\": [9, 11, 23, 88, 0.5419524591368866, 0.7297685352484821, 1.7401233408467147, 4.245267506157727, 1], \"239\": [7, 7, 13, 103, 0.4273493895429932, 0.4273493895429932, 1.0434361627810413, 4.757382099700661, 1], \"162\": [71, 77, 128, 356, 3.343133580707394, 3.5000797546238838, 4.468867694367934, 6.533125651004537, 1], \"241\": [1, 1, 3, 14, 0, 0, 0.7958013346200287, 3.3136944834043356, 3], \"437\": [0, 0, 2, 30, 0, 0, 0.07651914983419623, 2.938772647111576, 3], \"94\": [1, 2, 5, 57, 0, 0.021811115450718548, 0.12911149592637144, 2.939727613755392, 2], \"113\": [3, 3, 5, 34, 0.18306532774679926, 0.18306532774679926, 0.44342587034738734, 3.2885351408983126, 1], \"110\": [3, 4, 7, 30, 0.056264838586137754, 0.09793753498670578, 0.2739222438635676, 1.9151241356690865, 1], \"75\": [0, 1, 4, 118, 0, 0, 0.0729918062364865, 4.20315156919273, 3], \"322\": [1, 1, 2, 50, 0, 0, 0.026351985988424496, 2.8729383733509035, 3], \"134\": [1, 1, 3, 13, 0, 0, 0.07650288096841239, 0.9134598736496311, 3], \"129\": [48, 50, 77, 157, 3.5293985016362384, 3.6087409564120687, 4.428311219937835, 5.872546708323263, 1], \"46\": [1, 2, 5, 110, 0, 0.025237932589862646, 0.14819964372469757, 4.360755677512664, 2], \"691\": [25, 29, 35, 59, 3.820847124762276, 4.112044139321502, 4.454796951641691, 5.520031325052652, 1], \"246\": [2, 2, 9, 74, 0.44685032427101873, 0.44685032427101873, 2.518377748894864, 6.6493311293812365, 1], \"721\": [15, 18, 33, 247, 2.0459528719257922, 2.370299702742673, 3.5146686288055964, 7.510768083682418, 1], \"77\": [1, 1, 3, 31, 0, 0, 0.14953173397096375, 2.902641850487979, 3], \"386\": [0, 0, 2, 5, 0, 0, 0.4274440148269396, 1.4663370687934272, 3], \"28\": [0, 0, 3, 67, 0, 0, 0.029109429204969107, 2.7557301488217893, 3], \"347\": [48, 53, 105, 369, 2.432125883906383, 2.614388054163248, 3.9256209841660543, 6.4209948200249904, 1], \"33\": [6, 10, 27, 286, 0.12555653398976382, 0.31598455230309275, 1.3107704139596805, 5.720185055978708, 1], \"286\": [2, 2, 8, 105, 0.19671029424605424, 0.19671029424605424, 1.499234772300486, 6.3972375788173, 1], \"208\": [1, 1, 1, 51, 0, 0, 0, 3.549020104397434, 4], \"78\": [18, 20, 45, 273, 1.137522712369162, 1.2853930404088707, 2.6563322758215464, 6.191208926282381, 1], \"14\": [10, 14, 31, 139, 0.23085201443030764, 0.4114198182601967, 1.251463760829184, 3.9351804706452507, 1], \"79\": [13, 13, 22, 146, 0.919319147834372, 0.919319147834372, 1.6710171081477667, 5.2530670937029615, 1], \"269\": [4, 7, 16, 270, 0.6900367581455529, 1.3971052772241064, 2.827350373798783, 8.418245472102566, 1], \"300\": [4, 4, 6, 111, 0.11367797397076365, 0.11367797397076365, 0.23970985809455475, 4.540192140132222, 1], \"678\": [1, 1, 4, 46, 0, 0, 0.48550781578170077, 4.426716140720626, 3], \"713\": [3, 5, 6, 12, 0.4188624376799856, 0.894080584548499, 1.1252298296680656, 2.23255948362743, 1], \"19\": [16, 17, 34, 147, 0.7555339173697794, 0.8216505215936474, 1.8077971361938725, 4.567237531819441, 1], \"74\": [5, 8, 13, 71, 0.12944622163249433, 0.3029055715568726, 0.6597030069723929, 3.3626722069234125, 1], \"210\": [3, 3, 5, 49, 0.11433759744908353, 0.11433759744908353, 0.2900346193274134, 3.5060059280546936, 1], \"230\": [1, 1, 6, 76, 0, 0, 0.2746475346554156, 3.9456734281196764, 3], \"26\": [5, 8, 22, 119, 0.04421586715004267, 0.109511022383053, 0.6287292067071926, 3.281196698969875, 1], \"639\": [0, 0, 0, 10, 0, 0, 0, 3.258096538021482, 4], \"224\": [5, 8, 14, 93, 0.44262785449155595, 0.8859922351907061, 1.679944114872617, 5.265939114548963, 1], \"218\": [0, 1, 1, 37, 0, 0, 0, 4.946586448966184, 4], \"84\": [10, 10, 14, 54, 0.734576365973644, 0.734576365973644, 1.1396945530028735, 3.485137041658565, 1], \"415\": [27, 27, 48, 464, 2.6810726416995556, 2.6810726416995556, 3.783850363346729, 8.298468964962401, 1], \"167\": [4, 4, 7, 37, 0.0775582343458745, 0.0775582343458745, 0.2207212651076151, 2.066888279767992, 1], \"185\": [1, 1, 2, 10, 0, 0, 0.07565042495900788, 1.086754442217326, 3], \"689\": [5, 5, 7, 81, 1.9189724933235048, 1.9189724933235048, 2.5173213084722823, 7.33093845987069, 1], \"73\": [6, 7, 9, 78, 0.1992222272423296, 0.262411368732791, 0.4028079782872754, 3.6443156494151454, 1], \"670\": [26, 30, 47, 195, 3.117836806495837, 3.3929633619815047, 4.242541366534583, 7.103203823654551, 1], \"39\": [7, 8, 15, 132, 0.271176610012974, 0.34136443699277186, 0.888050830638135, 4.716436306108746, 1], \"6\": [1, 1, 3, 27, 0, 0, 0.06963369175880078, 1.9229845183885343, 3], \"140\": [13, 16, 26, 195, 2.0773732886157767, 2.449151000740266, 3.3650133753579246, 7.360282704939015, 1], \"36\": [3, 4, 6, 47, 0.05516104129679978, 0.09605458960764748, 0.2044442848457906, 2.7026586712565908, 1], \"68\": [4, 5, 9, 43, 0.36602337605686763, 0.525088070686555, 1.1748227583111868, 3.9527300762178506, 1], \"112\": [0, 2, 7, 43, 0, 0.030606826736080846, 0.3226126205585247, 2.7322057177258983, 2], \"807\": [43, 46, 80, 209, 4.13729761775131, 4.270163541528488, 5.27756860713481, 7.284157683993446, 1], \"311\": [1, 1, 6, 127, 0, 0, 2.2587824703356527, 8.25355001425033, 3], \"58\": [2, 3, 4, 10, 0.015169043229667648, 0.03381238708415533, 0.05934258477665369, 0.32361632942195206, 1], \"557\": [0, 0, 5, 11, 0, 0, 0.5773153650348236, 1.564702018592709, 3], \"496\": [1, 1, 2, 32, 0, 0, 0.05495888428075748, 2.73846797646685, 3], \"47\": [2, 2, 2, 32, 0.06222847139840936, 0.06222847139840936, 0.06222847139840936, 2.8585712796462976, 1], \"435\": [4, 7, 10, 43, 0.25575708502259686, 0.6379155495896968, 1.037266398907338, 3.546146344448146, 1], \"171\": [1, 1, 3, 19, 0, 0, 0.25857398829371026, 2.552258831817492, 3], \"498\": [17, 18, 43, 155, 2.5453718455379355, 2.6511786901476033, 4.304664949532943, 6.885127200440644, 1], \"12\": [0, 0, 4, 31, 0, 0, 0.11743683520286506, 2.1382319736937134, 3], \"101\": [1, 1, 6, 54, 0, 0, 0.19933290262049122, 2.9374486594395295, 3], \"733\": [0, 0, 3, 16, 0, 0, 0.13889776257198957, 1.6560181309527295, 3], \"261\": [2, 2, 2, 12, 0.1986706947954841, 0.1986706947954841, 0.1986706947954841, 2.187408547598563, 1], \"523\": [19, 20, 56, 309, 2.4471663218051534, 2.541279613375632, 4.5011187119230405, 7.934815032038951, 1], \"7\": [1, 4, 9, 82, 0, 0.051624365405307196, 0.23760797180577634, 3.146945815450903, 2], \"161\": [0, 0, 4, 73, 0, 0, 1.090347778818216, 6.490573651598245, 3], \"658\": [14, 15, 24, 120, 1.6602963296675914, 1.773477424390606, 2.6042986962500843, 5.749531442121697, 1], \"692\": [0, 1, 6, 59, 0, 0, 0.9925527167077854, 5.107145439759834, 3], \"207\": [25, 27, 32, 118, 1.7688001137312757, 1.8980922747048206, 2.193759870535529, 4.6946266905409555, 1], \"463\": [3, 3, 10, 102, 0.3012613305781618, 0.3012613305781618, 1.5905099025485816, 6.009810844863052, 1], \"190\": [1, 1, 3, 17, 0, 0, 0.1343297958605471, 1.7257288877049692, 3], \"851\": [2, 2, 6, 64, 0.39730179746900346, 0.39730179746900346, 1.684590634813445, 6.215631964336456, 1], \"266\": [5, 5, 10, 71, 1.3984157216522355, 1.3984157216522355, 2.5798472121421736, 6.422850939608499, 1], \"398\": [16, 17, 29, 146, 2.8215258479790273, 2.9359560571719636, 3.9686600213610834, 7.182961705024178, 1], \"597\": [0, 0, 2, 42, 0, 0, 0.7777045685880084, 6.253489387461788, 3], \"716\": [0, 0, 2, 16, 0, 0, 0.5245244681241525, 3.809722935923426, 3], \"72\": [2, 3, 5, 43, 0.04873071290458883, 0.10648348040245009, 0.2716364238085919, 3.18153299781953, 1], \"443\": [5, 5, 9, 49, 0.24929906042404631, 0.24929906042404631, 0.6509321815291753, 3.339016717827948, 1], \"490\": [3, 5, 8, 29, 0.760450862456052, 1.4266098982983504, 2.2084135052540255, 4.677078634270946, 1], \"377\": [0, 0, 2, 16, 0, 0, 0.18400364297693944, 2.6339940276587117, 3], \"617\": [3, 3, 6, 23, 0.2527333714065298, 0.2527333714065298, 0.7655421391045746, 2.884854257025131, 1], \"104\": [1, 1, 4, 38, 0, 0, 0.05347080517105005, 1.7845819241310692, 3], \"332\": [5, 6, 9, 65, 0.5024354329635302, 0.6626610555371132, 1.1361914329172702, 4.712348891079325, 1], \"323\": [0, 0, 2, 26, 0, 0, 0.18315872720701828, 3.5544862401203576, 3], \"24\": [0, 0, 4, 53, 0, 0, 0.16082720489992372, 3.4541849868951924, 3], \"199\": [66, 72, 137, 553, 3.3064643838782444, 3.4746168391189314, 4.648608743667433, 7.52107877334528, 1], \"87\": [1, 1, 2, 9, 0, 0, 0.2646925542270822, 1.9652033519899923, 3], \"547\": [1, 1, 2, 24, 0, 0, 0.05421381659414747, 2.1996975306830504, 3], \"394\": [2, 3, 9, 74, 0.0638175034414023, 0.13825661970102562, 0.8477684486311822, 4.513210236325252, 1], \"419\": [2, 3, 3, 55, 0.3308542443169896, 0.6325225587435105, 0.6325225587435105, 5.6956448788905245, 1], \"153\": [2, 3, 8, 68, 0.023095714794649336, 0.051234881466595814, 0.31760375231683013, 3.3325382328547573, 1], \"758\": [40, 44, 63, 357, 4.0559084111958095, 4.243518338779606, 4.864063588608866, 8.416370826116305, 1], \"865\": [4, 5, 15, 62, 1.0434802179733935, 1.3541748116977779, 3.290715215884274, 6.093206454527567, 1], \"778\": [3, 4, 7, 79, 0.24715209136621874, 0.4044261469757453, 0.926826930985397, 5.275169899169596, 1], \"298\": [0, 0, 3, 21, 0, 0, 1.0560526742493137, 4.531254503037923, 3], \"344\": [0, 1, 3, 31, 0, 0, 0.059188871390330605, 2.016347324819332, 3], \"860\": [2, 2, 4, 49, 0.16989903679539747, 0.16989903679539747, 0.5543107357057295, 4.719903307892582, 1], \"54\": [2, 4, 10, 91, 0.028737609767356852, 0.11030454201470608, 0.5474639518317855, 4.116711592368997, 1], \"160\": [0, 1, 4, 52, 0, 0, 0.14732471475685843, 3.325949158529702, 3], \"765\": [3, 3, 3, 15, 1.5260563034950494, 1.5260563034950494, 1.5260563034950494, 4.51085950651685, 1], \"912\": [91, 98, 179, 477, 4.774963796247719, 4.926408203920642, 5.798554619224144, 8.587081704457523, 1], \"450\": [3, 4, 5, 20, 0.1333332747437359, 0.22599210522644073, 0.33375176339496637, 1.9932222439395388, 1], \"673\": [0, 0, 0, 4, 0, 0, 0, 0.7545999597736089, 4], \"263\": [0, 0, 2, 6, 0, 0, 0.08974628785627545, 0.6125174461598362, 3], \"150\": [0, 1, 4, 25, 0, 0, 0.13638120931528305, 1.9032654463573766, 3], \"71\": [71, 82, 156, 434, 4.0664466855301, 4.350226557007184, 5.537153806947058, 7.6703558241515175, 1], \"90\": [1, 1, 2, 38, 0, 0, 0.04843561709959499, 2.939988710041591, 3], \"189\": [0, 0, 3, 50, 0, 0, 0.0295588022415444, 2.2335922215070942, 3], \"554\": [0, 0, 0, 11, 0, 0, 0, 2.58189891577531, 4], \"416\": [2, 3, 17, 107, 0.05518641556729086, 0.12014431184206324, 1.6291014673428785, 5.096183820711953, 1], \"66\": [1, 1, 5, 65, 0, 0, 0.08924934883008435, 2.819990961134365, 3], \"329\": [9, 10, 14, 85, 1.4089368378696505, 1.5721085393400616, 2.1378184664384783, 5.6231628406265814, 1], \"63\": [6, 8, 12, 48, 0.41205336723254776, 0.6452772727114311, 1.1117456856974017, 3.5155541367324954, 1], \"536\": [3, 3, 8, 52, 0.9473813189441862, 0.9473813189441862, 2.503734142925974, 6.164127031798412, 1], \"572\": [1, 1, 1, 29, 0, 0, 0, 2.538791359331391, 4], \"334\": [0, 0, 2, 37, 0, 0, 0.037919234862293726, 2.6551453028203182, 3], \"593\": [1, 2, 2, 7, 0, 0.5543107357057295, 0.5543107357057295, 2.309965200291668, 2], \"109\": [0, 0, 6, 72, 0, 0, 0.9137980010445526, 5.375758544436334, 3], \"41\": [3, 4, 4, 55, 0.07990051073053109, 0.13791180308699724, 0.13791180308699724, 3.3658287590807023, 1], \"383\": [5, 8, 9, 21, 0.1727230996720166, 0.39383412996130407, 0.47676802933427764, 1.4645952115336485, 1], \"152\": [1, 2, 3, 59, 0, 0.02987526143382911, 0.06600635918136562, 3.310221993211275, 2], \"62\": [3, 3, 8, 81, 0.062260768427731414, 0.062260768427731414, 0.3762536164728378, 3.8676705176646595, 1], \"175\": [1, 1, 2, 16, 0, 0, 0.0333364202675918, 1.1535711729488671, 3], \"296\": [6, 6, 6, 25, 1.8152899666382492, 1.8152899666382492, 1.8152899666382492, 4.502979245091544, 1], \"662\": [1, 2, 2, 23, 0, 0.11641035184441127, 0.11641035184441127, 2.8522752411294983, 2], \"545\": [2, 3, 4, 29, 0.4795730802618863, 0.8690378470236095, 1.241713132308783, 4.870488662353014, 1], \"237\": [1, 1, 2, 9, 0, 0, 0.04495138786226632, 0.6580558607486752, 3], \"319\": [0, 1, 3, 35, 0, 0, 0.6514744841593773, 4.836281906951478, 3], \"653\": [0, 0, 0, 9, 0, 0, 0, 1.3975094319400305, 4], \"240\": [1, 4, 5, 55, 0, 0.2346473757956944, 0.34587301090591877, 3.9318256327243257, 2], \"116\": [6, 6, 9, 87, 0.5761755039744411, 0.5761755039744411, 1.0127808528183286, 5.104921730849402, 1], \"687\": [3, 3, 4, 10, 0.7672551527136672, 0.7672551527136672, 1.1155618469818829, 2.626153924779351, 1], \"100\": [1, 1, 2, 35, 0, 0, 0.014809600547287, 1.7172497292907045, 3], \"461\": [0, 0, 0, 13, 0, 0, 0, 2.361068386369137, 4], \"85\": [0, 0, 0, 28, 0, 0, 0, 3.4132345065874574, 4], \"61\": [0, 0, 2, 12, 0, 0, 0.039530838756635246, 0.8967461358011848, 3], \"188\": [1, 1, 2, 18, 0, 0, 0.09599691440839975, 2.2149781642997985, 3], \"714\": [0, 0, 0, 12, 0, 0, 0, 1.7831312880047168, 4], \"168\": [0, 1, 4, 16, 0, 0, 0.37380778823747274, 2.110470700026138, 3], \"217\": [3, 5, 10, 33, 0.022614029001160142, 0.06159582207207209, 0.22644179101607836, 1.3264040630144225, 1], \"271\": [1, 1, 5, 22, 0, 0, 0.9448109538225702, 3.4480889691933387, 3], \"55\": [1, 3, 8, 62, 0, 0.03766135463631043, 0.24131434494632273, 2.856028964854301, 2], \"695\": [13, 14, 25, 116, 1.435264884204051, 1.5501381701528085, 2.552341068460735, 5.54458541320302, 1], \"303\": [3, 3, 5, 29, 0.27958486221916157, 0.27958486221916157, 0.6397766500369337, 3.4386013550178403, 1], \"117\": [0, 0, 3, 46, 0, 0, 0.22094333040460734, 4.07977000297257, 3], \"633\": [1, 2, 2, 8, 0, 0.2578291093020998, 0.2578291093020998, 1.7414976344471667, 2], \"268\": [1, 1, 4, 42, 0, 0, 0.07393666594345284, 2.2471180114811733, 3], \"48\": [5, 5, 12, 77, 0.15025203941160098, 0.15025203941160098, 0.6595139412014089, 3.675035691164881, 1], \"724\": [4, 6, 20, 85, 0.16312782492496253, 0.3355225689335057, 1.691879988234248, 4.39458586381029, 1], \"135\": [0, 2, 3, 17, 0, 0.04297116528543199, 0.09421188205526226, 1.4284765717292904, 2], \"374\": [1, 1, 2, 5, 0, 0, 0.05849620668160855, 0.31954842197771616, 3], \"80\": [3, 3, 4, 15, 0.0472777117861168, 0.0472777117861168, 0.08256363059139347, 0.7931409811619657, 1], \"602\": [0, 0, 0, 19, 0, 0, 0, 2.531353818946809, 4], \"516\": [1, 1, 3, 15, 0, 0, 0.2761315220005779, 2.1917127523584377, 3], \"310\": [3, 4, 4, 16, 0.4036217896138752, 0.633385446017691, 0.633385446017691, 2.71758106503696, 1], \"83\": [0, 1, 3, 16, 0, 0, 0.06074741913960751, 1.0229864726322986, 3], \"333\": [0, 0, 2, 32, 0, 0, 0.7472144018302211, 5.654047419773664, 3], \"45\": [2, 3, 3, 34, 0.02361384810830447, 0.05236798551731598, 0.05236798551731598, 2.0675733035225843, 1], \"221\": [0, 0, 0, 12, 0, 0, 0, 1.6945957207744073, 4], \"404\": [1, 1, 2, 10, 0, 0, 0.1292117314800062, 1.492516574375198, 3], \"40\": [3, 3, 5, 35, 0.08047235322257314, 0.08047235322257314, 0.20926746142814354, 2.5181769242447603, 1], \"198\": [1, 2, 4, 44, 0, 0.02035693706874412, 0.07905349006393513, 2.3936798098814656, 2], \"290\": [1, 1, 2, 14, 0, 0, 0.04455079698537381, 1.1732082640848713, 3], \"442\": [0, 0, 2, 25, 0, 0, 0.09374540917097383, 2.7946110261581087, 3], \"267\": [1, 1, 2, 7, 0, 0, 1.4053425560905852, 3.6556408126382025, 3], \"367\": [4, 5, 5, 24, 0.25993517132481314, 0.38105074993687704, 0.38105074993687704, 2.458430598712932, 1], \"410\": [0, 0, 2, 18, 0, 0, 0.11122563511022437, 2.3541724617845388, 3], \"169\": [2, 3, 4, 37, 0.010672459890771873, 0.02385482848021112, 0.04202298977484789, 1.541632257447203, 1], \"155\": [1, 1, 4, 33, 0, 0, 0.09946079353063801, 2.0940403411009885, 3], \"70\": [4, 5, 5, 44, 0.05059567842116761, 0.07796965042158932, 0.07796965042158932, 1.9850756126543643, 1], \"260\": [0, 1, 2, 16, 0, 0, 0.20585205420414873, 2.7491007409325676, 3], \"219\": [6, 8, 19, 65, 0.2729710814971248, 0.44338839803005736, 1.4224673793029108, 3.6332404761459594, 1], \"166\": [1, 1, 2, 35, 0, 0, 0.322773392263051, 4.767855768265187, 3], \"92\": [4, 5, 10, 65, 0.17647417648741714, 0.26356981012283964, 0.7913044932555706, 3.9505707632379434, 1], \"366\": [0, 0, 2, 9, 0, 0, 0.5042466526679481, 2.6587681126791916, 3], \"229\": [2, 2, 4, 11, 0.04180336980436055, 0.04180336980436055, 0.15765117803680806, 0.8291435156403588, 1], \"525\": [4, 5, 6, 36, 0.4994248488146178, 0.6992016894686516, 0.8991404544315211, 3.9791139344158273, 1], \"287\": [3, 3, 5, 34, 0.0614527792136636, 0.0614527792136636, 0.16216675481549436, 2.2127528396627745, 1], \"540\": [7, 7, 11, 48, 0.520251809446536, 0.520251809446536, 0.9877689061222668, 3.4992050258012606, 1], \"388\": [2, 2, 2, 15, 0.49159426183810306, 0.49159426183810306, 0.49159426183810306, 3.6031659358399066, 1], \"16\": [4, 5, 18, 95, 0.15444887574418392, 0.23187360052389974, 1.4775157224097177, 4.556050113542695, 1], \"265\": [0, 0, 0, 5, 0, 0, 0, 2.02537432040956, 4], \"637\": [3, 3, 6, 49, 0.17520408902509066, 0.17520408902509066, 0.5686930060865394, 3.952879041922158, 1], \"448\": [1, 4, 6, 20, 0, 0.24625998517191192, 0.48751948413260426, 2.077039006943316, 2], \"850\": [24, 25, 53, 159, 3.3069368790644034, 3.3857050862274845, 4.771899496023518, 7.052187655830199, 1], \"25\": [0, 1, 2, 59, 0, 0, 0.044255009004040724, 3.698280823778317, 3], \"274\": [0, 0, 0, 11, 0, 0, 0, 0.8838451377475895, 4], \"275\": [0, 0, 0, 4, 0, 0, 0, 0.8569364892249722, 4], \"535\": [0, 0, 0, 5, 0, 0, 0, 1.3051309540126839, 4], \"578\": [0, 0, 1, 4, 0, 0, 0, 1.9352717508502575, 4], \"746\": [0, 0, 0, 3, 0, 0, 0, 1.2939210409888755, 4], \"751\": [0, 0, 0, 2, 0, 0, 0, 2.3978952727983707, 4], \"769\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"800\": [0, 0, 0, 3, 0, 0, 0, 0.8430873278508602, 4], \"819\": [0, 0, 1, 3, 0, 0, 0, 0.9264088620397397, 4], \"896\": [4, 5, 7, 46, 0.9555114450274365, 1.252762968495368, 1.7749523509116738, 5.359412465907847, 1], \"213\": [1, 1, 2, 4, 0, 0, 0.06136894637629212, 0.22567199766756846, 3], \"789\": [1, 1, 4, 33, 0, 0, 0.2776317365982795, 3.1258829580190364, 3], \"929\": [0, 0, 1, 2, 0, 0, 0, 1.5339303599259553, 4], \"136\": [1, 2, 3, 45, 0, 0.016942378995952016, 0.03772450682521259, 2.2669734083663116, 2], \"766\": [2, 2, 4, 36, 0.2595111954850846, 0.2595111954850846, 0.7817005779013904, 4.574710978503383, 1], \"932\": [1, 1, 12, 127, 0, 0, 2.013099593543114, 6.58965734041778, 3], \"941\": [3, 3, 4, 16, 0.2527333714065298, 0.2527333714065298, 0.4128921979517797, 2.2169088684391363, 1], \"907\": [9, 9, 13, 49, 0.5498722876628932, 0.5498722876628932, 0.9279867716373463, 3.123619942232292, 1], \"180\": [2, 3, 4, 8, 0.07020425867324853, 0.15154989812720093, 0.2553466918088445, 0.7717903078790584, 1], \"118\": [4, 5, 6, 23, 0.11457438644569456, 0.17368548584790064, 0.24148717196469893, 1.6121656001383613, 1], \"515\": [4, 4, 13, 65, 0.535302370192545, 0.535302370192545, 2.13745995925852, 5.23615949025145, 1], \"882\": [1, 1, 3, 29, 0, 0, 0.14878873668587292, 2.7720315260365873, 3], \"226\": [0, 0, 4, 34, 0, 0, 0.08399478345020413, 1.9920816025056738, 3], \"957\": [46, 47, 87, 293, 3.9969952677989067, 4.039233961055224, 5.168241518773773, 7.68197726844849, 1], \"480\": [6, 7, 15, 45, 1.4453278927040836, 1.6890647332228734, 3.057310335773179, 5.211846384059534, 1], \"777\": [19, 22, 39, 124, 2.718453415863096, 2.994751400498399, 4.105071139960744, 6.403541734091418, 1], \"975\": [63, 69, 122, 504, 4.16201313187217, 4.341362204703588, 5.382333607175946, 8.305444660633688, 1], \"402\": [0, 1, 2, 12, 0, 0, 0.12963106265293975, 1.7888717975708583, 3], \"59\": [1, 1, 3, 13, 0, 0, 0.2300164306019718, 1.767521734008196, 3], \"990\": [9, 10, 20, 755, 1.7517541346143557, 1.9289605907415401, 3.1998728777425853, 9.956301479445777, 1], \"998\": [6, 6, 13, 85, 1.0912593143628508, 1.0912593143628508, 2.330755969960742, 5.986396782598945, 1], \"1008\": [2, 2, 2, 6, 0.4572413776318843, 0.4572413776318843, 0.4572413776318843, 1.8273504143307577, 1], \"1014\": [50, 58, 113, 790, 3.4723075827801346, 3.761142047056417, 4.987789366451007, 8.833671343258125, 1], \"792\": [0, 0, 5, 29, 0, 0, 0.10130111471960927, 1.5230853608214507, 3], \"972\": [0, 0, 2, 33, 0, 0, 0.462623521948113, 5.082317356922254, 3], \"1019\": [10, 10, 24, 184, 0.08782961064479985, 0.08782961064479985, 0.4244699992758255, 3.468248693705138, 1], \"971\": [0, 0, 4, 40, 0, 0, 0.9257694758286988, 5.032924711607776, 3], \"1028\": [28, 28, 39, 236, 3.3334352795613365, 3.3334352795613365, 3.978714379926818, 7.560888328267596, 1], \"976\": [0, 0, 3, 36, 0, 0, 0.851553185957342, 5.270086786306598, 3], \"1031\": [0, 0, 0, 8, 0, 0, 0, 1.614456743546043, 4], \"908\": [0, 1, 5, 11, 0, 0, 0.15061480566787017, 0.5803905032766506, 3], \"529\": [5, 6, 14, 52, 1.1984017592764806, 1.4663370687934272, 2.9522060085041, 5.52692743069943, 1], \"1029\": [24, 28, 65, 284, 2.5127311558974297, 2.7992958206186094, 4.404624543409679, 7.370681758825065, 1], \"1040\": [0, 0, 0, 2, 0, 0, 0, 1.0663514264498883, 4], \"1046\": [29, 31, 50, 134, 2.2905809120898346, 2.4112453328036167, 3.3105121817885435, 5.25022574398046, 1], \"202\": [0, 0, 3, 19, 0, 0, 0.07290677080808777, 1.3946626107904072, 3], \"163\": [13, 13, 24, 77, 2.2504980427770174, 2.2504980427770174, 3.3993531360224867, 5.700241875768354, 1], \"727\": [3, 3, 3, 9, 1.3156767939059373, 1.3156767939059373, 1.3156767939059373, 3.240459396535375, 1], \"1050\": [2, 2, 3, 20, 0.17135825199668508, 0.17135825199668508, 0.35105168638437023, 2.980191579342283, 1], \"940\": [6, 6, 6, 12, 0.8070914399091631, 0.8070914399091631, 0.8070914399091631, 1.785995764511305, 1], \"605\": [5, 7, 11, 55, 0.154341392138316, 0.2829982231393545, 0.5920794699550008, 3.053698846133601, 1], \"803\": [0, 0, 4, 26, 0, 0, 0.17785091329828598, 2.2217919010201, 3], \"1073\": [0, 1, 2, 6, 0, 0, 0.18485641239714268, 1.0393615111892955, 3], \"530\": [1, 3, 4, 8, 0, 0.18571714579509285, 0.3095500590883616, 0.8965969421923623, 2], \"893\": [18, 20, 31, 140, 2.3839829727247883, 2.5770340966766088, 3.4081639402026336, 6.3914893516493665, 1], \"817\": [2, 2, 4, 20, 0.07133147800542972, 0.07133147800542972, 0.2590886081881086, 2.1274832522514697, 1], \"1103\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1113\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"739\": [6, 7, 15, 69, 0.2888441876319583, 0.37556516241249044, 1.1291490125281913, 3.8130503128510935, 1], \"1121\": [0, 0, 1, 4, 0, 0, 0, 0.5643439291313685, 4], \"223\": [2, 3, 4, 17, 0.2595111954850846, 0.5108256237659907, 0.7817005779013904, 3.1093915920265123, 1], \"1056\": [12, 12, 20, 73, 1.376991968457577, 1.376991968457577, 2.2225080911796598, 4.706373926064393, 1], \"451\": [3, 3, 6, 19, 0.18381520905073792, 0.18381520905073792, 0.5917647904865642, 2.207633593250955, 1], \"503\": [2, 2, 6, 31, 0.09287412500644375, 0.09287412500644375, 0.6290951590670949, 3.1938449555620942, 1], \"1149\": [1, 1, 4, 23, 0, 0, 2.342936388517613, 5.743568638771679, 3], \"1161\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1162\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1163\": [0, 0, 0, 2, 0, 0, 0, 0.7777045685880084, 4], \"1178\": [12, 12, 19, 52, 2.477302050402781, 2.477302050402781, 3.344573584247664, 5.327140387724822, 1], \"1205\": [0, 1, 5, 19, 0, 0, 0.4583075894825443, 2.2402147622675876, 3], \"1215\": [0, 0, 0, 11, 0, 0, 0, 4.169517130399594, 4], \"1218\": [3, 3, 6, 39, 0.734450986701181, 0.734450986701181, 1.6747291622485376, 5.216309878551526, 1], \"1237\": [0, 0, 0, 10, 0, 0, 0, 3.9318256327243257, 4], \"1245\": [0, 0, 3, 14, 0, 0, 0.16135093247964982, 1.571368287497268, 3], \"1246\": [0, 0, 0, 10, 0, 0, 0, 4.035223439214303, 4], \"299\": [1, 1, 2, 7, 0, 0, 0.30774963550259016, 1.6890647332228734, 3], \"1051\": [1, 1, 4, 12, 0, 0, 1.7661826274384054, 3.79854885499615, 3], \"1275\": [0, 0, 0, 15, 0, 0, 0, 2.9520500095645765, 4], \"328\": [0, 1, 3, 33, 0, 0, 0.10318423623523076, 2.649868245719474, 3], \"64\": [2, 2, 2, 12, 0.04505266394094313, 0.04505266394094313, 0.04505266394094313, 0.97794491296764, 1], \"1338\": [0, 0, 0, 3, 0, 0, 0, 0.1365755350057508, 4], \"1059\": [2, 3, 12, 69, 0.3933437475758196, 0.734450986701181, 2.909596745098564, 6.353699307786814, 1], \"804\": [0, 0, 2, 13, 0, 0, 0.7621400520468967, 3.8976342679760463, 3], \"1142\": [1, 1, 2, 56, 0, 0, 0.5623075796011341, 6.38468518540345, 3], \"1357\": [0, 0, 0, 3, 0, 0, 0, 2.069779630768099, 4], \"1171\": [34, 38, 91, 185, 3.3325382328547573, 3.547843335835346, 5.180372229292283, 6.685423314130372, 1], \"616\": [1, 1, 4, 49, 0, 0, 2.0739919369122712, 6.951688948954077, 3], \"1371\": [153, 166, 319, 1209, 5.605757005560598, 5.743274728261888, 6.492115570964371, 9.829208398395126, 1], \"1128\": [13, 14, 33, 137, 1.569928869429474, 1.6890647332228734, 3.23973777429734, 6.049085191440292, 1], \"1271\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1368\": [0, 0, 1, 11, 0, 0, 0, 3.599726748682963, 4], \"1374\": [0, 0, 8, 222, 0, 0, 2.5707380856377813, 9.010508447206139, 3], \"1377\": [0, 0, 0, 3, 0, 0, 0, 2.005333569526114, 4], \"1382\": [0, 1, 1, 3, 0, 0, 0, 1.3862943611198906, 4], \"768\": [2, 3, 6, 23, 0.14897379164772453, 0.30854721091574266, 0.8943653712451894, 3.102116361568396, 1], \"676\": [2, 3, 5, 12, 0.5108256237659907, 0.9162907318741551, 1.6422277352570913, 3.2188758248682006, 1], \"1025\": [2, 2, 5, 44, 0.24362208265775043, 0.24362208265775043, 1.0021520224805474, 4.901692379520182, 1], \"1399\": [0, 1, 1, 8, 0, 0, 0, 3.1384882301417543, 4], \"866\": [0, 1, 3, 10, 0, 0, 0.6418538861723948, 2.3978952727983707, 3], \"794\": [1, 1, 4, 36, 0, 0, 0.8472978603872036, 4.6913478822291435, 3], \"1092\": [1, 1, 2, 45, 0, 0, 0.16917873135476025, 4.54667175843899, 3], \"35\": [0, 0, 2, 17, 0, 0, 0.012861913642407755, 0.6602494770528863, 3], \"611\": [1, 1, 2, 5, 0, 0, 0.31508104663989533, 1.1984017592764806, 3], \"1185\": [1, 2, 2, 5, 0, 0.3030501026800949, 0.3030501026800949, 1.16701501555251, 2], \"1177\": [3, 3, 3, 12, 0.6716409753389817, 0.6716409753389817, 0.6716409753389817, 2.7923391996571976, 1], \"1427\": [0, 1, 3, 24, 0, 0, 0.7537718023763802, 4.290459441148391, 3], \"1453\": [0, 0, 0, 5, 0, 0, 0, 2.362304327695668, 4], \"1459\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1414\": [0, 1, 3, 12, 0, 0, 0.5668534552356532, 2.580473601965029, 3], \"1035\": [1, 2, 3, 13, 0, 0.24362208265775043, 0.48285177172358457, 2.538066018068096, 2], \"95\": [0, 2, 2, 13, 0, 0.1684645221325284, 0.1684645221325284, 2.169315789219143, 2], \"698\": [2, 2, 4, 18, 0.2664662333015083, 0.2664662333015083, 0.798125943970341, 3.2477673920329093, 1], \"1498\": [0, 1, 1, 13, 0, 0, 0, 2.5444413532404093, 4], \"1400\": [0, 0, 4, 19, 0, 0, 1.0145934326149337, 3.705498825869306, 3], \"501\": [1, 1, 2, 5, 0, 0, 0.1720973230180951, 0.776434888376809, 3], \"1536\": [0, 0, 0, 6, 0, 0, 0, 2.5649493574615367, 4], \"1550\": [1, 1, 1, 8, 0, 0, 0, 3.5988331734291528, 4], \"424\": [7, 7, 10, 23, 0.40478599093435563, 0.40478599093435563, 0.7022704065354674, 1.8542592536757778, 1], \"1554\": [3, 3, 3, 9, 0.9808292530117262, 0.9808292530117262, 0.9808292530117262, 2.772588722239781, 1], \"1556\": [1, 1, 2, 14, 0, 0, 0.38946476676172326, 3.1918471524802814, 3], \"1320\": [6, 7, 16, 62, 0.8943653712451894, 1.087845024483494, 2.423130930639536, 5.045857704423868, 1], \"1539\": [4, 5, 9, 35, 1.0145934326149337, 1.3210229707666667, 2.292645751091488, 4.909822824936334, 1], \"1563\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"854\": [23, 24, 36, 153, 3.4524617738979386, 3.5349936717608643, 4.301386230715188, 7.210908100327703, 1], \"1578\": [0, 0, 0, 5, 0, 0, 0, 2.2043674648485996, 4], \"406\": [1, 1, 2, 23, 0, 0, 0.538996500732687, 4.558752205963715, 3], \"1404\": [0, 1, 2, 11, 0, 0, 1.007640510462383, 3.9817112872351945, 3], \"1221\": [2, 2, 2, 8, 0.30774963550259016, 0.30774963550259016, 0.30774963550259016, 1.9118754504518005, 1], \"1446\": [1, 2, 7, 42, 0, 0.538996500732687, 2.277267285009756, 5.755742213586912, 2], \"948\": [0, 1, 2, 7, 0, 0, 0.053994220576736765, 0.5185626062681432, 3], \"889\": [0, 1, 2, 7, 0, 0, 0.2421400520048648, 1.4715919416317857, 3], \"955\": [2, 2, 4, 14, 0.5316597106688327, 0.5316597106688327, 1.3368460857059095, 3.5663152701196617, 1], \"795\": [1, 1, 5, 9, 0, 0, 0.7223768188748837, 1.4888968395992581, 3], \"1207\": [1, 2, 4, 27, 0, 0.2578291093020998, 0.7777045685880084, 4.000087749000973, 2], \"1256\": [5, 6, 7, 14, 1.2599520720678372, 1.5339303599259553, 1.7833063335169967, 3.0348558568931994, 1], \"1621\": [1, 2, 2, 21, 0, 0.4054651081081644, 0.4054651081081644, 4.027581346062418, 2], \"832\": [0, 0, 3, 11, 0, 0, 0.8266785731844679, 2.906120114864304, 3], \"1095\": [1, 1, 2, 9, 0, 0, 0.4321333551903257, 2.4803919694334735, 3], \"1665\": [2, 2, 4, 25, 0.705886206337375, 0.705886206337375, 1.629743178594846, 5.082995708413857, 1], \"931\": [0, 0, 2, 6, 0, 0, 0.538996500732687, 2.005333569526114, 3], \"1285\": [4, 4, 8, 61, 0.6109090823229733, 0.6109090823229733, 1.4744016286301573, 5.282401911242137, 1], \"1648\": [8, 8, 10, 21, 1.8388428122649447, 1.8388428122649447, 2.2261858774754186, 3.622907399070397, 1], \"1646\": [14, 16, 27, 110, 1.6094379124341003, 1.828491478496785, 2.764906226067765, 5.513181842744116, 1], \"1579\": [0, 1, 2, 5, 0, 0, 1.007640510462383, 2.47397757925581, 3], \"1713\": [88, 96, 172, 516, 5.0256040411903, 5.202920403876411, 6.037268851024129, 8.987489023183397, 1], \"1729\": [0, 0, 0, 2, 0, 0, 0, 1.9042374526547454, 4], \"389\": [1, 1, 2, 5, 0, 0, 0.057076831135436705, 0.31269697112755473, 3], \"1116\": [7, 8, 9, 27, 0.8025197377077323, 0.9585990584413963, 1.1102693732103224, 2.9609639453656906, 1], \"1319\": [0, 0, 4, 10, 0, 0, 0.18149202543157925, 0.8081624314436026, 3], \"1091\": [1, 1, 2, 8, 0, 0, 1.4663370687934272, 3.9951379121386528, 3], \"86\": [0, 0, 2, 9, 0, 0, 0.07770898432731625, 0.9694005571881035, 3], \"1781\": [2, 2, 2, 8, 0.08252102368800351, 0.08252102368800351, 0.08252102368800351, 0.865563208364497, 1], \"1635\": [1, 1, 3, 5, 0, 0, 0.09051400754083183, 0.23361485118150516, 3], \"1790\": [102, 108, 199, 431, 5.189336381883098, 5.307203300517692, 6.197774310365152, 8.572063152027837, 1], \"1337\": [1, 1, 3, 8, 0, 0, 2.3978952727983707, 4.27820813936787, 3], \"1737\": [1, 1, 2, 15, 0, 0, 0.14107859825990554, 2.253681286003877, 3], \"1801\": [1, 1, 1, 2, 0, 0, 0, 0.04184710993550044, 4], \"1819\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"606\": [0, 0, 2, 5, 0, 0, 0.39730179746900346, 1.3984157216522355, 3], \"1780\": [5, 5, 9, 26, 1.2181574393178924, 1.2181574393178924, 2.164963715117998, 4.180230968044548, 1], \"1604\": [2, 2, 2, 5, 0.1541506798272583, 0.1541506798272583, 0.1541506798272583, 0.713766467762681, 1], \"1848\": [0, 0, 0, 8, 0, 0, 0, 1.4200325007517407, 4], \"1603\": [0, 0, 3, 13, 0, 0, 0.09218395607805856, 1.034359849638054, 3], \"1842\": [0, 0, 2, 13, 0, 0, 1.133098464739279, 4.49922470394915, 3], \"1908\": [3, 3, 6, 44, 0.03275401966872916, 0.03275401966872916, 0.12503256055632767, 2.099539730031924, 1], \"1899\": [0, 0, 0, 3, 0, 0, 0, 0.352440639799944, 4], \"1909\": [87, 104, 201, 481, 4.949875677980282, 5.309515746586827, 6.295495675759352, 8.793864874733085, 1], \"1915\": [0, 0, 1, 2, 0, 0, 0, 0.3856624808119847, 4], \"1931\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"1406\": [0, 0, 2, 6, 0, 0, 0.09396579241833143, 0.6348290101388587, 3], \"1959\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1980\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1231\": [0, 1, 2, 5, 0, 0, 0.1147388932751553, 0.5652447268076234, 3], \"978\": [0, 0, 2, 3, 0, 0, 0.15718558352241233, 0.32423966818557853, 3], \"2019\": [7, 7, 10, 36, 1.5933085305042167, 1.5933085305042167, 2.1972245773362196, 4.650908077661946, 1], \"2045\": [2, 2, 12, 52, 0.42285685082003355, 0.42285685082003355, 2.993097225915986, 5.8771458982645255, 1], \"2046\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"863\": [0, 0, 2, 4, 0, 0, 0.5465437063680699, 1.363304842895192, 3], \"2040\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"735\": [5, 5, 11, 29, 0.2786439218367188, 0.2786439218367188, 0.9381578630381278, 2.4689270396305973, 1], \"2048\": [0, 0, 1, 5, 0, 0, 0, 0.2638495970836828, 4], \"1663\": [0, 0, 3, 14, 0, 0, 1.591893602783191, 4.456871912590646, 3], \"1883\": [1, 1, 3, 7, 0, 0, 1.3862943611198906, 2.8526314299133175, 3], \"2078\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2097\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1305\": [4, 4, 11, 23, 0.949399890481434, 0.949399890481434, 2.5634249669224403, 3.977365658610409, 1], \"930\": [1, 3, 3, 5, 0, 0.7812544480702122, 0.7812544480702122, 1.4561640410803764, 2], \"1288\": [0, 2, 2, 5, 0, 0.8286926725561692, 0.8286926725561692, 2.2043674648485996, 2], \"2126\": [0, 0, 0, 3, 0, 0, 0, 0.08568511684827633, 4], \"2090\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"1894\": [2, 2, 2, 9, 0.01940866358378963, 0.01940866358378963, 0.01940866358378963, 0.3342299261028272, 1], \"2140\": [1, 1, 2, 2, 0, 0, 1.791759469228055, 1.791759469228055, 3], \"595\": [1, 1, 3, 14, 0, 0, 0.03774032798284703, 0.6084640933299067, 3], \"643\": [1, 2, 8, 15, 0, 0.037563101575648544, 0.4777486783875507, 1.1483892825376962, 2], \"2047\": [2, 2, 2, 5, 0.20692071580732246, 0.20692071580732246, 0.20692071580732246, 0.8906781560174287, 1], \"684\": [0, 0, 2, 3, 0, 0, 0.12477221253464107, 0.26159729523649006, 3], \"1477\": [2, 2, 2, 4, 0.4013413909243023, 0.4013413909243023, 0.4013413909243023, 1.090347778818216, 1], \"2038\": [2, 2, 2, 6, 0.14107859825990554, 0.14107859825990554, 0.14107859825990554, 0.8602012652231115, 1], \"2184\": [5, 5, 15, 32, 1.8993901334204204, 1.8993901334204204, 3.953862663771055, 5.454154934467519, 1], \"1300\": [0, 0, 3, 9, 0, 0, 0.5456944494168147, 2.019194872623806, 3], \"2102\": [1, 1, 4, 5, 0, 0, 0.6869552103120242, 0.9334270141171424, 3], \"2211\": [1, 1, 4, 6, 0, 0, 0.8668106746107854, 1.4118276631250553, 3], \"2095\": [3, 3, 3, 6, 0.7407752295491999, 0.7407752295491999, 0.7407752295491999, 1.684590634813445, 1], \"2217\": [0, 1, 2, 4, 0, 0, 0.5968160716215132, 1.4505139538541845, 3], \"528\": [0, 1, 2, 6, 0, 0, 0.16430305129127631, 0.9582549309731873, 3], \"1397\": [1, 1, 3, 5, 0, 0, 0.32306557634109756, 0.7223768188748837, 3], \"343\": [0, 0, 2, 8, 0, 0, 0.15718558352241233, 1.3146383722134554, 3], \"2232\": [2, 2, 2, 3, 0.5623075796011341, 0.5623075796011341, 0.5623075796011341, 0.9925527167077854, 1], \"1942\": [0, 0, 2, 3, 0, 0, 0.09576690509200843, 0.20386340056870947, 3], \"2335\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1782\": [0, 0, 2, 2, 0, 0, 0.8286926725561692, 0.8286926725561692, 3], \"2316\": [2, 2, 4, 4, 0.5108256237659907, 0.5108256237659907, 1.2992829841302609, 1.2992829841302609, 1], \"1951\": [0, 1, 2, 4, 0, 0, 0.23780070911418325, 0.7293949709522863, 3], \"1296\": [0, 0, 2, 2, 0, 0, 0.8873031950009028, 0.8873031950009028, 3], \"1966\": [1, 1, 2, 5, 0, 0, 0.14842000511827327, 0.6931471805599453, 3], \"2383\": [1, 1, 4, 6, 0, 0, 0.21215279757720032, 0.42641593531725236, 3], \"2347\": [4, 5, 6, 7, 0.680877087968131, 0.925999546001116, 1.1616252564968437, 1.3832409236330003, 1], \"2374\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"583\": [0, 0, 3, 4, 0, 0, 0.5491078103370076, 0.8332625422708201, 3], \"1542\": [0, 1, 2, 2, 0, 0, 0.41397579777607296, 0.41397579777607296, 3], \"1038\": [2, 2, 3, 3, 1.0360919316867756, 1.0360919316867756, 1.6274564179367788, 1.6274564179367788, 1], \"1516\": [0, 1, 2, 2, 0, 0, 1.007640510462383, 1.007640510462383, 3], \"1970\": [0, 0, 3, 5, 0, 0, 0.4054651081081644, 0.8708283577973976, 3], \"2473\": [0, 1, 2, 3, 0, 0, 0.7777045685880084, 1.2939210409888755, 3], \"2134\": [0, 0, 2, 4, 0, 0, 0.44685032427101873, 1.1797378334804782, 3], \"2483\": [5, 5, 5, 7, 1.238658362313826, 1.238658362313826, 1.238658362313826, 1.7585338215997346, 1], \"2342\": [0, 0, 2, 2, 0, 0, 0.7621400520468967, 0.7621400520468967, 3], \"2123\": [0, 0, 2, 3, 0, 0, 0.6466271649250525, 1.11365016603265, 3], \"623\": [0, 0, 2, 2, 0, 0, 0.4519851237430572, 0.4519851237430572, 3], \"1466\": [0, 0, 2, 2, 0, 0, 1.209837923778334, 1.209837923778334, 3], \"1549\": [1, 1, 2, 2, 0, 0, 0.39730179746900346, 0.39730179746900346, 3], \"2494\": [1, 1, 2, 2, 0, 0, 0.8286926725561692, 0.8286926725561692, 3], \"711\": [0, 1, 2, 2, 0, 0, 2.03688192726104, 2.03688192726104, 3], \"1706\": [1, 1, 2, 4, 0, 0, 0.17435338714477774, 0.5663954749208014, 3], \"2550\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1093\": [2, 2, 3, 4, 0.680877087968131, 0.680877087968131, 1.1616252564968437, 1.589732841354768, 1], \"2639\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2662\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1585\": [0, 2, 2, 2, 0, 0.10763066419236544, 0.10763066419236544, 0.10763066419236544, 2], \"649\": [1, 2, 2, 2, 0, 0.09835932019884275, 0.09835932019884275, 0.09835932019884275, 2], \"2809\": [9, 11, 11, 23, 0.4546951525019224, 0.6205688454157567, 0.6205688454157567, 1.560199886795661, 1], \"2732\": [2, 3, 3, 7, 0.03496859783774675, 0.07702694116580719, 0.07702694116580719, 0.3618218183762577, 1], \"2917\": [0, 0, 0, 2, 0, 0, 0, 0.08644688360743705, 4], \"1777\": [2, 2, 2, 3, 0.08184524810424337, 0.08184524810424337, 0.08184524810424337, 0.1755467047088198, 1], \"1460\": [5, 5, 5, 6, 0.9296973921542704, 0.9296973921542704, 0.9296973921542704, 1.1658312632581607, 1], \"2696\": [2, 2, 2, 2, 0.538996500732687, 0.538996500732687, 0.538996500732687, 0.538996500732687, 1], \"2107\": [2, 2, 2, 3, 0.34228620648663277, 0.34228620648663277, 0.34228620648663277, 0.6514744841593773, 1], \"2563\": [2, 2, 2, 3, 0.5042466526679481, 0.5042466526679481, 0.5042466526679481, 0.9064059726416132, 1], \"3206\": [3, 3, 3, 3, 0.3327057538257361, 0.3327057538257361, 0.3327057538257361, 0.3327057538257361, 1], \"2552\": [2, 2, 2, 3, 0.22067136216882066, 0.22067136216882066, 0.22067136216882066, 0.44183275227903923, 1], \"584\": [2, 2, 2, 6, 0.017101742152143374, 0.017101742152143374, 0.017101742152143374, 0.14430753228907708, 1], \"3315\": [2, 2, 2, 2, 0.9315582040049435, 0.9315582040049435, 0.9315582040049435, 0.9315582040049435, 1]}"
}