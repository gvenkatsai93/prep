{
    "name": "Google",
    "slug": "google",
    "questions": [
        {
            "status": "ac",
            "questionId": "1",
            "questionFrontendId": "1",
            "title": "Two Sum",
            "titleSlug": "two-sum",
            "acRate": "51.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2",
            "questionFrontendId": "2",
            "title": "Add Two Numbers",
            "titleSlug": "add-two-numbers",
            "acRate": "42.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "3",
            "questionFrontendId": "3",
            "title": "Longest Substring Without Repeating Characters",
            "titleSlug": "longest-substring-without-repeating-characters",
            "acRate": "34.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "4",
            "questionFrontendId": "4",
            "title": "Median of Two Sorted Arrays",
            "titleSlug": "median-of-two-sorted-arrays",
            "acRate": "39.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "5",
            "questionFrontendId": "5",
            "title": "Longest Palindromic Substring",
            "titleSlug": "longest-palindromic-substring",
            "acRate": "33.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "6",
            "questionFrontendId": "6",
            "title": "Zigzag Conversion",
            "titleSlug": "zigzag-conversion",
            "acRate": "47.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "7",
            "questionFrontendId": "7",
            "title": "Reverse Integer",
            "titleSlug": "reverse-integer",
            "acRate": "28.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "8",
            "questionFrontendId": "8",
            "title": "String to Integer (atoi)",
            "titleSlug": "string-to-integer-atoi",
            "acRate": "17.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "9",
            "questionFrontendId": "9",
            "title": "Palindrome Number",
            "titleSlug": "palindrome-number",
            "acRate": "55.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "10",
            "questionFrontendId": "10",
            "title": "Regular Expression Matching",
            "titleSlug": "regular-expression-matching",
            "acRate": "28.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "11",
            "questionFrontendId": "11",
            "title": "Container With Most Water",
            "titleSlug": "container-with-most-water",
            "acRate": "54.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "12",
            "questionFrontendId": "12",
            "title": "Integer to Roman",
            "titleSlug": "integer-to-roman",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "13",
            "questionFrontendId": "13",
            "title": "Roman to Integer",
            "titleSlug": "roman-to-integer",
            "acRate": "60.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "14",
            "questionFrontendId": "14",
            "title": "Longest Common Prefix",
            "titleSlug": "longest-common-prefix",
            "acRate": "42.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "15",
            "questionFrontendId": "15",
            "title": "3Sum",
            "titleSlug": "3sum",
            "acRate": "34.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "16",
            "questionFrontendId": "16",
            "title": "3Sum Closest",
            "titleSlug": "3sum-closest",
            "acRate": "45.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "17",
            "questionFrontendId": "17",
            "title": "Letter Combinations of a Phone Number",
            "titleSlug": "letter-combinations-of-a-phone-number",
            "acRate": "59.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "18",
            "questionFrontendId": "18",
            "title": "4Sum",
            "titleSlug": "4sum",
            "acRate": "36.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "19",
            "questionFrontendId": "19",
            "title": "Remove Nth Node From End of List",
            "titleSlug": "remove-nth-node-from-end-of-list",
            "acRate": "43.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "20",
            "questionFrontendId": "20",
            "title": "Valid Parentheses",
            "titleSlug": "valid-parentheses",
            "acRate": "40.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "21",
            "questionFrontendId": "21",
            "title": "Merge Two Sorted Lists",
            "titleSlug": "merge-two-sorted-lists",
            "acRate": "63.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "22",
            "questionFrontendId": "22",
            "title": "Generate Parentheses",
            "titleSlug": "generate-parentheses",
            "acRate": "74.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "23",
            "questionFrontendId": "23",
            "title": "Merge k Sorted Lists",
            "titleSlug": "merge-k-sorted-lists",
            "acRate": "52.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "24",
            "questionFrontendId": "24",
            "title": "Swap Nodes in Pairs",
            "titleSlug": "swap-nodes-in-pairs",
            "acRate": "64.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "25",
            "questionFrontendId": "25",
            "title": "Reverse Nodes in k-Group",
            "titleSlug": "reverse-nodes-in-k-group",
            "acRate": "58.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "26",
            "questionFrontendId": "26",
            "title": "Remove Duplicates from Sorted Array",
            "titleSlug": "remove-duplicates-from-sorted-array",
            "acRate": "54.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "27",
            "questionFrontendId": "27",
            "title": "Remove Element",
            "titleSlug": "remove-element",
            "acRate": "56.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "28",
            "questionFrontendId": "28",
            "title": "Find the Index of the First Occurrence in a String",
            "titleSlug": "find-the-index-of-the-first-occurrence-in-a-string",
            "acRate": "41.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "29",
            "questionFrontendId": "29",
            "title": "Divide Two Integers",
            "titleSlug": "divide-two-integers",
            "acRate": "17.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "31",
            "questionFrontendId": "31",
            "title": "Next Permutation",
            "titleSlug": "next-permutation",
            "acRate": "39.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "32",
            "questionFrontendId": "32",
            "title": "Longest Valid Parentheses",
            "titleSlug": "longest-valid-parentheses",
            "acRate": "33.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "33",
            "questionFrontendId": "33",
            "title": "Search in Rotated Sorted Array",
            "titleSlug": "search-in-rotated-sorted-array",
            "acRate": "40.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "34",
            "questionFrontendId": "34",
            "title": "Find First and Last Position of Element in Sorted Array",
            "titleSlug": "find-first-and-last-position-of-element-in-sorted-array",
            "acRate": "44.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "35",
            "questionFrontendId": "35",
            "title": "Search Insert Position",
            "titleSlug": "search-insert-position",
            "acRate": "45.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "36",
            "questionFrontendId": "36",
            "title": "Valid Sudoku",
            "titleSlug": "valid-sudoku",
            "acRate": "59.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "37",
            "questionFrontendId": "37",
            "title": "Sudoku Solver",
            "titleSlug": "sudoku-solver",
            "acRate": "60.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "38",
            "questionFrontendId": "38",
            "title": "Count and Say",
            "titleSlug": "count-and-say",
            "acRate": "54.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "39",
            "questionFrontendId": "39",
            "title": "Combination Sum",
            "titleSlug": "combination-sum",
            "acRate": "71.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "40",
            "questionFrontendId": "40",
            "title": "Combination Sum II",
            "titleSlug": "combination-sum-ii",
            "acRate": "54.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "41",
            "questionFrontendId": "41",
            "title": "First Missing Positive",
            "titleSlug": "first-missing-positive",
            "acRate": "37.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "42",
            "questionFrontendId": "42",
            "title": "Trapping Rain Water",
            "titleSlug": "trapping-rain-water",
            "acRate": "60.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "43",
            "questionFrontendId": "43",
            "title": "Multiply Strings",
            "titleSlug": "multiply-strings",
            "acRate": "40.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "44",
            "questionFrontendId": "44",
            "title": "Wildcard Matching",
            "titleSlug": "wildcard-matching",
            "acRate": "27.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "45",
            "questionFrontendId": "45",
            "title": "Jump Game II",
            "titleSlug": "jump-game-ii",
            "acRate": "40.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "46",
            "questionFrontendId": "46",
            "title": "Permutations",
            "titleSlug": "permutations",
            "acRate": "78.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "47",
            "questionFrontendId": "47",
            "title": "Permutations II",
            "titleSlug": "permutations-ii",
            "acRate": "58.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "48",
            "questionFrontendId": "48",
            "title": "Rotate Image",
            "titleSlug": "rotate-image",
            "acRate": "73.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "49",
            "questionFrontendId": "49",
            "title": "Group Anagrams",
            "titleSlug": "group-anagrams",
            "acRate": "68.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "50",
            "questionFrontendId": "50",
            "title": "Pow(x, n)",
            "titleSlug": "powx-n",
            "acRate": "34.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "51",
            "questionFrontendId": "51",
            "title": "N-Queens",
            "titleSlug": "n-queens",
            "acRate": "67.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "52",
            "questionFrontendId": "52",
            "title": "N-Queens II",
            "titleSlug": "n-queens-ii",
            "acRate": "73.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "53",
            "questionFrontendId": "53",
            "title": "Maximum Subarray",
            "titleSlug": "maximum-subarray",
            "acRate": "50.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "54",
            "questionFrontendId": "54",
            "title": "Spiral Matrix",
            "titleSlug": "spiral-matrix",
            "acRate": "48.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "55",
            "questionFrontendId": "55",
            "title": "Jump Game",
            "titleSlug": "jump-game",
            "acRate": "38.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "56",
            "questionFrontendId": "56",
            "title": "Merge Intervals",
            "titleSlug": "merge-intervals",
            "acRate": "47.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "57",
            "questionFrontendId": "57",
            "title": "Insert Interval",
            "titleSlug": "insert-interval",
            "acRate": "39.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "58",
            "questionFrontendId": "58",
            "title": "Length of Last Word",
            "titleSlug": "length-of-last-word",
            "acRate": "48.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "60",
            "questionFrontendId": "60",
            "title": "Permutation Sequence",
            "titleSlug": "permutation-sequence",
            "acRate": "46.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "61",
            "questionFrontendId": "61",
            "title": "Rotate List",
            "titleSlug": "rotate-list",
            "acRate": "37.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "62",
            "questionFrontendId": "62",
            "title": "Unique Paths",
            "titleSlug": "unique-paths",
            "acRate": "64.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "63",
            "questionFrontendId": "63",
            "title": "Unique Paths II",
            "titleSlug": "unique-paths-ii",
            "acRate": "41.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "64",
            "questionFrontendId": "64",
            "title": "Minimum Path Sum",
            "titleSlug": "minimum-path-sum",
            "acRate": "63.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "66",
            "questionFrontendId": "66",
            "title": "Plus One",
            "titleSlug": "plus-one",
            "acRate": "44.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "67",
            "questionFrontendId": "67",
            "title": "Add Binary",
            "titleSlug": "add-binary",
            "acRate": "53.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "68",
            "questionFrontendId": "68",
            "title": "Text Justification",
            "titleSlug": "text-justification",
            "acRate": "42.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "69",
            "questionFrontendId": "69",
            "title": "Sqrt(x)",
            "titleSlug": "sqrtx",
            "acRate": "38.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "70",
            "questionFrontendId": "70",
            "title": "Climbing Stairs",
            "titleSlug": "climbing-stairs",
            "acRate": "52.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "71",
            "questionFrontendId": "71",
            "title": "Simplify Path",
            "titleSlug": "simplify-path",
            "acRate": "41.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "72",
            "questionFrontendId": "72",
            "title": "Edit Distance",
            "titleSlug": "edit-distance",
            "acRate": "56.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "73",
            "questionFrontendId": "73",
            "title": "Set Matrix Zeroes",
            "titleSlug": "set-matrix-zeroes",
            "acRate": "55.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "74",
            "questionFrontendId": "74",
            "title": "Search a 2D Matrix",
            "titleSlug": "search-a-2d-matrix",
            "acRate": "49.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "75",
            "questionFrontendId": "75",
            "title": "Sort Colors",
            "titleSlug": "sort-colors",
            "acRate": "61.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "76",
            "questionFrontendId": "76",
            "title": "Minimum Window Substring",
            "titleSlug": "minimum-window-substring",
            "acRate": "42.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "78",
            "questionFrontendId": "78",
            "title": "Subsets",
            "titleSlug": "subsets",
            "acRate": "77.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "79",
            "questionFrontendId": "79",
            "title": "Word Search",
            "titleSlug": "word-search",
            "acRate": "41.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "80",
            "questionFrontendId": "80",
            "title": "Remove Duplicates from Sorted Array II",
            "titleSlug": "remove-duplicates-from-sorted-array-ii",
            "acRate": "57.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "83",
            "questionFrontendId": "83",
            "title": "Remove Duplicates from Sorted List",
            "titleSlug": "remove-duplicates-from-sorted-list",
            "acRate": "52.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "84",
            "questionFrontendId": "84",
            "title": "Largest Rectangle in Histogram",
            "titleSlug": "largest-rectangle-in-histogram",
            "acRate": "44.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "85",
            "questionFrontendId": "85",
            "title": "Maximal Rectangle",
            "titleSlug": "maximal-rectangle",
            "acRate": "46.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "86",
            "questionFrontendId": "86",
            "title": "Partition List",
            "titleSlug": "partition-list",
            "acRate": "55.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "87",
            "questionFrontendId": "87",
            "title": "Scramble String",
            "titleSlug": "scramble-string",
            "acRate": "39.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "88",
            "questionFrontendId": "88",
            "title": "Merge Sorted Array",
            "titleSlug": "merge-sorted-array",
            "acRate": "49.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "89",
            "questionFrontendId": "89",
            "title": "Gray Code",
            "titleSlug": "gray-code",
            "acRate": "58.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "90",
            "questionFrontendId": "90",
            "title": "Subsets II",
            "titleSlug": "subsets-ii",
            "acRate": "57.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "91",
            "questionFrontendId": "91",
            "title": "Decode Ways",
            "titleSlug": "decode-ways",
            "acRate": "34.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "92",
            "questionFrontendId": "92",
            "title": "Reverse Linked List II",
            "titleSlug": "reverse-linked-list-ii",
            "acRate": "47.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "93",
            "questionFrontendId": "93",
            "title": "Restore IP Addresses",
            "titleSlug": "restore-ip-addresses",
            "acRate": "49.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "94",
            "questionFrontendId": "94",
            "title": "Binary Tree Inorder Traversal",
            "titleSlug": "binary-tree-inorder-traversal",
            "acRate": "75.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "95",
            "questionFrontendId": "95",
            "title": "Unique Binary Search Trees II",
            "titleSlug": "unique-binary-search-trees-ii",
            "acRate": "57.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "97",
            "questionFrontendId": "97",
            "title": "Interleaving String",
            "titleSlug": "interleaving-string",
            "acRate": "39.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "98",
            "questionFrontendId": "98",
            "title": "Validate Binary Search Tree",
            "titleSlug": "validate-binary-search-tree",
            "acRate": "32.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "99",
            "questionFrontendId": "99",
            "title": "Recover Binary Search Tree",
            "titleSlug": "recover-binary-search-tree",
            "acRate": "52.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "100",
            "questionFrontendId": "100",
            "title": "Same Tree",
            "titleSlug": "same-tree",
            "acRate": "61.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "101",
            "questionFrontendId": "101",
            "title": "Symmetric Tree",
            "titleSlug": "symmetric-tree",
            "acRate": "56.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "102",
            "questionFrontendId": "102",
            "title": "Binary Tree Level Order Traversal",
            "titleSlug": "binary-tree-level-order-traversal",
            "acRate": "66.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "103",
            "questionFrontendId": "103",
            "title": "Binary Tree Zigzag Level Order Traversal",
            "titleSlug": "binary-tree-zigzag-level-order-traversal",
            "acRate": "58.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "104",
            "questionFrontendId": "104",
            "title": "Maximum Depth of Binary Tree",
            "titleSlug": "maximum-depth-of-binary-tree",
            "acRate": "75.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "105",
            "questionFrontendId": "105",
            "title": "Construct Binary Tree from Preorder and Inorder Traversal",
            "titleSlug": "construct-binary-tree-from-preorder-and-inorder-traversal",
            "acRate": "63.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "109",
            "questionFrontendId": "109",
            "title": "Convert Sorted List to Binary Search Tree",
            "titleSlug": "convert-sorted-list-to-binary-search-tree",
            "acRate": "61.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "110",
            "questionFrontendId": "110",
            "title": "Balanced Binary Tree",
            "titleSlug": "balanced-binary-tree",
            "acRate": "51.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "111",
            "questionFrontendId": "111",
            "title": "Minimum Depth of Binary Tree",
            "titleSlug": "minimum-depth-of-binary-tree",
            "acRate": "47.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "112",
            "questionFrontendId": "112",
            "title": "Path Sum",
            "titleSlug": "path-sum",
            "acRate": "49.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "114",
            "questionFrontendId": "114",
            "title": "Flatten Binary Tree to Linked List",
            "titleSlug": "flatten-binary-tree-to-linked-list",
            "acRate": "64.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "115",
            "questionFrontendId": "115",
            "title": "Distinct Subsequences",
            "titleSlug": "distinct-subsequences",
            "acRate": "46.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "116",
            "questionFrontendId": "116",
            "title": "Populating Next Right Pointers in Each Node",
            "titleSlug": "populating-next-right-pointers-in-each-node",
            "acRate": "62.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "117",
            "questionFrontendId": "117",
            "title": "Populating Next Right Pointers in Each Node II",
            "titleSlug": "populating-next-right-pointers-in-each-node-ii",
            "acRate": "52.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "118",
            "questionFrontendId": "118",
            "title": "Pascal's Triangle",
            "titleSlug": "pascals-triangle",
            "acRate": "73.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "119",
            "questionFrontendId": "119",
            "title": "Pascal's Triangle II",
            "titleSlug": "pascals-triangle-ii",
            "acRate": "63.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "121",
            "questionFrontendId": "121",
            "title": "Best Time to Buy and Sell Stock",
            "titleSlug": "best-time-to-buy-and-sell-stock",
            "acRate": "53.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "122",
            "questionFrontendId": "122",
            "title": "Best Time to Buy and Sell Stock II",
            "titleSlug": "best-time-to-buy-and-sell-stock-ii",
            "acRate": "66.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "123",
            "questionFrontendId": "123",
            "title": "Best Time to Buy and Sell Stock III",
            "titleSlug": "best-time-to-buy-and-sell-stock-iii",
            "acRate": "47.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "124",
            "questionFrontendId": "124",
            "title": "Binary Tree Maximum Path Sum",
            "titleSlug": "binary-tree-maximum-path-sum",
            "acRate": "39.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "125",
            "questionFrontendId": "125",
            "title": "Valid Palindrome",
            "titleSlug": "valid-palindrome",
            "acRate": "46.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "126",
            "questionFrontendId": "126",
            "title": "Word Ladder II",
            "titleSlug": "word-ladder-ii",
            "acRate": "27.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "127",
            "questionFrontendId": "127",
            "title": "Word Ladder",
            "titleSlug": "word-ladder",
            "acRate": "38.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "128",
            "questionFrontendId": "128",
            "title": "Longest Consecutive Sequence",
            "titleSlug": "longest-consecutive-sequence",
            "acRate": "47.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "130",
            "questionFrontendId": "130",
            "title": "Surrounded Regions",
            "titleSlug": "surrounded-regions",
            "acRate": "39.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "131",
            "questionFrontendId": "131",
            "title": "Palindrome Partitioning",
            "titleSlug": "palindrome-partitioning",
            "acRate": "67.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "133",
            "questionFrontendId": "133",
            "title": "Clone Graph",
            "titleSlug": "clone-graph",
            "acRate": "56.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "134",
            "questionFrontendId": "134",
            "title": "Gas Station",
            "titleSlug": "gas-station",
            "acRate": "45.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "135",
            "questionFrontendId": "135",
            "title": "Candy",
            "titleSlug": "candy",
            "acRate": "43.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "136",
            "questionFrontendId": "136",
            "title": "Single Number",
            "titleSlug": "single-number",
            "acRate": "72.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "137",
            "questionFrontendId": "137",
            "title": "Single Number II",
            "titleSlug": "single-number-ii",
            "acRate": "62.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "138",
            "questionFrontendId": "138",
            "title": "Copy List with Random Pointer",
            "titleSlug": "copy-list-with-random-pointer",
            "acRate": "55.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "139",
            "questionFrontendId": "139",
            "title": "Word Break",
            "titleSlug": "word-break",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "140",
            "questionFrontendId": "140",
            "title": "Word Break II",
            "titleSlug": "word-break-ii",
            "acRate": "47.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "141",
            "questionFrontendId": "141",
            "title": "Linked List Cycle",
            "titleSlug": "linked-list-cycle",
            "acRate": "49.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "142",
            "questionFrontendId": "142",
            "title": "Linked List Cycle II",
            "titleSlug": "linked-list-cycle-ii",
            "acRate": "50.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "143",
            "questionFrontendId": "143",
            "title": "Reorder List",
            "titleSlug": "reorder-list",
            "acRate": "56.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "144",
            "questionFrontendId": "144",
            "title": "Binary Tree Preorder Traversal",
            "titleSlug": "binary-tree-preorder-traversal",
            "acRate": "69.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "146",
            "questionFrontendId": "146",
            "title": "LRU Cache",
            "titleSlug": "lru-cache",
            "acRate": "42.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "147",
            "questionFrontendId": "147",
            "title": "Insertion Sort List",
            "titleSlug": "insertion-sort-list",
            "acRate": "53.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "148",
            "questionFrontendId": "148",
            "title": "Sort List",
            "titleSlug": "sort-list",
            "acRate": "57.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "149",
            "questionFrontendId": "149",
            "title": "Max Points on a Line",
            "titleSlug": "max-points-on-a-line",
            "acRate": "26.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "150",
            "questionFrontendId": "150",
            "title": "Evaluate Reverse Polish Notation",
            "titleSlug": "evaluate-reverse-polish-notation",
            "acRate": "50.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "151",
            "questionFrontendId": "151",
            "title": "Reverse Words in a String",
            "titleSlug": "reverse-words-in-a-string",
            "acRate": "40.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "152",
            "questionFrontendId": "152",
            "title": "Maximum Product Subarray",
            "titleSlug": "maximum-product-subarray",
            "acRate": "35.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "153",
            "questionFrontendId": "153",
            "title": "Find Minimum in Rotated Sorted Array",
            "titleSlug": "find-minimum-in-rotated-sorted-array",
            "acRate": "50.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "154",
            "questionFrontendId": "154",
            "title": "Find Minimum in Rotated Sorted Array II",
            "titleSlug": "find-minimum-in-rotated-sorted-array-ii",
            "acRate": "43.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "155",
            "questionFrontendId": "155",
            "title": "Min Stack",
            "titleSlug": "min-stack",
            "acRate": "53.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "157",
            "questionFrontendId": "157",
            "title": "Read N Characters Given Read4",
            "titleSlug": "read-n-characters-given-read4",
            "acRate": "41.4%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "158",
            "questionFrontendId": "158",
            "title": "Read N Characters Given read4 II - Call Multiple Times",
            "titleSlug": "read-n-characters-given-read4-ii-call-multiple-times",
            "acRate": "42.1%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "159",
            "questionFrontendId": "159",
            "title": "Longest Substring with At Most Two Distinct Characters",
            "titleSlug": "longest-substring-with-at-most-two-distinct-characters",
            "acRate": "54.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "162",
            "questionFrontendId": "162",
            "title": "Find Peak Element",
            "titleSlug": "find-peak-element",
            "acRate": "45.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "163",
            "questionFrontendId": "163",
            "title": "Missing Ranges",
            "titleSlug": "missing-ranges",
            "acRate": "33.3%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "164",
            "questionFrontendId": "164",
            "title": "Maximum Gap",
            "titleSlug": "maximum-gap",
            "acRate": "45.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Radix Sort",
                    "slug": "radix-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "166",
            "questionFrontendId": "166",
            "title": "Fraction to Recurring Decimal",
            "titleSlug": "fraction-to-recurring-decimal",
            "acRate": "24.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "167",
            "questionFrontendId": "167",
            "title": "Two Sum II - Input Array Is Sorted",
            "titleSlug": "two-sum-ii-input-array-is-sorted",
            "acRate": "60.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "168",
            "questionFrontendId": "168",
            "title": "Excel Sheet Column Title",
            "titleSlug": "excel-sheet-column-title",
            "acRate": "40.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "169",
            "questionFrontendId": "169",
            "title": "Majority Element",
            "titleSlug": "majority-element",
            "acRate": "64.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "172",
            "questionFrontendId": "172",
            "title": "Factorial Trailing Zeroes",
            "titleSlug": "factorial-trailing-zeroes",
            "acRate": "43.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "173",
            "questionFrontendId": "173",
            "title": "Binary Search Tree Iterator",
            "titleSlug": "binary-search-tree-iterator",
            "acRate": "71.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "174",
            "questionFrontendId": "174",
            "title": "Dungeon Game",
            "titleSlug": "dungeon-game",
            "acRate": "38.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "175",
            "questionFrontendId": "175",
            "title": "Combine Two Tables",
            "titleSlug": "combine-two-tables",
            "acRate": "75.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "176",
            "questionFrontendId": "176",
            "title": "Second Highest Salary",
            "titleSlug": "second-highest-salary",
            "acRate": "39.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "178",
            "questionFrontendId": "178",
            "title": "Rank Scores",
            "titleSlug": "rank-scores",
            "acRate": "61.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "179",
            "questionFrontendId": "179",
            "title": "Largest Number",
            "titleSlug": "largest-number",
            "acRate": "35.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "181",
            "questionFrontendId": "181",
            "title": "Employees Earning More Than Their Managers",
            "titleSlug": "employees-earning-more-than-their-managers",
            "acRate": "69.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "184",
            "questionFrontendId": "184",
            "title": "Department Highest Salary",
            "titleSlug": "department-highest-salary",
            "acRate": "51.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "185",
            "questionFrontendId": "185",
            "title": "Department Top Three Salaries",
            "titleSlug": "department-top-three-salaries",
            "acRate": "52.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "187",
            "questionFrontendId": "187",
            "title": "Repeated DNA Sequences",
            "titleSlug": "repeated-dna-sequences",
            "acRate": "48.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "188",
            "questionFrontendId": "188",
            "title": "Best Time to Buy and Sell Stock IV",
            "titleSlug": "best-time-to-buy-and-sell-stock-iv",
            "acRate": "42.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "189",
            "questionFrontendId": "189",
            "title": "Rotate Array",
            "titleSlug": "rotate-array",
            "acRate": "40.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "190",
            "questionFrontendId": "190",
            "title": "Reverse Bits",
            "titleSlug": "reverse-bits",
            "acRate": "57.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "191",
            "questionFrontendId": "191",
            "title": "Number of 1 Bits",
            "titleSlug": "number-of-1-bits",
            "acRate": "70.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "193",
            "questionFrontendId": "193",
            "title": "Valid Phone Numbers",
            "titleSlug": "valid-phone-numbers",
            "acRate": "25.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Shell",
                    "slug": "shell"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "197",
            "questionFrontendId": "197",
            "title": "Rising Temperature",
            "titleSlug": "rising-temperature",
            "acRate": "46.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "198",
            "questionFrontendId": "198",
            "title": "House Robber",
            "titleSlug": "house-robber",
            "acRate": "50.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "199",
            "questionFrontendId": "199",
            "title": "Binary Tree Right Side View",
            "titleSlug": "binary-tree-right-side-view",
            "acRate": "62.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "200",
            "questionFrontendId": "200",
            "title": "Number of Islands",
            "titleSlug": "number-of-islands",
            "acRate": "58.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "201",
            "questionFrontendId": "201",
            "title": "Bitwise AND of Numbers Range",
            "titleSlug": "bitwise-and-of-numbers-range",
            "acRate": "46.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "202",
            "questionFrontendId": "202",
            "title": "Happy Number",
            "titleSlug": "happy-number",
            "acRate": "55.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "203",
            "questionFrontendId": "203",
            "title": "Remove Linked List Elements",
            "titleSlug": "remove-linked-list-elements",
            "acRate": "48.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "205",
            "questionFrontendId": "205",
            "title": "Isomorphic Strings",
            "titleSlug": "isomorphic-strings",
            "acRate": "43.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "206",
            "questionFrontendId": "206",
            "title": "Reverse Linked List",
            "titleSlug": "reverse-linked-list",
            "acRate": "75.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "207",
            "questionFrontendId": "207",
            "title": "Course Schedule",
            "titleSlug": "course-schedule",
            "acRate": "46.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "208",
            "questionFrontendId": "208",
            "title": "Implement Trie (Prefix Tree)",
            "titleSlug": "implement-trie-prefix-tree",
            "acRate": "64.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "209",
            "questionFrontendId": "209",
            "title": "Minimum Size Subarray Sum",
            "titleSlug": "minimum-size-subarray-sum",
            "acRate": "46.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "210",
            "questionFrontendId": "210",
            "title": "Course Schedule II",
            "titleSlug": "course-schedule-ii",
            "acRate": "50.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "211",
            "questionFrontendId": "211",
            "title": "Design Add and Search Words Data Structure",
            "titleSlug": "design-add-and-search-words-data-structure",
            "acRate": "44.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "212",
            "questionFrontendId": "212",
            "title": "Word Search II",
            "titleSlug": "word-search-ii",
            "acRate": "36.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "213",
            "questionFrontendId": "213",
            "title": "House Robber II",
            "titleSlug": "house-robber-ii",
            "acRate": "41.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "214",
            "questionFrontendId": "214",
            "title": "Shortest Palindrome",
            "titleSlug": "shortest-palindrome",
            "acRate": "33.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "215",
            "questionFrontendId": "215",
            "title": "Kth Largest Element in an Array",
            "titleSlug": "kth-largest-element-in-an-array",
            "acRate": "66.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "216",
            "questionFrontendId": "216",
            "title": "Combination Sum III",
            "titleSlug": "combination-sum-iii",
            "acRate": "69.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "217",
            "questionFrontendId": "217",
            "title": "Contains Duplicate",
            "titleSlug": "contains-duplicate",
            "acRate": "61.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "218",
            "questionFrontendId": "218",
            "title": "The Skyline Problem",
            "titleSlug": "the-skyline-problem",
            "acRate": "42.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Line Sweep",
                    "slug": "line-sweep"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "219",
            "questionFrontendId": "219",
            "title": "Contains Duplicate II",
            "titleSlug": "contains-duplicate-ii",
            "acRate": "44.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "220",
            "questionFrontendId": "220",
            "title": "Contains Duplicate III",
            "titleSlug": "contains-duplicate-iii",
            "acRate": "22.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "221",
            "questionFrontendId": "221",
            "title": "Maximal Square",
            "titleSlug": "maximal-square",
            "acRate": "46.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "222",
            "questionFrontendId": "222",
            "title": "Count Complete Tree Nodes",
            "titleSlug": "count-complete-tree-nodes",
            "acRate": "64.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "224",
            "questionFrontendId": "224",
            "title": "Basic Calculator",
            "titleSlug": "basic-calculator",
            "acRate": "43.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "225",
            "questionFrontendId": "225",
            "title": "Implement Stack using Queues",
            "titleSlug": "implement-stack-using-queues",
            "acRate": "63.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "226",
            "questionFrontendId": "226",
            "title": "Invert Binary Tree",
            "titleSlug": "invert-binary-tree",
            "acRate": "76.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "227",
            "questionFrontendId": "227",
            "title": "Basic Calculator II",
            "titleSlug": "basic-calculator-ii",
            "acRate": "43.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "228",
            "questionFrontendId": "228",
            "title": "Summary Ranges",
            "titleSlug": "summary-ranges",
            "acRate": "50.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "229",
            "questionFrontendId": "229",
            "title": "Majority Element II",
            "titleSlug": "majority-element-ii",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "230",
            "questionFrontendId": "230",
            "title": "Kth Smallest Element in a BST",
            "titleSlug": "kth-smallest-element-in-a-bst",
            "acRate": "72.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "231",
            "questionFrontendId": "231",
            "title": "Power of Two",
            "titleSlug": "power-of-two",
            "acRate": "47.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "234",
            "questionFrontendId": "234",
            "title": "Palindrome Linked List",
            "titleSlug": "palindrome-linked-list",
            "acRate": "51.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "235",
            "questionFrontendId": "235",
            "title": "Lowest Common Ancestor of a Binary Search Tree",
            "titleSlug": "lowest-common-ancestor-of-a-binary-search-tree",
            "acRate": "64.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "236",
            "questionFrontendId": "236",
            "title": "Lowest Common Ancestor of a Binary Tree",
            "titleSlug": "lowest-common-ancestor-of-a-binary-tree",
            "acRate": "61.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "237",
            "questionFrontendId": "237",
            "title": "Delete Node in a Linked List",
            "titleSlug": "delete-node-in-a-linked-list",
            "acRate": "78.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "238",
            "questionFrontendId": "238",
            "title": "Product of Array Except Self",
            "titleSlug": "product-of-array-except-self",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "239",
            "questionFrontendId": "239",
            "title": "Sliding Window Maximum",
            "titleSlug": "sliding-window-maximum",
            "acRate": "46.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "240",
            "questionFrontendId": "240",
            "title": "Search a 2D Matrix II",
            "titleSlug": "search-a-2d-matrix-ii",
            "acRate": "52.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "241",
            "questionFrontendId": "241",
            "title": "Different Ways to Add Parentheses",
            "titleSlug": "different-ways-to-add-parentheses",
            "acRate": "65.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "242",
            "questionFrontendId": "242",
            "title": "Valid Anagram",
            "titleSlug": "valid-anagram",
            "acRate": "64.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "244",
            "questionFrontendId": "244",
            "title": "Shortest Word Distance II",
            "titleSlug": "shortest-word-distance-ii",
            "acRate": "61.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "246",
            "questionFrontendId": "246",
            "title": "Strobogrammatic Number",
            "titleSlug": "strobogrammatic-number",
            "acRate": "47.7%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "247",
            "questionFrontendId": "247",
            "title": "Strobogrammatic Number II",
            "titleSlug": "strobogrammatic-number-ii",
            "acRate": "52.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "249",
            "questionFrontendId": "249",
            "title": "Group Shifted Strings",
            "titleSlug": "group-shifted-strings",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "250",
            "questionFrontendId": "250",
            "title": "Count Univalue Subtrees",
            "titleSlug": "count-univalue-subtrees",
            "acRate": "56.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "251",
            "questionFrontendId": "251",
            "title": "Flatten 2D Vector",
            "titleSlug": "flatten-2d-vector",
            "acRate": "49.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "252",
            "questionFrontendId": "252",
            "title": "Meeting Rooms",
            "titleSlug": "meeting-rooms",
            "acRate": "57.9%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "253",
            "questionFrontendId": "253",
            "title": "Meeting Rooms II",
            "titleSlug": "meeting-rooms-ii",
            "acRate": "51.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "257",
            "questionFrontendId": "257",
            "title": "Binary Tree Paths",
            "titleSlug": "binary-tree-paths",
            "acRate": "63.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "258",
            "questionFrontendId": "258",
            "title": "Add Digits",
            "titleSlug": "add-digits",
            "acRate": "66.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "259",
            "questionFrontendId": "259",
            "title": "3Sum Smaller",
            "titleSlug": "3sum-smaller",
            "acRate": "50.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "261",
            "questionFrontendId": "261",
            "title": "Graph Valid Tree",
            "titleSlug": "graph-valid-tree",
            "acRate": "47.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "264",
            "questionFrontendId": "264",
            "title": "Ugly Number II",
            "titleSlug": "ugly-number-ii",
            "acRate": "46.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "266",
            "questionFrontendId": "266",
            "title": "Palindrome Permutation",
            "titleSlug": "palindrome-permutation",
            "acRate": "67.0%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "267",
            "questionFrontendId": "267",
            "title": "Palindrome Permutation II",
            "titleSlug": "palindrome-permutation-ii",
            "acRate": "41.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "268",
            "questionFrontendId": "268",
            "title": "Missing Number",
            "titleSlug": "missing-number",
            "acRate": "66.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "269",
            "questionFrontendId": "269",
            "title": "Alien Dictionary",
            "titleSlug": "alien-dictionary",
            "acRate": "35.7%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "270",
            "questionFrontendId": "270",
            "title": "Closest Binary Search Tree Value",
            "titleSlug": "closest-binary-search-tree-value",
            "acRate": "52.1%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "271",
            "questionFrontendId": "271",
            "title": "Encode and Decode Strings",
            "titleSlug": "encode-and-decode-strings",
            "acRate": "45.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "272",
            "questionFrontendId": "272",
            "title": "Closest Binary Search Tree Value II",
            "titleSlug": "closest-binary-search-tree-value-ii",
            "acRate": "58.9%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "273",
            "questionFrontendId": "273",
            "title": "Integer to English Words",
            "titleSlug": "integer-to-english-words",
            "acRate": "30.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "274",
            "questionFrontendId": "274",
            "title": "H-Index",
            "titleSlug": "h-index",
            "acRate": "38.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting Sort",
                    "slug": "counting-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "276",
            "questionFrontendId": "276",
            "title": "Paint Fence",
            "titleSlug": "paint-fence",
            "acRate": "46.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "277",
            "questionFrontendId": "277",
            "title": "Find the Celebrity",
            "titleSlug": "find-the-celebrity",
            "acRate": "47.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "278",
            "questionFrontendId": "278",
            "title": "First Bad Version",
            "titleSlug": "first-bad-version",
            "acRate": "44.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "279",
            "questionFrontendId": "279",
            "title": "Perfect Squares",
            "titleSlug": "perfect-squares",
            "acRate": "54.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "280",
            "questionFrontendId": "280",
            "title": "Wiggle Sort",
            "titleSlug": "wiggle-sort",
            "acRate": "67.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "281",
            "questionFrontendId": "281",
            "title": "Zigzag Iterator",
            "titleSlug": "zigzag-iterator",
            "acRate": "63.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "282",
            "questionFrontendId": "282",
            "title": "Expression Add Operators",
            "titleSlug": "expression-add-operators",
            "acRate": "39.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "283",
            "questionFrontendId": "283",
            "title": "Move Zeroes",
            "titleSlug": "move-zeroes",
            "acRate": "61.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "284",
            "questionFrontendId": "284",
            "title": "Peeking Iterator",
            "titleSlug": "peeking-iterator",
            "acRate": "59.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "285",
            "questionFrontendId": "285",
            "title": "Inorder Successor in BST",
            "titleSlug": "inorder-successor-in-bst",
            "acRate": "49.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "286",
            "questionFrontendId": "286",
            "title": "Walls and Gates",
            "titleSlug": "walls-and-gates",
            "acRate": "61.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "287",
            "questionFrontendId": "287",
            "title": "Find the Duplicate Number",
            "titleSlug": "find-the-duplicate-number",
            "acRate": "59.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "288",
            "questionFrontendId": "288",
            "title": "Unique Word Abbreviation",
            "titleSlug": "unique-word-abbreviation",
            "acRate": "26.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "289",
            "questionFrontendId": "289",
            "title": "Game of Life",
            "titleSlug": "game-of-life",
            "acRate": "68.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "292",
            "questionFrontendId": "292",
            "title": "Nim Game",
            "titleSlug": "nim-game",
            "acRate": "56.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Brainteaser",
                    "slug": "brainteaser"
                },
                {
                    "name": "Game Theory",
                    "slug": "game-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "293",
            "questionFrontendId": "293",
            "title": "Flip Game",
            "titleSlug": "flip-game",
            "acRate": "64.5%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "294",
            "questionFrontendId": "294",
            "title": "Flip Game II",
            "titleSlug": "flip-game-ii",
            "acRate": "52.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Game Theory",
                    "slug": "game-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "295",
            "questionFrontendId": "295",
            "title": "Find Median from Data Stream",
            "titleSlug": "find-median-from-data-stream",
            "acRate": "51.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "296",
            "questionFrontendId": "296",
            "title": "Best Meeting Point",
            "titleSlug": "best-meeting-point",
            "acRate": "60.8%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "297",
            "questionFrontendId": "297",
            "title": "Serialize and Deserialize Binary Tree",
            "titleSlug": "serialize-and-deserialize-binary-tree",
            "acRate": "56.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "298",
            "questionFrontendId": "298",
            "title": "Binary Tree Longest Consecutive Sequence",
            "titleSlug": "binary-tree-longest-consecutive-sequence",
            "acRate": "53.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "299",
            "questionFrontendId": "299",
            "title": "Bulls and Cows",
            "titleSlug": "bulls-and-cows",
            "acRate": "50.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "300",
            "questionFrontendId": "300",
            "title": "Longest Increasing Subsequence",
            "titleSlug": "longest-increasing-subsequence",
            "acRate": "55.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "301",
            "questionFrontendId": "301",
            "title": "Remove Invalid Parentheses",
            "titleSlug": "remove-invalid-parentheses",
            "acRate": "48.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "302",
            "questionFrontendId": "302",
            "title": "Smallest Rectangle Enclosing Black Pixels",
            "titleSlug": "smallest-rectangle-enclosing-black-pixels",
            "acRate": "58.8%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "304",
            "questionFrontendId": "304",
            "title": "Range Sum Query 2D - Immutable",
            "titleSlug": "range-sum-query-2d-immutable",
            "acRate": "54.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "305",
            "questionFrontendId": "305",
            "title": "Number of Islands II",
            "titleSlug": "number-of-islands-ii",
            "acRate": "39.6%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "306",
            "questionFrontendId": "306",
            "title": "Additive Number",
            "titleSlug": "additive-number",
            "acRate": "31.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "307",
            "questionFrontendId": "307",
            "title": "Range Sum Query - Mutable",
            "titleSlug": "range-sum-query-mutable",
            "acRate": "40.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "308",
            "questionFrontendId": "308",
            "title": "Range Sum Query 2D - Mutable",
            "titleSlug": "range-sum-query-2d-mutable",
            "acRate": "44.0%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "309",
            "questionFrontendId": "309",
            "title": "Best Time to Buy and Sell Stock with Cooldown",
            "titleSlug": "best-time-to-buy-and-sell-stock-with-cooldown",
            "acRate": "57.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "310",
            "questionFrontendId": "310",
            "title": "Minimum Height Trees",
            "titleSlug": "minimum-height-trees",
            "acRate": "38.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "312",
            "questionFrontendId": "312",
            "title": "Burst Balloons",
            "titleSlug": "burst-balloons",
            "acRate": "58.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "313",
            "questionFrontendId": "313",
            "title": "Super Ugly Number",
            "titleSlug": "super-ugly-number",
            "acRate": "45.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "314",
            "questionFrontendId": "314",
            "title": "Binary Tree Vertical Order Traversal",
            "titleSlug": "binary-tree-vertical-order-traversal",
            "acRate": "53.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "315",
            "questionFrontendId": "315",
            "title": "Count of Smaller Numbers After Self",
            "titleSlug": "count-of-smaller-numbers-after-self",
            "acRate": "42.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "316",
            "questionFrontendId": "316",
            "title": "Remove Duplicate Letters",
            "titleSlug": "remove-duplicate-letters",
            "acRate": "49.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "317",
            "questionFrontendId": "317",
            "title": "Shortest Distance from All Buildings",
            "titleSlug": "shortest-distance-from-all-buildings",
            "acRate": "43.0%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "318",
            "questionFrontendId": "318",
            "title": "Maximum Product of Word Lengths",
            "titleSlug": "maximum-product-of-word-lengths",
            "acRate": "59.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "320",
            "questionFrontendId": "320",
            "title": "Generalized Abbreviation",
            "titleSlug": "generalized-abbreviation",
            "acRate": "58.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "321",
            "questionFrontendId": "321",
            "title": "Create Maximum Number",
            "titleSlug": "create-maximum-number",
            "acRate": "29.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "322",
            "questionFrontendId": "322",
            "title": "Coin Change",
            "titleSlug": "coin-change",
            "acRate": "43.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "323",
            "questionFrontendId": "323",
            "title": "Number of Connected Components in an Undirected Graph",
            "titleSlug": "number-of-connected-components-in-an-undirected-graph",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "324",
            "questionFrontendId": "324",
            "title": "Wiggle Sort II",
            "titleSlug": "wiggle-sort-ii",
            "acRate": "34.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "326",
            "questionFrontendId": "326",
            "title": "Power of Three",
            "titleSlug": "power-of-three",
            "acRate": "46.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "327",
            "questionFrontendId": "327",
            "title": "Count of Range Sum",
            "titleSlug": "count-of-range-sum",
            "acRate": "35.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "328",
            "questionFrontendId": "328",
            "title": "Odd Even Linked List",
            "titleSlug": "odd-even-linked-list",
            "acRate": "61.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "329",
            "questionFrontendId": "329",
            "title": "Longest Increasing Path in a Matrix",
            "titleSlug": "longest-increasing-path-in-a-matrix",
            "acRate": "53.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "330",
            "questionFrontendId": "330",
            "title": "Patching Array",
            "titleSlug": "patching-array",
            "acRate": "41.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "331",
            "questionFrontendId": "331",
            "title": "Verify Preorder Serialization of a Binary Tree",
            "titleSlug": "verify-preorder-serialization-of-a-binary-tree",
            "acRate": "45.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "332",
            "questionFrontendId": "332",
            "title": "Reconstruct Itinerary",
            "titleSlug": "reconstruct-itinerary",
            "acRate": "43.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Eulerian Circuit",
                    "slug": "eulerian-circuit"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "334",
            "questionFrontendId": "334",
            "title": "Increasing Triplet Subsequence",
            "titleSlug": "increasing-triplet-subsequence",
            "acRate": "40.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "336",
            "questionFrontendId": "336",
            "title": "Palindrome Pairs",
            "titleSlug": "palindrome-pairs",
            "acRate": "35.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "337",
            "questionFrontendId": "337",
            "title": "House Robber III",
            "titleSlug": "house-robber-iii",
            "acRate": "54.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "338",
            "questionFrontendId": "338",
            "title": "Counting Bits",
            "titleSlug": "counting-bits",
            "acRate": "78.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "340",
            "questionFrontendId": "340",
            "title": "Longest Substring with At Most K Distinct Characters",
            "titleSlug": "longest-substring-with-at-most-k-distinct-characters",
            "acRate": "48.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "341",
            "questionFrontendId": "341",
            "title": "Flatten Nested List Iterator",
            "titleSlug": "flatten-nested-list-iterator",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "343",
            "questionFrontendId": "343",
            "title": "Integer Break",
            "titleSlug": "integer-break",
            "acRate": "60.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "344",
            "questionFrontendId": "344",
            "title": "Reverse String",
            "titleSlug": "reverse-string",
            "acRate": "77.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "345",
            "questionFrontendId": "345",
            "title": "Reverse Vowels of a String",
            "titleSlug": "reverse-vowels-of-a-string",
            "acRate": "52.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "346",
            "questionFrontendId": "346",
            "title": "Moving Average from Data Stream",
            "titleSlug": "moving-average-from-data-stream",
            "acRate": "78.0%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "347",
            "questionFrontendId": "347",
            "title": "Top K Frequent Elements",
            "titleSlug": "top-k-frequent-elements",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "348",
            "questionFrontendId": "348",
            "title": "Design Tic-Tac-Toe",
            "titleSlug": "design-tic-tac-toe",
            "acRate": "57.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "349",
            "questionFrontendId": "349",
            "title": "Intersection of Two Arrays",
            "titleSlug": "intersection-of-two-arrays",
            "acRate": "72.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "351",
            "questionFrontendId": "351",
            "title": "Android Unlock Patterns",
            "titleSlug": "android-unlock-patterns",
            "acRate": "51.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "353",
            "questionFrontendId": "353",
            "title": "Design Snake Game",
            "titleSlug": "design-snake-game",
            "acRate": "38.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "354",
            "questionFrontendId": "354",
            "title": "Russian Doll Envelopes",
            "titleSlug": "russian-doll-envelopes",
            "acRate": "37.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "355",
            "questionFrontendId": "355",
            "title": "Design Twitter",
            "titleSlug": "design-twitter",
            "acRate": "39.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "356",
            "questionFrontendId": "356",
            "title": "Line Reflection",
            "titleSlug": "line-reflection",
            "acRate": "35.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "357",
            "questionFrontendId": "357",
            "title": "Count Numbers with Unique Digits",
            "titleSlug": "count-numbers-with-unique-digits",
            "acRate": "52.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "358",
            "questionFrontendId": "358",
            "title": "Rearrange String k Distance Apart",
            "titleSlug": "rearrange-string-k-distance-apart",
            "acRate": "38.6%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "359",
            "questionFrontendId": "359",
            "title": "Logger Rate Limiter",
            "titleSlug": "logger-rate-limiter",
            "acRate": "75.8%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "360",
            "questionFrontendId": "360",
            "title": "Sort Transformed Array",
            "titleSlug": "sort-transformed-array",
            "acRate": "55.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "361",
            "questionFrontendId": "361",
            "title": "Bomb Enemy",
            "titleSlug": "bomb-enemy",
            "acRate": "51.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "362",
            "questionFrontendId": "362",
            "title": "Design Hit Counter",
            "titleSlug": "design-hit-counter",
            "acRate": "68.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "363",
            "questionFrontendId": "363",
            "title": "Max Sum of Rectangle No Larger Than K",
            "titleSlug": "max-sum-of-rectangle-no-larger-than-k",
            "acRate": "44.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "365",
            "questionFrontendId": "365",
            "title": "Water and Jug Problem",
            "titleSlug": "water-and-jug-problem",
            "acRate": "39.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "366",
            "questionFrontendId": "366",
            "title": "Find Leaves of Binary Tree",
            "titleSlug": "find-leaves-of-binary-tree",
            "acRate": "80.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "368",
            "questionFrontendId": "368",
            "title": "Largest Divisible Subset",
            "titleSlug": "largest-divisible-subset",
            "acRate": "45.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "369",
            "questionFrontendId": "369",
            "title": "Plus One Linked List",
            "titleSlug": "plus-one-linked-list",
            "acRate": "61.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "370",
            "questionFrontendId": "370",
            "title": "Range Addition",
            "titleSlug": "range-addition",
            "acRate": "71.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "373",
            "questionFrontendId": "373",
            "title": "Find K Pairs with Smallest Sums",
            "titleSlug": "find-k-pairs-with-smallest-sums",
            "acRate": "40.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "374",
            "questionFrontendId": "374",
            "title": "Guess Number Higher or Lower",
            "titleSlug": "guess-number-higher-or-lower",
            "acRate": "53.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "375",
            "questionFrontendId": "375",
            "title": "Guess Number Higher or Lower II",
            "titleSlug": "guess-number-higher-or-lower-ii",
            "acRate": "48.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Game Theory",
                    "slug": "game-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "377",
            "questionFrontendId": "377",
            "title": "Combination Sum IV",
            "titleSlug": "combination-sum-iv",
            "acRate": "54.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "378",
            "questionFrontendId": "378",
            "title": "Kth Smallest Element in a Sorted Matrix",
            "titleSlug": "kth-smallest-element-in-a-sorted-matrix",
            "acRate": "62.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "379",
            "questionFrontendId": "379",
            "title": "Design Phone Directory",
            "titleSlug": "design-phone-directory",
            "acRate": "51.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "380",
            "questionFrontendId": "380",
            "title": "Insert Delete GetRandom O(1)",
            "titleSlug": "insert-delete-getrandom-o1",
            "acRate": "54.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "381",
            "questionFrontendId": "381",
            "title": "Insert Delete GetRandom O(1) - Duplicates allowed",
            "titleSlug": "insert-delete-getrandom-o1-duplicates-allowed",
            "acRate": "35.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "382",
            "questionFrontendId": "382",
            "title": "Linked List Random Node",
            "titleSlug": "linked-list-random-node",
            "acRate": "63.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Reservoir Sampling",
                    "slug": "reservoir-sampling"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "383",
            "questionFrontendId": "383",
            "title": "Ransom Note",
            "titleSlug": "ransom-note",
            "acRate": "60.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "384",
            "questionFrontendId": "384",
            "title": "Shuffle an Array",
            "titleSlug": "shuffle-an-array",
            "acRate": "58.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "387",
            "questionFrontendId": "387",
            "title": "First Unique Character in a String",
            "titleSlug": "first-unique-character-in-a-string",
            "acRate": "62.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "388",
            "questionFrontendId": "388",
            "title": "Longest Absolute File Path",
            "titleSlug": "longest-absolute-file-path",
            "acRate": "47.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "389",
            "questionFrontendId": "389",
            "title": "Find the Difference",
            "titleSlug": "find-the-difference",
            "acRate": "59.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "391",
            "questionFrontendId": "391",
            "title": "Perfect Rectangle",
            "titleSlug": "perfect-rectangle",
            "acRate": "33.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Line Sweep",
                    "slug": "line-sweep"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "392",
            "questionFrontendId": "392",
            "title": "Is Subsequence",
            "titleSlug": "is-subsequence",
            "acRate": "47.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "393",
            "questionFrontendId": "393",
            "title": "UTF-8 Validation",
            "titleSlug": "utf-8-validation",
            "acRate": "45.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "394",
            "questionFrontendId": "394",
            "title": "Decode String",
            "titleSlug": "decode-string",
            "acRate": "59.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "395",
            "questionFrontendId": "395",
            "title": "Longest Substring with At Least K Repeating Characters",
            "titleSlug": "longest-substring-with-at-least-k-repeating-characters",
            "acRate": "44.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "397",
            "questionFrontendId": "397",
            "title": "Integer Replacement",
            "titleSlug": "integer-replacement",
            "acRate": "35.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "398",
            "questionFrontendId": "398",
            "title": "Random Pick Index",
            "titleSlug": "random-pick-index",
            "acRate": "63.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Reservoir Sampling",
                    "slug": "reservoir-sampling"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "399",
            "questionFrontendId": "399",
            "title": "Evaluate Division",
            "titleSlug": "evaluate-division",
            "acRate": "61.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "400",
            "questionFrontendId": "400",
            "title": "Nth Digit",
            "titleSlug": "nth-digit",
            "acRate": "34.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "401",
            "questionFrontendId": "401",
            "title": "Binary Watch",
            "titleSlug": "binary-watch",
            "acRate": "53.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "402",
            "questionFrontendId": "402",
            "title": "Remove K Digits",
            "titleSlug": "remove-k-digits",
            "acRate": "31.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "403",
            "questionFrontendId": "403",
            "title": "Frog Jump",
            "titleSlug": "frog-jump",
            "acRate": "46.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "404",
            "questionFrontendId": "404",
            "title": "Sum of Left Leaves",
            "titleSlug": "sum-of-left-leaves",
            "acRate": "57.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "405",
            "questionFrontendId": "405",
            "title": "Convert a Number to Hexadecimal",
            "titleSlug": "convert-a-number-to-hexadecimal",
            "acRate": "48.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "406",
            "questionFrontendId": "406",
            "title": "Queue Reconstruction by Height",
            "titleSlug": "queue-reconstruction-by-height",
            "acRate": "73.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "407",
            "questionFrontendId": "407",
            "title": "Trapping Rain Water II",
            "titleSlug": "trapping-rain-water-ii",
            "acRate": "47.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "408",
            "questionFrontendId": "408",
            "title": "Valid Word Abbreviation",
            "titleSlug": "valid-word-abbreviation",
            "acRate": "35.5%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "409",
            "questionFrontendId": "409",
            "title": "Longest Palindrome",
            "titleSlug": "longest-palindrome",
            "acRate": "53.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "410",
            "questionFrontendId": "410",
            "title": "Split Array Largest Sum",
            "titleSlug": "split-array-largest-sum",
            "acRate": "55.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "411",
            "questionFrontendId": "411",
            "title": "Minimum Unique Word Abbreviation",
            "titleSlug": "minimum-unique-word-abbreviation",
            "acRate": "39.7%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "412",
            "questionFrontendId": "412",
            "title": "Fizz Buzz",
            "titleSlug": "fizz-buzz",
            "acRate": "71.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "413",
            "questionFrontendId": "413",
            "title": "Arithmetic Slices",
            "titleSlug": "arithmetic-slices",
            "acRate": "65.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "415",
            "questionFrontendId": "415",
            "title": "Add Strings",
            "titleSlug": "add-strings",
            "acRate": "51.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "416",
            "questionFrontendId": "416",
            "title": "Partition Equal Subset Sum",
            "titleSlug": "partition-equal-subset-sum",
            "acRate": "46.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "417",
            "questionFrontendId": "417",
            "title": "Pacific Atlantic Water Flow",
            "titleSlug": "pacific-atlantic-water-flow",
            "acRate": "55.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "418",
            "questionFrontendId": "418",
            "title": "Sentence Screen Fitting",
            "titleSlug": "sentence-screen-fitting",
            "acRate": "36.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "419",
            "questionFrontendId": "419",
            "title": "Battleships in a Board",
            "titleSlug": "battleships-in-a-board",
            "acRate": "75.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "420",
            "questionFrontendId": "420",
            "title": "Strong Password Checker",
            "titleSlug": "strong-password-checker",
            "acRate": "13.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "421",
            "questionFrontendId": "421",
            "title": "Maximum XOR of Two Numbers in an Array",
            "titleSlug": "maximum-xor-of-two-numbers-in-an-array",
            "acRate": "53.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "422",
            "questionFrontendId": "422",
            "title": "Valid Word Square",
            "titleSlug": "valid-word-square",
            "acRate": "40.8%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "424",
            "questionFrontendId": "424",
            "title": "Longest Repeating Character Replacement",
            "titleSlug": "longest-repeating-character-replacement",
            "acRate": "53.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "425",
            "questionFrontendId": "425",
            "title": "Word Squares",
            "titleSlug": "word-squares",
            "acRate": "53.3%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "432",
            "questionFrontendId": "432",
            "title": "All O`one Data Structure",
            "titleSlug": "all-oone-data-structure",
            "acRate": "36.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "435",
            "questionFrontendId": "435",
            "title": "Non-overlapping Intervals",
            "titleSlug": "non-overlapping-intervals",
            "acRate": "52.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "437",
            "questionFrontendId": "437",
            "title": "Path Sum III",
            "titleSlug": "path-sum-iii",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "438",
            "questionFrontendId": "438",
            "title": "Find All Anagrams in a String",
            "titleSlug": "find-all-anagrams-in-a-string",
            "acRate": "50.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "441",
            "questionFrontendId": "441",
            "title": "Arranging Coins",
            "titleSlug": "arranging-coins",
            "acRate": "46.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "442",
            "questionFrontendId": "442",
            "title": "Find All Duplicates in an Array",
            "titleSlug": "find-all-duplicates-in-an-array",
            "acRate": "73.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "443",
            "questionFrontendId": "443",
            "title": "String Compression",
            "titleSlug": "string-compression",
            "acRate": "54.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "444",
            "questionFrontendId": "444",
            "title": "Sequence Reconstruction",
            "titleSlug": "sequence-reconstruction",
            "acRate": "28.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "446",
            "questionFrontendId": "446",
            "title": "Arithmetic Slices II - Subsequence",
            "titleSlug": "arithmetic-slices-ii-subsequence",
            "acRate": "54.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "447",
            "questionFrontendId": "447",
            "title": "Number of Boomerangs",
            "titleSlug": "number-of-boomerangs",
            "acRate": "55.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "448",
            "questionFrontendId": "448",
            "title": "Find All Numbers Disappeared in an Array",
            "titleSlug": "find-all-numbers-disappeared-in-an-array",
            "acRate": "60.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "450",
            "questionFrontendId": "450",
            "title": "Delete Node in a BST",
            "titleSlug": "delete-node-in-a-bst",
            "acRate": "51.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "451",
            "questionFrontendId": "451",
            "title": "Sort Characters By Frequency",
            "titleSlug": "sort-characters-by-frequency",
            "acRate": "72.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "454",
            "questionFrontendId": "454",
            "title": "4Sum II",
            "titleSlug": "4sum-ii",
            "acRate": "57.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "455",
            "questionFrontendId": "455",
            "title": "Assign Cookies",
            "titleSlug": "assign-cookies",
            "acRate": "52.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "458",
            "questionFrontendId": "458",
            "title": "Poor Pigs",
            "titleSlug": "poor-pigs",
            "acRate": "59.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "459",
            "questionFrontendId": "459",
            "title": "Repeated Substring Pattern",
            "titleSlug": "repeated-substring-pattern",
            "acRate": "46.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "460",
            "questionFrontendId": "460",
            "title": "LFU Cache",
            "titleSlug": "lfu-cache",
            "acRate": "43.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "463",
            "questionFrontendId": "463",
            "title": "Island Perimeter",
            "titleSlug": "island-perimeter",
            "acRate": "70.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "465",
            "questionFrontendId": "465",
            "title": "Optimal Account Balancing",
            "titleSlug": "optimal-account-balancing",
            "acRate": "49.5%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "469",
            "questionFrontendId": "469",
            "title": "Convex Polygon",
            "titleSlug": "convex-polygon",
            "acRate": "39.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "471",
            "questionFrontendId": "471",
            "title": "Encode String with Shortest Length",
            "titleSlug": "encode-string-with-shortest-length",
            "acRate": "50.5%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "473",
            "questionFrontendId": "473",
            "title": "Matchsticks to Square",
            "titleSlug": "matchsticks-to-square",
            "acRate": "40.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "474",
            "questionFrontendId": "474",
            "title": "Ones and Zeroes",
            "titleSlug": "ones-and-zeroes",
            "acRate": "47.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "475",
            "questionFrontendId": "475",
            "title": "Heaters",
            "titleSlug": "heaters",
            "acRate": "37.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "476",
            "questionFrontendId": "476",
            "title": "Number Complement",
            "titleSlug": "number-complement",
            "acRate": "67.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "480",
            "questionFrontendId": "480",
            "title": "Sliding Window Median",
            "titleSlug": "sliding-window-median",
            "acRate": "39.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "481",
            "questionFrontendId": "481",
            "title": "Magical String",
            "titleSlug": "magical-string",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "482",
            "questionFrontendId": "482",
            "title": "License Key Formatting",
            "titleSlug": "license-key-formatting",
            "acRate": "43.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "483",
            "questionFrontendId": "483",
            "title": "Smallest Good Base",
            "titleSlug": "smallest-good-base",
            "acRate": "40.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "484",
            "questionFrontendId": "484",
            "title": "Find Permutation",
            "titleSlug": "find-permutation",
            "acRate": "66.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "485",
            "questionFrontendId": "485",
            "title": "Max Consecutive Ones",
            "titleSlug": "max-consecutive-ones",
            "acRate": "58.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "486",
            "questionFrontendId": "486",
            "title": "Predict the Winner",
            "titleSlug": "predict-the-winner",
            "acRate": "55.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Game Theory",
                    "slug": "game-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "487",
            "questionFrontendId": "487",
            "title": "Max Consecutive Ones II",
            "titleSlug": "max-consecutive-ones-ii",
            "acRate": "50.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "490",
            "questionFrontendId": "490",
            "title": "The Maze",
            "titleSlug": "the-maze",
            "acRate": "57.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "493",
            "questionFrontendId": "493",
            "title": "Reverse Pairs",
            "titleSlug": "reverse-pairs",
            "acRate": "30.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "494",
            "questionFrontendId": "494",
            "title": "Target Sum",
            "titleSlug": "target-sum",
            "acRate": "46.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "495",
            "questionFrontendId": "495",
            "title": "Teemo Attacking",
            "titleSlug": "teemo-attacking",
            "acRate": "56.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "496",
            "questionFrontendId": "496",
            "title": "Next Greater Element I",
            "titleSlug": "next-greater-element-i",
            "acRate": "72.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "498",
            "questionFrontendId": "498",
            "title": "Diagonal Traverse",
            "titleSlug": "diagonal-traverse",
            "acRate": "59.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "499",
            "questionFrontendId": "499",
            "title": "The Maze III",
            "titleSlug": "the-maze-iii",
            "acRate": "48.5%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "501",
            "questionFrontendId": "501",
            "title": "Find Mode in Binary Search Tree",
            "titleSlug": "find-mode-in-binary-search-tree",
            "acRate": "55.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "503",
            "questionFrontendId": "503",
            "title": "Next Greater Element II",
            "titleSlug": "next-greater-element-ii",
            "acRate": "63.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "505",
            "questionFrontendId": "505",
            "title": "The Maze II",
            "titleSlug": "the-maze-ii",
            "acRate": "53.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "506",
            "questionFrontendId": "506",
            "title": "Relative Ranks",
            "titleSlug": "relative-ranks",
            "acRate": "63.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "507",
            "questionFrontendId": "507",
            "title": "Perfect Number",
            "titleSlug": "perfect-number",
            "acRate": "39.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "510",
            "questionFrontendId": "2031",
            "title": "Count Subarrays With More Ones Than Zeros",
            "titleSlug": "count-subarrays-with-more-ones-than-zeros",
            "acRate": "52.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "511",
            "questionFrontendId": "1059",
            "title": "All Paths from Source Lead to Destination",
            "titleSlug": "all-paths-from-source-lead-to-destination",
            "acRate": "37.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "514",
            "questionFrontendId": "514",
            "title": "Freedom Trail",
            "titleSlug": "freedom-trail",
            "acRate": "47.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "516",
            "questionFrontendId": "516",
            "title": "Longest Palindromic Subsequence",
            "titleSlug": "longest-palindromic-subsequence",
            "acRate": "62.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "518",
            "questionFrontendId": "518",
            "title": "Coin Change II",
            "titleSlug": "coin-change-ii",
            "acRate": "63.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "520",
            "questionFrontendId": "520",
            "title": "Detect Capital",
            "titleSlug": "detect-capital",
            "acRate": "56.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "521",
            "questionFrontendId": "521",
            "title": "Longest Uncommon Subsequence I",
            "titleSlug": "longest-uncommon-subsequence-i",
            "acRate": "60.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "522",
            "questionFrontendId": "522",
            "title": "Longest Uncommon Subsequence II",
            "titleSlug": "longest-uncommon-subsequence-ii",
            "acRate": "41.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "523",
            "questionFrontendId": "523",
            "title": "Continuous Subarray Sum",
            "titleSlug": "continuous-subarray-sum",
            "acRate": "28.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "524",
            "questionFrontendId": "524",
            "title": "Longest Word in Dictionary through Deleting",
            "titleSlug": "longest-word-in-dictionary-through-deleting",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "525",
            "questionFrontendId": "525",
            "title": "Contiguous Array",
            "titleSlug": "contiguous-array",
            "acRate": "46.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "526",
            "questionFrontendId": "526",
            "title": "Beautiful Arrangement",
            "titleSlug": "beautiful-arrangement",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "527",
            "questionFrontendId": "527",
            "title": "Word Abbreviation",
            "titleSlug": "word-abbreviation",
            "acRate": "60.9%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "530",
            "questionFrontendId": "530",
            "title": "Minimum Absolute Difference in BST",
            "titleSlug": "minimum-absolute-difference-in-bst",
            "acRate": "58.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "531",
            "questionFrontendId": "531",
            "title": "Lonely Pixel I",
            "titleSlug": "lonely-pixel-i",
            "acRate": "62.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "533",
            "questionFrontendId": "533",
            "title": "Lonely Pixel II",
            "titleSlug": "lonely-pixel-ii",
            "acRate": "48.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "535",
            "questionFrontendId": "535",
            "title": "Encode and Decode TinyURL",
            "titleSlug": "encode-and-decode-tinyurl",
            "acRate": "86.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "539",
            "questionFrontendId": "539",
            "title": "Minimum Time Difference",
            "titleSlug": "minimum-time-difference",
            "acRate": "56.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "540",
            "questionFrontendId": "540",
            "title": "Single Element in a Sorted Array",
            "titleSlug": "single-element-in-a-sorted-array",
            "acRate": "59.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "541",
            "questionFrontendId": "541",
            "title": "Reverse String II",
            "titleSlug": "reverse-string-ii",
            "acRate": "50.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "542",
            "questionFrontendId": "542",
            "title": "01 Matrix",
            "titleSlug": "01-matrix",
            "acRate": "48.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "543",
            "questionFrontendId": "543",
            "title": "Diameter of Binary Tree",
            "titleSlug": "diameter-of-binary-tree",
            "acRate": "59.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "544",
            "questionFrontendId": "544",
            "title": "Output Contest Matches",
            "titleSlug": "output-contest-matches",
            "acRate": "77.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "545",
            "questionFrontendId": "545",
            "title": "Boundary of Binary Tree",
            "titleSlug": "boundary-of-binary-tree",
            "acRate": "45.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "547",
            "questionFrontendId": "547",
            "title": "Number of Provinces",
            "titleSlug": "number-of-provinces",
            "acRate": "65.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "549",
            "questionFrontendId": "549",
            "title": "Binary Tree Longest Consecutive Sequence II",
            "titleSlug": "binary-tree-longest-consecutive-sequence-ii",
            "acRate": "49.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "550",
            "questionFrontendId": "1730",
            "title": "Shortest Path to Get Food",
            "titleSlug": "shortest-path-to-get-food",
            "acRate": "54.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "551",
            "questionFrontendId": "551",
            "title": "Student Attendance Record I",
            "titleSlug": "student-attendance-record-i",
            "acRate": "48.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "552",
            "questionFrontendId": "552",
            "title": "Student Attendance Record II",
            "titleSlug": "student-attendance-record-ii",
            "acRate": "42.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "554",
            "questionFrontendId": "554",
            "title": "Brick Wall",
            "titleSlug": "brick-wall",
            "acRate": "54.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "556",
            "questionFrontendId": "556",
            "title": "Next Greater Element III",
            "titleSlug": "next-greater-element-iii",
            "acRate": "33.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "557",
            "questionFrontendId": "557",
            "title": "Reverse Words in a String III",
            "titleSlug": "reverse-words-in-a-string-iii",
            "acRate": "83.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "560",
            "questionFrontendId": "560",
            "title": "Subarray Sum Equals K",
            "titleSlug": "subarray-sum-equals-k",
            "acRate": "43.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "562",
            "questionFrontendId": "562",
            "title": "Longest Line of Consecutive One in Matrix",
            "titleSlug": "longest-line-of-consecutive-one-in-matrix",
            "acRate": "50.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "564",
            "questionFrontendId": "564",
            "title": "Find the Closest Palindrome",
            "titleSlug": "find-the-closest-palindrome",
            "acRate": "22.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "567",
            "questionFrontendId": "567",
            "title": "Permutation in String",
            "titleSlug": "permutation-in-string",
            "acRate": "44.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "568",
            "questionFrontendId": "568",
            "title": "Maximum Vacation Days",
            "titleSlug": "maximum-vacation-days",
            "acRate": "45.5%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "569",
            "questionFrontendId": "569",
            "title": "Median Employee Salary",
            "titleSlug": "median-employee-salary",
            "acRate": "66.2%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "572",
            "questionFrontendId": "572",
            "title": "Subtree of Another Tree",
            "titleSlug": "subtree-of-another-tree",
            "acRate": "47.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "577",
            "questionFrontendId": "577",
            "title": "Employee Bonus",
            "titleSlug": "employee-bonus",
            "acRate": "74.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "581",
            "questionFrontendId": "581",
            "title": "Shortest Unsorted Continuous Subarray",
            "titleSlug": "shortest-unsorted-continuous-subarray",
            "acRate": "36.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "583",
            "questionFrontendId": "583",
            "title": "Delete Operation for Two Strings",
            "titleSlug": "delete-operation-for-two-strings",
            "acRate": "61.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "584",
            "questionFrontendId": "584",
            "title": "Find Customer Referee",
            "titleSlug": "find-customer-referee",
            "acRate": "69.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "586",
            "questionFrontendId": "586",
            "title": "Customer Placing the Largest Number of Orders",
            "titleSlug": "customer-placing-the-largest-number-of-orders",
            "acRate": "64.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "587",
            "questionFrontendId": "587",
            "title": "Erect the Fence",
            "titleSlug": "erect-the-fence",
            "acRate": "51.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "588",
            "questionFrontendId": "588",
            "title": "Design In-Memory File System",
            "titleSlug": "design-in-memory-file-system",
            "acRate": "48.2%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "593",
            "questionFrontendId": "593",
            "title": "Valid Square",
            "titleSlug": "valid-square",
            "acRate": "44.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "595",
            "questionFrontendId": "595",
            "title": "Big Countries",
            "titleSlug": "big-countries",
            "acRate": "68.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "604",
            "questionFrontendId": "604",
            "title": "Design Compressed String Iterator",
            "titleSlug": "design-compressed-string-iterator",
            "acRate": "39.7%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "605",
            "questionFrontendId": "605",
            "title": "Can Place Flowers",
            "titleSlug": "can-place-flowers",
            "acRate": "29.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "609",
            "questionFrontendId": "609",
            "title": "Find Duplicate File in System",
            "titleSlug": "find-duplicate-file-in-system",
            "acRate": "67.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "611",
            "questionFrontendId": "611",
            "title": "Valid Triangle Number",
            "titleSlug": "valid-triangle-number",
            "acRate": "51.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "616",
            "questionFrontendId": "616",
            "title": "Add Bold Tag in String",
            "titleSlug": "add-bold-tag-in-string",
            "acRate": "49.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "621",
            "questionFrontendId": "621",
            "title": "Task Scheduler",
            "titleSlug": "task-scheduler",
            "acRate": "58.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "629",
            "questionFrontendId": "629",
            "title": "K Inverse Pairs Array",
            "titleSlug": "k-inverse-pairs-array",
            "acRate": "50.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "630",
            "questionFrontendId": "630",
            "title": "Course Schedule III",
            "titleSlug": "course-schedule-iii",
            "acRate": "40.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "632",
            "questionFrontendId": "632",
            "title": "Smallest Range Covering Elements from K Lists",
            "titleSlug": "smallest-range-covering-elements-from-k-lists",
            "acRate": "62.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "636",
            "questionFrontendId": "636",
            "title": "Exclusive Time of Functions",
            "titleSlug": "exclusive-time-of-functions",
            "acRate": "62.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "638",
            "questionFrontendId": "638",
            "title": "Shopping Offers",
            "titleSlug": "shopping-offers",
            "acRate": "52.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "642",
            "questionFrontendId": "642",
            "title": "Design Search Autocomplete System",
            "titleSlug": "design-search-autocomplete-system",
            "acRate": "48.8%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "643",
            "questionFrontendId": "643",
            "title": "Maximum Average Subarray I",
            "titleSlug": "maximum-average-subarray-i",
            "acRate": "43.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "644",
            "questionFrontendId": "644",
            "title": "Maximum Average Subarray II",
            "titleSlug": "maximum-average-subarray-ii",
            "acRate": "36.6%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "645",
            "questionFrontendId": "645",
            "title": "Set Mismatch",
            "titleSlug": "set-mismatch",
            "acRate": "44.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "647",
            "questionFrontendId": "647",
            "title": "Palindromic Substrings",
            "titleSlug": "palindromic-substrings",
            "acRate": "69.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "650",
            "questionFrontendId": "650",
            "title": "2 Keys Keyboard",
            "titleSlug": "2-keys-keyboard",
            "acRate": "54.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "651",
            "questionFrontendId": "651",
            "title": "4 Keys Keyboard",
            "titleSlug": "4-keys-keyboard",
            "acRate": "56.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "652",
            "questionFrontendId": "652",
            "title": "Find Duplicate Subtrees",
            "titleSlug": "find-duplicate-subtrees",
            "acRate": "59.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "653",
            "questionFrontendId": "653",
            "title": "Two Sum IV - Input is a BST",
            "titleSlug": "two-sum-iv-input-is-a-bst",
            "acRate": "61.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "655",
            "questionFrontendId": "655",
            "title": "Print Binary Tree",
            "titleSlug": "print-binary-tree",
            "acRate": "63.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "656",
            "questionFrontendId": "656",
            "title": "Coin Path",
            "titleSlug": "coin-path",
            "acRate": "32.0%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "657",
            "questionFrontendId": "657",
            "title": "Robot Return to Origin",
            "titleSlug": "robot-return-to-origin",
            "acRate": "75.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "658",
            "questionFrontendId": "658",
            "title": "Find K Closest Elements",
            "titleSlug": "find-k-closest-elements",
            "acRate": "47.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "659",
            "questionFrontendId": "659",
            "title": "Split Array into Consecutive Subsequences",
            "titleSlug": "split-array-into-consecutive-subsequences",
            "acRate": "51.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "662",
            "questionFrontendId": "662",
            "title": "Maximum Width of Binary Tree",
            "titleSlug": "maximum-width-of-binary-tree",
            "acRate": "42.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "664",
            "questionFrontendId": "664",
            "title": "Strange Printer",
            "titleSlug": "strange-printer",
            "acRate": "55.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "665",
            "questionFrontendId": "665",
            "title": "Non-decreasing Array",
            "titleSlug": "non-decreasing-array",
            "acRate": "24.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "667",
            "questionFrontendId": "667",
            "title": "Beautiful Arrangement II",
            "titleSlug": "beautiful-arrangement-ii",
            "acRate": "60.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "668",
            "questionFrontendId": "668",
            "title": "Kth Smallest Number in Multiplication Table",
            "titleSlug": "kth-smallest-number-in-multiplication-table",
            "acRate": "51.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "670",
            "questionFrontendId": "670",
            "title": "Maximum Swap",
            "titleSlug": "maximum-swap",
            "acRate": "48.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "673",
            "questionFrontendId": "673",
            "title": "Number of Longest Increasing Subsequence",
            "titleSlug": "number-of-longest-increasing-subsequence",
            "acRate": "47.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "674",
            "questionFrontendId": "674",
            "title": "Longest Continuous Increasing Subsequence",
            "titleSlug": "longest-continuous-increasing-subsequence",
            "acRate": "50.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "676",
            "questionFrontendId": "676",
            "title": "Implement Magic Dictionary",
            "titleSlug": "implement-magic-dictionary",
            "acRate": "57.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "678",
            "questionFrontendId": "678",
            "title": "Valid Parenthesis String",
            "titleSlug": "valid-parenthesis-string",
            "acRate": "34.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "679",
            "questionFrontendId": "679",
            "title": "24 Game",
            "titleSlug": "24-game",
            "acRate": "49.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "680",
            "questionFrontendId": "680",
            "title": "Valid Palindrome II",
            "titleSlug": "valid-palindrome-ii",
            "acRate": "40.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "681",
            "questionFrontendId": "681",
            "title": "Next Closest Time",
            "titleSlug": "next-closest-time",
            "acRate": "46.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "683",
            "questionFrontendId": "683",
            "title": "K Empty Slots",
            "titleSlug": "k-empty-slots",
            "acRate": "37.0%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "684",
            "questionFrontendId": "684",
            "title": "Redundant Connection",
            "titleSlug": "redundant-connection",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "685",
            "questionFrontendId": "685",
            "title": "Redundant Connection II",
            "titleSlug": "redundant-connection-ii",
            "acRate": "34.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "686",
            "questionFrontendId": "686",
            "title": "Repeated String Match",
            "titleSlug": "repeated-string-match",
            "acRate": "34.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "687",
            "questionFrontendId": "687",
            "title": "Longest Univalue Path",
            "titleSlug": "longest-univalue-path",
            "acRate": "41.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "689",
            "questionFrontendId": "689",
            "title": "Maximum Sum of 3 Non-Overlapping Subarrays",
            "titleSlug": "maximum-sum-of-3-non-overlapping-subarrays",
            "acRate": "49.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "690",
            "questionFrontendId": "690",
            "title": "Employee Importance",
            "titleSlug": "employee-importance",
            "acRate": "66.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "691",
            "questionFrontendId": "691",
            "title": "Stickers to Spell Word",
            "titleSlug": "stickers-to-spell-word",
            "acRate": "48.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "692",
            "questionFrontendId": "692",
            "title": "Top K Frequent Words",
            "titleSlug": "top-k-frequent-words",
            "acRate": "57.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "695",
            "questionFrontendId": "695",
            "title": "Max Area of Island",
            "titleSlug": "max-area-of-island",
            "acRate": "71.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "696",
            "questionFrontendId": "696",
            "title": "Count Binary Substrings",
            "titleSlug": "count-binary-substrings",
            "acRate": "65.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "697",
            "questionFrontendId": "697",
            "title": "Degree of an Array",
            "titleSlug": "degree-of-an-array",
            "acRate": "56.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "715",
            "questionFrontendId": "715",
            "title": "Range Module",
            "titleSlug": "range-module",
            "acRate": "44.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "718",
            "questionFrontendId": "718",
            "title": "Maximum Length of Repeated Subarray",
            "titleSlug": "maximum-length-of-repeated-subarray",
            "acRate": "51.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "719",
            "questionFrontendId": "719",
            "title": "Find K-th Smallest Pair Distance",
            "titleSlug": "find-k-th-smallest-pair-distance",
            "acRate": "37.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "720",
            "questionFrontendId": "720",
            "title": "Longest Word in Dictionary",
            "titleSlug": "longest-word-in-dictionary",
            "acRate": "52.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "721",
            "questionFrontendId": "721",
            "title": "Accounts Merge",
            "titleSlug": "accounts-merge",
            "acRate": "56.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "722",
            "questionFrontendId": "722",
            "title": "Remove Comments",
            "titleSlug": "remove-comments",
            "acRate": "38.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "724",
            "questionFrontendId": "724",
            "title": "Find Pivot Index",
            "titleSlug": "find-pivot-index",
            "acRate": "57.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "726",
            "questionFrontendId": "726",
            "title": "Number of Atoms",
            "titleSlug": "number-of-atoms",
            "acRate": "52.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "727",
            "questionFrontendId": "727",
            "title": "Minimum Window Subsequence",
            "titleSlug": "minimum-window-subsequence",
            "acRate": "43.3%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "729",
            "questionFrontendId": "729",
            "title": "My Calendar I",
            "titleSlug": "my-calendar-i",
            "acRate": "56.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "731",
            "questionFrontendId": "731",
            "title": "My Calendar II",
            "titleSlug": "my-calendar-ii",
            "acRate": "55.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "732",
            "questionFrontendId": "732",
            "title": "My Calendar III",
            "titleSlug": "my-calendar-iii",
            "acRate": "71.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "733",
            "questionFrontendId": "733",
            "title": "Flood Fill",
            "titleSlug": "flood-fill",
            "acRate": "63.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "734",
            "questionFrontendId": "734",
            "title": "Sentence Similarity",
            "titleSlug": "sentence-similarity",
            "acRate": "44.2%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "735",
            "questionFrontendId": "735",
            "title": "Asteroid Collision",
            "titleSlug": "asteroid-collision",
            "acRate": "44.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "737",
            "questionFrontendId": "737",
            "title": "Sentence Similarity II",
            "titleSlug": "sentence-similarity-ii",
            "acRate": "49.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "739",
            "questionFrontendId": "739",
            "title": "Daily Temperatures",
            "titleSlug": "daily-temperatures",
            "acRate": "66.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "740",
            "questionFrontendId": "740",
            "title": "Delete and Earn",
            "titleSlug": "delete-and-earn",
            "acRate": "56.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "741",
            "questionFrontendId": "741",
            "title": "Cherry Pickup",
            "titleSlug": "cherry-pickup",
            "acRate": "36.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "744",
            "questionFrontendId": "743",
            "title": "Network Delay Time",
            "titleSlug": "network-delay-time",
            "acRate": "53.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "746",
            "questionFrontendId": "745",
            "title": "Prefix and Suffix Search",
            "titleSlug": "prefix-and-suffix-search",
            "acRate": "41.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "747",
            "questionFrontendId": "746",
            "title": "Min Cost Climbing Stairs",
            "titleSlug": "min-cost-climbing-stairs",
            "acRate": "65.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "748",
            "questionFrontendId": "747",
            "title": "Largest Number At Least Twice of Others",
            "titleSlug": "largest-number-at-least-twice-of-others",
            "acRate": "48.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "749",
            "questionFrontendId": "748",
            "title": "Shortest Completing Word",
            "titleSlug": "shortest-completing-word",
            "acRate": "59.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "753",
            "questionFrontendId": "752",
            "title": "Open the Lock",
            "titleSlug": "open-the-lock",
            "acRate": "56.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "754",
            "questionFrontendId": "753",
            "title": "Cracking the Safe",
            "titleSlug": "cracking-the-safe",
            "acRate": "56.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Eulerian Circuit",
                    "slug": "eulerian-circuit"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "757",
            "questionFrontendId": "756",
            "title": "Pyramid Transition Matrix",
            "titleSlug": "pyramid-transition-matrix",
            "acRate": "52.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "760",
            "questionFrontendId": "758",
            "title": "Bold Words in String",
            "titleSlug": "bold-words-in-string",
            "acRate": "51.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "761",
            "questionFrontendId": "759",
            "title": "Employee Free Time",
            "titleSlug": "employee-free-time",
            "acRate": "72.0%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "762",
            "questionFrontendId": "760",
            "title": "Find Anagram Mappings",
            "titleSlug": "find-anagram-mappings",
            "acRate": "83.6%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "765",
            "questionFrontendId": "428",
            "title": "Serialize and Deserialize N-ary Tree",
            "titleSlug": "serialize-and-deserialize-n-ary-tree",
            "acRate": "66.7%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "766",
            "questionFrontendId": "430",
            "title": "Flatten a Multilevel Doubly Linked List",
            "titleSlug": "flatten-a-multilevel-doubly-linked-list",
            "acRate": "60.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "770",
            "questionFrontendId": "765",
            "title": "Couples Holding Hands",
            "titleSlug": "couples-holding-hands",
            "acRate": "57.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "772",
            "questionFrontendId": "427",
            "title": "Construct Quad Tree",
            "titleSlug": "construct-quad-tree",
            "acRate": "75.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "775",
            "questionFrontendId": "589",
            "title": "N-ary Tree Preorder Traversal",
            "titleSlug": "n-ary-tree-preorder-traversal",
            "acRate": "75.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "777",
            "questionFrontendId": "766",
            "title": "Toeplitz Matrix",
            "titleSlug": "toeplitz-matrix",
            "acRate": "68.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "778",
            "questionFrontendId": "767",
            "title": "Reorganize String",
            "titleSlug": "reorganize-string",
            "acRate": "54.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "779",
            "questionFrontendId": "768",
            "title": "Max Chunks To Make Sorted II",
            "titleSlug": "max-chunks-to-make-sorted-ii",
            "acRate": "53.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "780",
            "questionFrontendId": "769",
            "title": "Max Chunks To Make Sorted",
            "titleSlug": "max-chunks-to-make-sorted",
            "acRate": "58.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "784",
            "questionFrontendId": "701",
            "title": "Insert into a Binary Search Tree",
            "titleSlug": "insert-into-a-binary-search-tree",
            "acRate": "73.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "785",
            "questionFrontendId": "772",
            "title": "Basic Calculator III",
            "titleSlug": "basic-calculator-iii",
            "acRate": "50.2%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "786",
            "questionFrontendId": "702",
            "title": "Search in a Sorted Array of Unknown Size",
            "titleSlug": "search-in-a-sorted-array-of-unknown-size",
            "acRate": "72.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "788",
            "questionFrontendId": "774",
            "title": "Minimize Max Distance to Gas Station",
            "titleSlug": "minimize-max-distance-to-gas-station",
            "acRate": "52.0%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "789",
            "questionFrontendId": "703",
            "title": "Kth Largest Element in a Stream",
            "titleSlug": "kth-largest-element-in-a-stream",
            "acRate": "56.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "792",
            "questionFrontendId": "704",
            "title": "Binary Search",
            "titleSlug": "binary-search",
            "acRate": "57.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "793",
            "questionFrontendId": "777",
            "title": "Swap Adjacent in LR String",
            "titleSlug": "swap-adjacent-in-lr-string",
            "acRate": "36.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "794",
            "questionFrontendId": "778",
            "title": "Swim in Rising Water",
            "titleSlug": "swim-in-rising-water",
            "acRate": "60.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "795",
            "questionFrontendId": "779",
            "title": "K-th Symbol in Grammar",
            "titleSlug": "k-th-symbol-in-grammar",
            "acRate": "46.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "796",
            "questionFrontendId": "780",
            "title": "Reaching Points",
            "titleSlug": "reaching-points",
            "acRate": "33.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "798",
            "questionFrontendId": "782",
            "title": "Transform to Chessboard",
            "titleSlug": "transform-to-chessboard",
            "acRate": "51.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "799",
            "questionFrontendId": "783",
            "title": "Minimum Distance Between BST Nodes",
            "titleSlug": "minimum-distance-between-bst-nodes",
            "acRate": "59.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "801",
            "questionFrontendId": "785",
            "title": "Is Graph Bipartite?",
            "titleSlug": "is-graph-bipartite",
            "acRate": "55.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "803",
            "questionFrontendId": "787",
            "title": "Cheapest Flights Within K Stops",
            "titleSlug": "cheapest-flights-within-k-stops",
            "acRate": "39.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "804",
            "questionFrontendId": "788",
            "title": "Rotated Digits",
            "titleSlug": "rotated-digits",
            "acRate": "56.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "805",
            "questionFrontendId": "789",
            "title": "Escape The Ghosts",
            "titleSlug": "escape-the-ghosts",
            "acRate": "61.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "806",
            "questionFrontendId": "790",
            "title": "Domino and Tromino Tiling",
            "titleSlug": "domino-and-tromino-tiling",
            "acRate": "50.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "807",
            "questionFrontendId": "791",
            "title": "Custom Sort String",
            "titleSlug": "custom-sort-string",
            "acRate": "69.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "808",
            "questionFrontendId": "792",
            "title": "Number of Matching Subsequences",
            "titleSlug": "number-of-matching-subsequences",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "810",
            "questionFrontendId": "794",
            "title": "Valid Tic-Tac-Toe State",
            "titleSlug": "valid-tic-tac-toe-state",
            "acRate": "34.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "812",
            "questionFrontendId": "796",
            "title": "Rotate String",
            "titleSlug": "rotate-string",
            "acRate": "57.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "813",
            "questionFrontendId": "797",
            "title": "All Paths From Source to Target",
            "titleSlug": "all-paths-from-source-to-target",
            "acRate": "82.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "815",
            "questionFrontendId": "799",
            "title": "Champagne Tower",
            "titleSlug": "champagne-tower",
            "acRate": "58.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "816",
            "questionFrontendId": "705",
            "title": "Design HashSet",
            "titleSlug": "design-hashset",
            "acRate": "67.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "817",
            "questionFrontendId": "706",
            "title": "Design HashMap",
            "titleSlug": "design-hashmap",
            "acRate": "65.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "818",
            "questionFrontendId": "800",
            "title": "Similar RGB Color",
            "titleSlug": "similar-rgb-color",
            "acRate": "67.3%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "820",
            "questionFrontendId": "802",
            "title": "Find Eventual Safe States",
            "titleSlug": "find-eventual-safe-states",
            "acRate": "62.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "821",
            "questionFrontendId": "803",
            "title": "Bricks Falling When Hit",
            "titleSlug": "bricks-falling-when-hit",
            "acRate": "34.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "822",
            "questionFrontendId": "804",
            "title": "Unique Morse Code Words",
            "titleSlug": "unique-morse-code-words",
            "acRate": "82.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "825",
            "questionFrontendId": "807",
            "title": "Max Increase to Keep City Skyline",
            "titleSlug": "max-increase-to-keep-city-skyline",
            "acRate": "86.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "826",
            "questionFrontendId": "808",
            "title": "Soup Servings",
            "titleSlug": "soup-servings",
            "acRate": "54.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Probability and Statistics",
                    "slug": "probability-and-statistics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "827",
            "questionFrontendId": "809",
            "title": "Expressive Words",
            "titleSlug": "expressive-words",
            "acRate": "46.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "830",
            "questionFrontendId": "812",
            "title": "Largest Triangle Area",
            "titleSlug": "largest-triangle-area",
            "acRate": "60.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "831",
            "questionFrontendId": "813",
            "title": "Largest Sum of Averages",
            "titleSlug": "largest-sum-of-averages",
            "acRate": "53.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "833",
            "questionFrontendId": "815",
            "title": "Bus Routes",
            "titleSlug": "bus-routes",
            "acRate": "48.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "834",
            "questionFrontendId": "816",
            "title": "Ambiguous Coordinates",
            "titleSlug": "ambiguous-coordinates",
            "acRate": "56.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "835",
            "questionFrontendId": "817",
            "title": "Linked List Components",
            "titleSlug": "linked-list-components",
            "acRate": "57.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "836",
            "questionFrontendId": "818",
            "title": "Race Car",
            "titleSlug": "race-car",
            "acRate": "43.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "838",
            "questionFrontendId": "707",
            "title": "Design Linked List",
            "titleSlug": "design-linked-list",
            "acRate": "28.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "843",
            "questionFrontendId": "823",
            "title": "Binary Trees With Factors",
            "titleSlug": "binary-trees-with-factors",
            "acRate": "52.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "850",
            "questionFrontendId": "708",
            "title": "Insert into a Sorted Circular Linked List",
            "titleSlug": "insert-into-a-sorted-circular-linked-list",
            "acRate": "35.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "854",
            "questionFrontendId": "827",
            "title": "Making A Large Island",
            "titleSlug": "making-a-large-island",
            "acRate": "46.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "857",
            "questionFrontendId": "830",
            "title": "Positions of Large Groups",
            "titleSlug": "positions-of-large-groups",
            "acRate": "52.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "860",
            "questionFrontendId": "622",
            "title": "Design Circular Queue",
            "titleSlug": "design-circular-queue",
            "acRate": "51.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "861",
            "questionFrontendId": "832",
            "title": "Flipping an Image",
            "titleSlug": "flipping-an-image",
            "acRate": "81.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "862",
            "questionFrontendId": "833",
            "title": "Find And Replace in String",
            "titleSlug": "find-and-replace-in-string",
            "acRate": "53.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "863",
            "questionFrontendId": "834",
            "title": "Sum of Distances in Tree",
            "titleSlug": "sum-of-distances-in-tree",
            "acRate": "59.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "864",
            "questionFrontendId": "835",
            "title": "Image Overlap",
            "titleSlug": "image-overlap",
            "acRate": "63.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "865",
            "questionFrontendId": "489",
            "title": "Robot Room Cleaner",
            "titleSlug": "robot-room-cleaner",
            "acRate": "76.7%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "867",
            "questionFrontendId": "837",
            "title": "New 21 Game",
            "titleSlug": "new-21-game",
            "acRate": "45.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Probability and Statistics",
                    "slug": "probability-and-statistics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "868",
            "questionFrontendId": "838",
            "title": "Push Dominoes",
            "titleSlug": "push-dominoes",
            "acRate": "57.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "869",
            "questionFrontendId": "839",
            "title": "Similar String Groups",
            "titleSlug": "similar-string-groups",
            "acRate": "54.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "870",
            "questionFrontendId": "840",
            "title": "Magic Squares In Grid",
            "titleSlug": "magic-squares-in-grid",
            "acRate": "38.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "871",
            "questionFrontendId": "841",
            "title": "Keys and Rooms",
            "titleSlug": "keys-and-rooms",
            "acRate": "72.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "873",
            "questionFrontendId": "843",
            "title": "Guess the Word",
            "titleSlug": "guess-the-word",
            "acRate": "39.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                },
                {
                    "name": "Game Theory",
                    "slug": "game-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "874",
            "questionFrontendId": "844",
            "title": "Backspace String Compare",
            "titleSlug": "backspace-string-compare",
            "acRate": "49.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "875",
            "questionFrontendId": "845",
            "title": "Longest Mountain in Array",
            "titleSlug": "longest-mountain-in-array",
            "acRate": "40.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "876",
            "questionFrontendId": "846",
            "title": "Hand of Straights",
            "titleSlug": "hand-of-straights",
            "acRate": "55.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "877",
            "questionFrontendId": "847",
            "title": "Shortest Path Visiting All Nodes",
            "titleSlug": "shortest-path-visiting-all-nodes",
            "acRate": "65.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "879",
            "questionFrontendId": "849",
            "title": "Maximize Distance to Closest Person",
            "titleSlug": "maximize-distance-to-closest-person",
            "acRate": "48.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "882",
            "questionFrontendId": "852",
            "title": "Peak Index in a Mountain Array",
            "titleSlug": "peak-index-in-a-mountain-array",
            "acRate": "68.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "883",
            "questionFrontendId": "853",
            "title": "Car Fleet",
            "titleSlug": "car-fleet",
            "acRate": "50.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "884",
            "questionFrontendId": "854",
            "title": "K-Similar Strings",
            "titleSlug": "k-similar-strings",
            "acRate": "39.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "885",
            "questionFrontendId": "855",
            "title": "Exam Room",
            "titleSlug": "exam-room",
            "acRate": "43.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "886",
            "questionFrontendId": "856",
            "title": "Score of Parentheses",
            "titleSlug": "score-of-parentheses",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "887",
            "questionFrontendId": "857",
            "title": "Minimum Cost to Hire K Workers",
            "titleSlug": "minimum-cost-to-hire-k-workers",
            "acRate": "52.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "889",
            "questionFrontendId": "859",
            "title": "Buddy Strings",
            "titleSlug": "buddy-strings",
            "acRate": "33.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "892",
            "questionFrontendId": "862",
            "title": "Shortest Subarray with Sum at Least K",
            "titleSlug": "shortest-subarray-with-sum-at-least-k",
            "acRate": "26.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "893",
            "questionFrontendId": "863",
            "title": "All Nodes Distance K in Binary Tree",
            "titleSlug": "all-nodes-distance-k-in-binary-tree",
            "acRate": "64.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "894",
            "questionFrontendId": "710",
            "title": "Random Pick with Blacklist",
            "titleSlug": "random-pick-with-blacklist",
            "acRate": "33.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "895",
            "questionFrontendId": "864",
            "title": "Shortest Path to Get All Keys",
            "titleSlug": "shortest-path-to-get-all-keys",
            "acRate": "53.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "900",
            "questionFrontendId": "869",
            "title": "Reordered Power of 2",
            "titleSlug": "reordered-power-of-2",
            "acRate": "62.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "902",
            "questionFrontendId": "871",
            "title": "Minimum Number of Refueling Stops",
            "titleSlug": "minimum-number-of-refueling-stops",
            "acRate": "40.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "903",
            "questionFrontendId": "470",
            "title": "Implement Rand10() Using Rand7()",
            "titleSlug": "implement-rand10-using-rand7",
            "acRate": "46.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Rejection Sampling",
                    "slug": "rejection-sampling"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                },
                {
                    "name": "Probability and Statistics",
                    "slug": "probability-and-statistics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "904",
            "questionFrontendId": "872",
            "title": "Leaf-Similar Trees",
            "titleSlug": "leaf-similar-trees",
            "acRate": "70.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "907",
            "questionFrontendId": "875",
            "title": "Koko Eating Bananas",
            "titleSlug": "koko-eating-bananas",
            "acRate": "49.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "908",
            "questionFrontendId": "876",
            "title": "Middle of the Linked List",
            "titleSlug": "middle-of-the-linked-list",
            "acRate": "77.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "911",
            "questionFrontendId": "879",
            "title": "Profitable Schemes",
            "titleSlug": "profitable-schemes",
            "acRate": "48.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "912",
            "questionFrontendId": "528",
            "title": "Random Pick with Weight",
            "titleSlug": "random-pick-with-weight",
            "acRate": "46.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "913",
            "questionFrontendId": "519",
            "title": "Random Flip Matrix",
            "titleSlug": "random-flip-matrix",
            "acRate": "41.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Reservoir Sampling",
                    "slug": "reservoir-sampling"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "914",
            "questionFrontendId": "497",
            "title": "Random Point in Non-overlapping Rectangles",
            "titleSlug": "random-point-in-non-overlapping-rectangles",
            "acRate": "39.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Reservoir Sampling",
                    "slug": "reservoir-sampling"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                },
                {
                    "name": "Randomized",
                    "slug": "randomized"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "917",
            "questionFrontendId": "881",
            "title": "Boats to Save People",
            "titleSlug": "boats-to-save-people",
            "acRate": "56.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "922",
            "questionFrontendId": "886",
            "title": "Possible Bipartition",
            "titleSlug": "possible-bipartition",
            "acRate": "50.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "923",
            "questionFrontendId": "887",
            "title": "Super Egg Drop",
            "titleSlug": "super-egg-drop",
            "acRate": "27.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "925",
            "questionFrontendId": "889",
            "title": "Construct Binary Tree from Preorder and Postorder Traversal",
            "titleSlug": "construct-binary-tree-from-preorder-and-postorder-traversal",
            "acRate": "71.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "926",
            "questionFrontendId": "890",
            "title": "Find and Replace Pattern",
            "titleSlug": "find-and-replace-pattern",
            "acRate": "76.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "930",
            "questionFrontendId": "894",
            "title": "All Possible Full Binary Trees",
            "titleSlug": "all-possible-full-binary-trees",
            "acRate": "82.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "932",
            "questionFrontendId": "896",
            "title": "Monotonic Array",
            "titleSlug": "monotonic-array",
            "acRate": "61.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "933",
            "questionFrontendId": "897",
            "title": "Increasing Order Search Tree",
            "titleSlug": "increasing-order-search-tree",
            "acRate": "78.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "936",
            "questionFrontendId": "900",
            "title": "RLE Iterator",
            "titleSlug": "rle-iterator",
            "acRate": "59.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "937",
            "questionFrontendId": "901",
            "title": "Online Stock Span",
            "titleSlug": "online-stock-span",
            "acRate": "65.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "940",
            "questionFrontendId": "904",
            "title": "Fruit Into Baskets",
            "titleSlug": "fruit-into-baskets",
            "acRate": "43.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "942",
            "questionFrontendId": "906",
            "title": "Super Palindromes",
            "titleSlug": "super-palindromes",
            "acRate": "38.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "945",
            "questionFrontendId": "909",
            "title": "Snakes and Ladders",
            "titleSlug": "snakes-and-ladders",
            "acRate": "43.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "947",
            "questionFrontendId": "911",
            "title": "Online Election",
            "titleSlug": "online-election",
            "acRate": "51.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "948",
            "questionFrontendId": "912",
            "title": "Sort an Array",
            "titleSlug": "sort-an-array",
            "acRate": "57.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Bucket Sort",
                    "slug": "bucket-sort"
                },
                {
                    "name": "Radix Sort",
                    "slug": "radix-sort"
                },
                {
                    "name": "Counting Sort",
                    "slug": "counting-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "949",
            "questionFrontendId": "913",
            "title": "Cat and Mouse",
            "titleSlug": "cat-and-mouse",
            "acRate": "34.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Game Theory",
                    "slug": "game-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "950",
            "questionFrontendId": "914",
            "title": "X of a Kind in a Deck of Cards",
            "titleSlug": "x-of-a-kind-in-a-deck-of-cards",
            "acRate": "30.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "952",
            "questionFrontendId": "916",
            "title": "Word Subsets",
            "titleSlug": "word-subsets",
            "acRate": "52.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "953",
            "questionFrontendId": "917",
            "title": "Reverse Only Letters",
            "titleSlug": "reverse-only-letters",
            "acRate": "64.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "955",
            "questionFrontendId": "919",
            "title": "Complete Binary Tree Inserter",
            "titleSlug": "complete-binary-tree-inserter",
            "acRate": "65.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "956",
            "questionFrontendId": "920",
            "title": "Number of Music Playlists",
            "titleSlug": "number-of-music-playlists",
            "acRate": "60.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "957",
            "questionFrontendId": "921",
            "title": "Minimum Add to Make Parentheses Valid",
            "titleSlug": "minimum-add-to-make-parentheses-valid",
            "acRate": "75.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "958",
            "questionFrontendId": "922",
            "title": "Sort Array By Parity II",
            "titleSlug": "sort-array-by-parity-ii",
            "acRate": "70.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "960",
            "questionFrontendId": "924",
            "title": "Minimize Malware Spread",
            "titleSlug": "minimize-malware-spread",
            "acRate": "42.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "962",
            "questionFrontendId": "926",
            "title": "Flip String to Monotone Increasing",
            "titleSlug": "flip-string-to-monotone-increasing",
            "acRate": "61.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "965",
            "questionFrontendId": "929",
            "title": "Unique Email Addresses",
            "titleSlug": "unique-email-addresses",
            "acRate": "67.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "966",
            "questionFrontendId": "930",
            "title": "Binary Subarrays With Sum",
            "titleSlug": "binary-subarrays-with-sum",
            "acRate": "56.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "967",
            "questionFrontendId": "931",
            "title": "Minimum Falling Path Sum",
            "titleSlug": "minimum-falling-path-sum",
            "acRate": "64.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "968",
            "questionFrontendId": "932",
            "title": "Beautiful Array",
            "titleSlug": "beautiful-array",
            "acRate": "65.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "969",
            "questionFrontendId": "933",
            "title": "Number of Recent Calls",
            "titleSlug": "number-of-recent-calls",
            "acRate": "74.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "971",
            "questionFrontendId": "934",
            "title": "Shortest Bridge",
            "titleSlug": "shortest-bridge",
            "acRate": "57.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "972",
            "questionFrontendId": "935",
            "title": "Knight Dialer",
            "titleSlug": "knight-dialer",
            "acRate": "59.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "975",
            "questionFrontendId": "938",
            "title": "Range Sum of BST",
            "titleSlug": "range-sum-of-bst",
            "acRate": "86.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "976",
            "questionFrontendId": "939",
            "title": "Minimum Area Rectangle",
            "titleSlug": "minimum-area-rectangle",
            "acRate": "53.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "977",
            "questionFrontendId": "940",
            "title": "Distinct Subsequences II",
            "titleSlug": "distinct-subsequences-ii",
            "acRate": "43.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "978",
            "questionFrontendId": "941",
            "title": "Valid Mountain Array",
            "titleSlug": "valid-mountain-array",
            "acRate": "33.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "979",
            "questionFrontendId": "942",
            "title": "DI String Match",
            "titleSlug": "di-string-match",
            "acRate": "78.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "981",
            "questionFrontendId": "944",
            "title": "Delete Columns to Make Sorted",
            "titleSlug": "delete-columns-to-make-sorted",
            "acRate": "74.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "983",
            "questionFrontendId": "946",
            "title": "Validate Stack Sequences",
            "titleSlug": "validate-stack-sequences",
            "acRate": "69.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "984",
            "questionFrontendId": "947",
            "title": "Most Stones Removed with Same Row or Column",
            "titleSlug": "most-stones-removed-with-same-row-or-column",
            "acRate": "58.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "985",
            "questionFrontendId": "948",
            "title": "Bag of Tokens",
            "titleSlug": "bag-of-tokens",
            "acRate": "52.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "986",
            "questionFrontendId": "949",
            "title": "Largest Time for Given Digits",
            "titleSlug": "largest-time-for-given-digits",
            "acRate": "35.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "988",
            "questionFrontendId": "951",
            "title": "Flip Equivalent Binary Trees",
            "titleSlug": "flip-equivalent-binary-trees",
            "acRate": "67.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "989",
            "questionFrontendId": "952",
            "title": "Largest Component Size by Common Factor",
            "titleSlug": "largest-component-size-by-common-factor",
            "acRate": "40.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "991",
            "questionFrontendId": "954",
            "title": "Array of Doubled Pairs",
            "titleSlug": "array-of-doubled-pairs",
            "acRate": "39.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "992",
            "questionFrontendId": "955",
            "title": "Delete Columns to Make Sorted II",
            "titleSlug": "delete-columns-to-make-sorted-ii",
            "acRate": "35.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "998",
            "questionFrontendId": "958",
            "title": "Check Completeness of a Binary Tree",
            "titleSlug": "check-completeness-of-a-binary-tree",
            "acRate": "56.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "999",
            "questionFrontendId": "959",
            "title": "Regions Cut By Slashes",
            "titleSlug": "regions-cut-by-slashes",
            "acRate": "69.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1000",
            "questionFrontendId": "960",
            "title": "Delete Columns to Make Sorted III",
            "titleSlug": "delete-columns-to-make-sorted-iii",
            "acRate": "57.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1002",
            "questionFrontendId": "962",
            "title": "Maximum Width Ramp",
            "titleSlug": "maximum-width-ramp",
            "acRate": "49.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1003",
            "questionFrontendId": "963",
            "title": "Minimum Area Rectangle II",
            "titleSlug": "minimum-area-rectangle-ii",
            "acRate": "54.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1007",
            "questionFrontendId": "967",
            "title": "Numbers With Same Consecutive Differences",
            "titleSlug": "numbers-with-same-consecutive-differences",
            "acRate": "57.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1008",
            "questionFrontendId": "968",
            "title": "Binary Tree Cameras",
            "titleSlug": "binary-tree-cameras",
            "acRate": "46.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1013",
            "questionFrontendId": "509",
            "title": "Fibonacci Number",
            "titleSlug": "fibonacci-number",
            "acRate": "70.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1014",
            "questionFrontendId": "973",
            "title": "K Closest Points to Origin",
            "titleSlug": "k-closest-points-to-origin",
            "acRate": "66.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1016",
            "questionFrontendId": "974",
            "title": "Subarray Sums Divisible by K",
            "titleSlug": "subarray-sums-divisible-by-k",
            "acRate": "54.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1017",
            "questionFrontendId": "975",
            "title": "Odd Even Jump",
            "titleSlug": "odd-even-jump",
            "acRate": "39.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1019",
            "questionFrontendId": "977",
            "title": "Squares of a Sorted Array",
            "titleSlug": "squares-of-a-sorted-array",
            "acRate": "71.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1021",
            "questionFrontendId": "979",
            "title": "Distribute Coins in Binary Tree",
            "titleSlug": "distribute-coins-in-binary-tree",
            "acRate": "72.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1022",
            "questionFrontendId": "980",
            "title": "Unique Paths III",
            "titleSlug": "unique-paths-iii",
            "acRate": "81.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1023",
            "questionFrontendId": "981",
            "title": "Time Based Key-Value Store",
            "titleSlug": "time-based-key-value-store",
            "acRate": "49.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1025",
            "questionFrontendId": "983",
            "title": "Minimum Cost For Tickets",
            "titleSlug": "minimum-cost-for-tickets",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1028",
            "questionFrontendId": "986",
            "title": "Interval List Intersections",
            "titleSlug": "interval-list-intersections",
            "acRate": "71.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1029",
            "questionFrontendId": "987",
            "title": "Vertical Order Traversal of a Binary Tree",
            "titleSlug": "vertical-order-traversal-of-a-binary-tree",
            "acRate": "47.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1030",
            "questionFrontendId": "988",
            "title": "Smallest String Starting From Leaf",
            "titleSlug": "smallest-string-starting-from-leaf",
            "acRate": "51.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1032",
            "questionFrontendId": "990",
            "title": "Satisfiability of Equality Equations",
            "titleSlug": "satisfiability-of-equality-equations",
            "acRate": "50.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1034",
            "questionFrontendId": "992",
            "title": "Subarrays with K Different Integers",
            "titleSlug": "subarrays-with-k-different-integers",
            "acRate": "56.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1036",
            "questionFrontendId": "994",
            "title": "Rotting Oranges",
            "titleSlug": "rotting-oranges",
            "acRate": "53.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1037",
            "questionFrontendId": "995",
            "title": "Minimum Number of K Consecutive Bit Flips",
            "titleSlug": "minimum-number-of-k-consecutive-bit-flips",
            "acRate": "51.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1042",
            "questionFrontendId": "1000",
            "title": "Minimum Cost to Merge Stones",
            "titleSlug": "minimum-cost-to-merge-stones",
            "acRate": "43.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1046",
            "questionFrontendId": "1004",
            "title": "Max Consecutive Ones III",
            "titleSlug": "max-consecutive-ones-iii",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1049",
            "questionFrontendId": "1007",
            "title": "Minimum Domino Rotations For Equal Row",
            "titleSlug": "minimum-domino-rotations-for-equal-row",
            "acRate": "52.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1051",
            "questionFrontendId": "1055",
            "title": "Shortest Way to Form String",
            "titleSlug": "shortest-way-to-form-string",
            "acRate": "60.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1052",
            "questionFrontendId": "1057",
            "title": "Campus Bikes",
            "titleSlug": "campus-bikes",
            "acRate": "58.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1054",
            "questionFrontendId": "1009",
            "title": "Complement of Base 10 Integer",
            "titleSlug": "complement-of-base-10-integer",
            "acRate": "60.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1055",
            "questionFrontendId": "1010",
            "title": "Pairs of Songs With Total Durations Divisible by 60",
            "titleSlug": "pairs-of-songs-with-total-durations-divisible-by-60",
            "acRate": "52.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1056",
            "questionFrontendId": "1011",
            "title": "Capacity To Ship Packages Within D Days",
            "titleSlug": "capacity-to-ship-packages-within-d-days",
            "acRate": "69.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1057",
            "questionFrontendId": "1012",
            "title": "Numbers With Repeated Digits",
            "titleSlug": "numbers-with-repeated-digits",
            "acRate": "41.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1060",
            "questionFrontendId": "1062",
            "title": "Longest Repeating Substring",
            "titleSlug": "longest-repeating-substring",
            "acRate": "60.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Suffix Array",
                    "slug": "suffix-array"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1063",
            "questionFrontendId": "1014",
            "title": "Best Sightseeing Pair",
            "titleSlug": "best-sightseeing-pair",
            "acRate": "59.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1064",
            "questionFrontendId": "1015",
            "title": "Smallest Integer Divisible by K",
            "titleSlug": "smallest-integer-divisible-by-k",
            "acRate": "46.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1065",
            "questionFrontendId": "1016",
            "title": "Binary String With Substrings Representing 1 To N",
            "titleSlug": "binary-string-with-substrings-representing-1-to-n",
            "acRate": "57.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1067",
            "questionFrontendId": "1066",
            "title": "Campus Bikes II",
            "titleSlug": "campus-bikes-ii",
            "acRate": "55.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1069",
            "questionFrontendId": "1056",
            "title": "Confusing Number",
            "titleSlug": "confusing-number",
            "acRate": "48.6%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1073",
            "questionFrontendId": "1020",
            "title": "Number of Enclaves",
            "titleSlug": "number-of-enclaves",
            "acRate": "68.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1076",
            "questionFrontendId": "1087",
            "title": "Brace Expansion",
            "titleSlug": "brace-expansion",
            "acRate": "66.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1077",
            "questionFrontendId": "1088",
            "title": "Confusing Number II",
            "titleSlug": "confusing-number-ii",
            "acRate": "47.2%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1078",
            "questionFrontendId": "1021",
            "title": "Remove Outermost Parentheses",
            "titleSlug": "remove-outermost-parentheses",
            "acRate": "82.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1080",
            "questionFrontendId": "1023",
            "title": "Camelcase Matching",
            "titleSlug": "camelcase-matching",
            "acRate": "62.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1081",
            "questionFrontendId": "1024",
            "title": "Video Stitching",
            "titleSlug": "video-stitching",
            "acRate": "51.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1085",
            "questionFrontendId": "1101",
            "title": "The Earliest Moment When Everyone Become Friends",
            "titleSlug": "the-earliest-moment-when-everyone-become-friends",
            "acRate": "64.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1087",
            "questionFrontendId": "1027",
            "title": "Longest Arithmetic Subsequence",
            "titleSlug": "longest-arithmetic-subsequence",
            "acRate": "49.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1092",
            "questionFrontendId": "1026",
            "title": "Maximum Difference Between Node and Ancestor",
            "titleSlug": "maximum-difference-between-node-and-ancestor",
            "acRate": "78.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1097",
            "questionFrontendId": "1032",
            "title": "Stream of Characters",
            "titleSlug": "stream-of-characters",
            "acRate": "51.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1099",
            "questionFrontendId": "1102",
            "title": "Path With Maximum Minimum Value",
            "titleSlug": "path-with-maximum-minimum-value",
            "acRate": "53.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1101",
            "questionFrontendId": "1136",
            "title": "Parallel Courses",
            "titleSlug": "parallel-courses",
            "acRate": "61.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1106",
            "questionFrontendId": "1036",
            "title": "Escape a Large Maze",
            "titleSlug": "escape-a-large-maze",
            "acRate": "35.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1112",
            "questionFrontendId": "1160",
            "title": "Find Words That Can Be Formed by Characters",
            "titleSlug": "find-words-that-can-be-formed-by-characters",
            "acRate": "70.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1115",
            "questionFrontendId": "1037",
            "title": "Valid Boomerang",
            "titleSlug": "valid-boomerang",
            "acRate": "36.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1116",
            "questionFrontendId": "1161",
            "title": "Maximum Level Sum of a Binary Tree",
            "titleSlug": "maximum-level-sum-of-a-binary-tree",
            "acRate": "67.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1117",
            "questionFrontendId": "1162",
            "title": "As Far from Land as Possible",
            "titleSlug": "as-far-from-land-as-possible",
            "acRate": "51.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1118",
            "questionFrontendId": "1121",
            "title": "Divide Array Into Increasing Sequences",
            "titleSlug": "divide-array-into-increasing-sequences",
            "acRate": "61.4%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1120",
            "questionFrontendId": "1042",
            "title": "Flower Planting With No Adjacent",
            "titleSlug": "flower-planting-with-no-adjacent",
            "acRate": "51.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1121",
            "questionFrontendId": "1043",
            "title": "Partition Array for Maximum Sum",
            "titleSlug": "partition-array-for-maximum-sum",
            "acRate": "76.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1122",
            "questionFrontendId": "1044",
            "title": "Longest Duplicate Substring",
            "titleSlug": "longest-duplicate-substring",
            "acRate": "30.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Suffix Array",
                    "slug": "suffix-array"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1123",
            "questionFrontendId": "1165",
            "title": "Single-Row Keyboard",
            "titleSlug": "single-row-keyboard",
            "acRate": "87.4%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1124",
            "questionFrontendId": "1153",
            "title": "String Transforms Into Another String",
            "titleSlug": "string-transforms-into-another-string",
            "acRate": "35.0%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1126",
            "questionFrontendId": "1167",
            "title": "Minimum Cost to Connect Sticks",
            "titleSlug": "minimum-cost-to-connect-sticks",
            "acRate": "69.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1127",
            "questionFrontendId": "1046",
            "title": "Last Stone Weight",
            "titleSlug": "last-stone-weight",
            "acRate": "65.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1128",
            "questionFrontendId": "1047",
            "title": "Remove All Adjacent Duplicates In String",
            "titleSlug": "remove-all-adjacent-duplicates-in-string",
            "acRate": "69.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1129",
            "questionFrontendId": "1048",
            "title": "Longest String Chain",
            "titleSlug": "longest-string-chain",
            "acRate": "61.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1134",
            "questionFrontendId": "1182",
            "title": "Shortest Distance to Target Color",
            "titleSlug": "shortest-distance-to-target-color",
            "acRate": "55.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1138",
            "questionFrontendId": "1052",
            "title": "Grumpy Bookstore Owner",
            "titleSlug": "grumpy-bookstore-owner",
            "acRate": "57.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1142",
            "questionFrontendId": "1197",
            "title": "Minimum Knight Moves",
            "titleSlug": "minimum-knight-moves",
            "acRate": "40.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1144",
            "questionFrontendId": "1168",
            "title": "Optimize Water Distribution in a Village",
            "titleSlug": "optimize-water-distribution-in-a-village",
            "acRate": "64.7%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Minimum Spanning Tree",
                    "slug": "minimum-spanning-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1145",
            "questionFrontendId": "1074",
            "title": "Number of Submatrices That Sum to Target",
            "titleSlug": "number-of-submatrices-that-sum-to-target",
            "acRate": "74.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1153",
            "questionFrontendId": "1068",
            "title": "Product Sales Analysis I",
            "titleSlug": "product-sales-analysis-i",
            "acRate": "81.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1156",
            "questionFrontendId": "1078",
            "title": "Occurrences After Bigram",
            "titleSlug": "occurrences-after-bigram",
            "acRate": "63.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1159",
            "questionFrontendId": "1081",
            "title": "Smallest Subsequence of Distinct Characters",
            "titleSlug": "smallest-subsequence-of-distinct-characters",
            "acRate": "60.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1160",
            "questionFrontendId": "1079",
            "title": "Letter Tile Possibilities",
            "titleSlug": "letter-tile-possibilities",
            "acRate": "76.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1165",
            "questionFrontendId": "1229",
            "title": "Meeting Scheduler",
            "titleSlug": "meeting-scheduler",
            "acRate": "55.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1167",
            "questionFrontendId": "1199",
            "title": "Minimum Time to Build Blocks",
            "titleSlug": "minimum-time-to-build-blocks",
            "acRate": "45.8%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1168",
            "questionFrontendId": "1089",
            "title": "Duplicate Zeros",
            "titleSlug": "duplicate-zeros",
            "acRate": "51.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1169",
            "questionFrontendId": "1090",
            "title": "Largest Values From Labels",
            "titleSlug": "largest-values-from-labels",
            "acRate": "61.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1170",
            "questionFrontendId": "1092",
            "title": "Shortest Common Supersequence ",
            "titleSlug": "shortest-common-supersequence",
            "acRate": "58.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1171",
            "questionFrontendId": "1091",
            "title": "Shortest Path in Binary Matrix",
            "titleSlug": "shortest-path-in-binary-matrix",
            "acRate": "47.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1176",
            "questionFrontendId": "1244",
            "title": "Design A Leaderboard",
            "titleSlug": "design-a-leaderboard",
            "acRate": "67.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1177",
            "questionFrontendId": "1245",
            "title": "Tree Diameter",
            "titleSlug": "tree-diameter",
            "acRate": "61.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1185",
            "questionFrontendId": "1095",
            "title": "Find in Mountain Array",
            "titleSlug": "find-in-mountain-array",
            "acRate": "40.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1186",
            "questionFrontendId": "1117",
            "title": "Building H2O",
            "titleSlug": "building-h2o",
            "acRate": "56.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Concurrency",
                    "slug": "concurrency"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1188",
            "questionFrontendId": "1096",
            "title": "Brace Expansion II",
            "titleSlug": "brace-expansion-ii",
            "acRate": "63.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1192",
            "questionFrontendId": "1231",
            "title": "Divide Chocolate",
            "titleSlug": "divide-chocolate",
            "acRate": "58.3%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1196",
            "questionFrontendId": "1105",
            "title": "Filling Bookcase Shelves",
            "titleSlug": "filling-bookcase-shelves",
            "acRate": "59.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1197",
            "questionFrontendId": "1106",
            "title": "Parsing A Boolean Expression",
            "titleSlug": "parsing-a-boolean-expression",
            "acRate": "59.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1200",
            "questionFrontendId": "1272",
            "title": "Remove Interval",
            "titleSlug": "remove-interval",
            "acRate": "65.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1203",
            "questionFrontendId": "1114",
            "title": "Print in Order",
            "titleSlug": "print-in-order",
            "acRate": "69.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Concurrency",
                    "slug": "concurrency"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1207",
            "questionFrontendId": "1110",
            "title": "Delete Nodes And Return Forest",
            "titleSlug": "delete-nodes-and-return-forest",
            "acRate": "69.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1210",
            "questionFrontendId": "1619",
            "title": "Mean of Array After Removing Some Elements",
            "titleSlug": "mean-of-array-after-removing-some-elements",
            "acRate": "67.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1211",
            "questionFrontendId": "1286",
            "title": "Iterator for Combination",
            "titleSlug": "iterator-for-combination",
            "acRate": "73.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Iterator",
                    "slug": "iterator"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1220",
            "questionFrontendId": "1125",
            "title": "Smallest Sufficient Team",
            "titleSlug": "smallest-sufficient-team",
            "acRate": "56.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1221",
            "questionFrontendId": "1287",
            "title": "Element Appearing More Than 25% In Sorted Array",
            "titleSlug": "element-appearing-more-than-25-in-sorted-array",
            "acRate": "61.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1224",
            "questionFrontendId": "1289",
            "title": "Minimum Falling Path Sum II",
            "titleSlug": "minimum-falling-path-sum-ii",
            "acRate": "57.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1229",
            "questionFrontendId": "1129",
            "title": "Shortest Path with Alternating Colors",
            "titleSlug": "shortest-path-with-alternating-colors",
            "acRate": "47.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1232",
            "questionFrontendId": "1300",
            "title": "Sum of Mutated Array Closest to Target",
            "titleSlug": "sum-of-mutated-array-closest-to-target",
            "acRate": "44.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1238",
            "questionFrontendId": "1138",
            "title": "Alphabet Board Path",
            "titleSlug": "alphabet-board-path",
            "acRate": "51.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1241",
            "questionFrontendId": "1313",
            "title": "Decompress Run-Length Encoded List",
            "titleSlug": "decompress-run-length-encoded-list",
            "acRate": "85.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1242",
            "questionFrontendId": "1314",
            "title": "Matrix Block Sum",
            "titleSlug": "matrix-block-sum",
            "acRate": "75.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1244",
            "questionFrontendId": "1316",
            "title": "Distinct Echo Substrings",
            "titleSlug": "distinct-echo-substrings",
            "acRate": "50.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1247",
            "questionFrontendId": "1144",
            "title": "Decrease Elements To Make Array Zigzag",
            "titleSlug": "decrease-elements-to-make-array-zigzag",
            "acRate": "47.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1248",
            "questionFrontendId": "1145",
            "title": "Binary Tree Coloring Game",
            "titleSlug": "binary-tree-coloring-game",
            "acRate": "51.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1249",
            "questionFrontendId": "1146",
            "title": "Snapshot Array",
            "titleSlug": "snapshot-array",
            "acRate": "37.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1250",
            "questionFrontendId": "1143",
            "title": "Longest Common Subsequence",
            "titleSlug": "longest-common-subsequence",
            "acRate": "57.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1251",
            "questionFrontendId": "1147",
            "title": "Longest Chunked Palindrome Decomposition",
            "titleSlug": "longest-chunked-palindrome-decomposition",
            "acRate": "58.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1254",
            "questionFrontendId": "1302",
            "title": "Deepest Leaves Sum",
            "titleSlug": "deepest-leaves-sum",
            "acRate": "86.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1256",
            "questionFrontendId": "1331",
            "title": "Rank Transform of an Array",
            "titleSlug": "rank-transform-of-an-array",
            "acRate": "61.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1257",
            "questionFrontendId": "1632",
            "title": "Rank Transform of a Matrix",
            "titleSlug": "rank-transform-of-a-matrix",
            "acRate": "40.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1258",
            "questionFrontendId": "1148",
            "title": "Article Views I",
            "titleSlug": "article-views-i",
            "acRate": "74.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1263",
            "questionFrontendId": "1155",
            "title": "Number of Dice Rolls With Target Sum",
            "titleSlug": "number-of-dice-rolls-with-target-sum",
            "acRate": "60.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1267",
            "questionFrontendId": "1171",
            "title": "Remove Zero Sum Consecutive Nodes from Linked List",
            "titleSlug": "remove-zero-sum-consecutive-nodes-from-linked-list",
            "acRate": "43.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1273",
            "questionFrontendId": "1170",
            "title": "Compare Strings by Frequency of the Smallest Character",
            "titleSlug": "compare-strings-by-frequency-of-the-smallest-character",
            "acRate": "61.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1274",
            "questionFrontendId": "1360",
            "title": "Number of Days Between Two Dates",
            "titleSlug": "number-of-days-between-two-dates",
            "acRate": "49.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1275",
            "questionFrontendId": "1361",
            "title": "Validate Binary Tree Nodes",
            "titleSlug": "validate-binary-tree-nodes",
            "acRate": "44.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1277",
            "questionFrontendId": "1363",
            "title": "Largest Multiple of Three",
            "titleSlug": "largest-multiple-of-three",
            "acRate": "32.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1278",
            "questionFrontendId": "1164",
            "title": "Product Price at a Given Date",
            "titleSlug": "product-price-at-a-given-date",
            "acRate": "55.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1286",
            "questionFrontendId": "1425",
            "title": "Constrained Subsequence Sum",
            "titleSlug": "constrained-subsequence-sum",
            "acRate": "56.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1287",
            "questionFrontendId": "1184",
            "title": "Distance Between Bus Stops",
            "titleSlug": "distance-between-bus-stops",
            "acRate": "54.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "1296",
            "questionFrontendId": "1483",
            "title": "Kth Ancestor of a Tree Node",
            "titleSlug": "kth-ancestor-of-a-tree-node",
            "acRate": "34.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1305",
            "questionFrontendId": "1944",
            "title": "Number of Visible People in a Queue",
            "titleSlug": "number-of-visible-people-in-a-queue",
            "acRate": "68.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1308",
            "questionFrontendId": "1202",
            "title": "Smallest String With Swaps",
            "titleSlug": "smallest-string-with-swaps",
            "acRate": "58.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1310",
            "questionFrontendId": "2079",
            "title": "Watering Plants",
            "titleSlug": "watering-plants",
            "acRate": "79.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1319",
            "questionFrontendId": "1207",
            "title": "Unique Number of Occurrences",
            "titleSlug": "unique-number-of-occurrences",
            "acRate": "77.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1324",
            "questionFrontendId": "1706",
            "title": "Where Will the Ball Fall",
            "titleSlug": "where-will-the-ball-fall",
            "acRate": "71.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1325",
            "questionFrontendId": "1514",
            "title": "Path with Maximum Probability",
            "titleSlug": "path-with-maximum-probability",
            "acRate": "54.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1330",
            "questionFrontendId": "1218",
            "title": "Longest Arithmetic Subsequence of Given Difference",
            "titleSlug": "longest-arithmetic-subsequence-of-given-difference",
            "acRate": "54.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1331",
            "questionFrontendId": "1219",
            "title": "Path with Maximum Gold",
            "titleSlug": "path-with-maximum-gold",
            "acRate": "63.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1332",
            "questionFrontendId": "1220",
            "title": "Count Vowels Permutation",
            "titleSlug": "count-vowels-permutation",
            "acRate": "62.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1335",
            "questionFrontendId": "2226",
            "title": "Maximum Candies Allocated to K Children",
            "titleSlug": "maximum-candies-allocated-to-k-children",
            "acRate": "37.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1337",
            "questionFrontendId": "1206",
            "title": "Design Skiplist",
            "titleSlug": "design-skiplist",
            "acRate": "60.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1350",
            "questionFrontendId": "1233",
            "title": "Remove Sub-Folders from the Filesystem",
            "titleSlug": "remove-sub-folders-from-the-filesystem",
            "acRate": "65.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1352",
            "questionFrontendId": "1235",
            "title": "Maximum Profit in Job Scheduling",
            "titleSlug": "maximum-profit-in-job-scheduling",
            "acRate": "54.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1358",
            "questionFrontendId": "1237",
            "title": "Find Positive Integer Solution for a Given Equation",
            "titleSlug": "find-positive-integer-solution-for-a-given-equation",
            "acRate": "69.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1361",
            "questionFrontendId": "1240",
            "title": "Tiling a Rectangle with the Fewest Squares",
            "titleSlug": "tiling-a-rectangle-with-the-fewest-squares",
            "acRate": "54.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1364",
            "questionFrontendId": "1726",
            "title": "Tuple with Same Product",
            "titleSlug": "tuple-with-same-product",
            "acRate": "61.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1371",
            "questionFrontendId": "1249",
            "title": "Minimum Remove to Make Valid Parentheses",
            "titleSlug": "minimum-remove-to-make-valid-parentheses",
            "acRate": "67.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1380",
            "questionFrontendId": "1254",
            "title": "Number of Closed Islands",
            "titleSlug": "number-of-closed-islands",
            "acRate": "66.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1381",
            "questionFrontendId": "1255",
            "title": "Maximum Score Words Formed by Letters",
            "titleSlug": "maximum-score-words-formed-by-letters",
            "acRate": "72.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1384",
            "questionFrontendId": "1618",
            "title": "Maximum Font to Fit a Sentence in a Screen",
            "titleSlug": "maximum-font-to-fit-a-sentence-in-a-screen",
            "acRate": "60.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1387",
            "questionFrontendId": "1261",
            "title": "Find Elements in a Contaminated Binary Tree",
            "titleSlug": "find-elements-in-a-contaminated-binary-tree",
            "acRate": "77.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1389",
            "questionFrontendId": "1263",
            "title": "Minimum Moves to Move a Box to Their Target Location",
            "titleSlug": "minimum-moves-to-move-a-box-to-their-target-location",
            "acRate": "49.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1390",
            "questionFrontendId": "1251",
            "title": "Average Selling Price",
            "titleSlug": "average-selling-price",
            "acRate": "44.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1392",
            "questionFrontendId": "2215",
            "title": "Find the Difference of Two Arrays",
            "titleSlug": "find-the-difference-of-two-arrays",
            "acRate": "78.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1393",
            "questionFrontendId": "2218",
            "title": "Maximum Value of K Coins From Piles",
            "titleSlug": "maximum-value-of-k-coins-from-piles",
            "acRate": "60.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1394",
            "questionFrontendId": "2304",
            "title": "Minimum Path Cost in a Grid",
            "titleSlug": "minimum-path-cost-in-a-grid",
            "acRate": "66.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1396",
            "questionFrontendId": "1267",
            "title": "Count Servers that Communicate",
            "titleSlug": "count-servers-that-communicate",
            "acRate": "60.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1397",
            "questionFrontendId": "1268",
            "title": "Search Suggestions System",
            "titleSlug": "search-suggestions-system",
            "acRate": "65.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1398",
            "questionFrontendId": "1269",
            "title": "Number of Ways to Stay in the Same Place After Some Steps",
            "titleSlug": "number-of-ways-to-stay-in-the-same-place-after-some-steps",
            "acRate": "50.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1400",
            "questionFrontendId": "1275",
            "title": "Find Winner on a Tic Tac Toe Game",
            "titleSlug": "find-winner-on-a-tic-tac-toe-game",
            "acRate": "54.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1402",
            "questionFrontendId": "1277",
            "title": "Count Square Submatrices with All Ones",
            "titleSlug": "count-square-submatrices-with-all-ones",
            "acRate": "75.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1405",
            "questionFrontendId": "1270",
            "title": "All People Report to the Given Manager",
            "titleSlug": "all-people-report-to-the-given-manager",
            "acRate": "85.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1406",
            "questionFrontendId": "1281",
            "title": "Subtract the Product and Sum of Digits of an Integer",
            "titleSlug": "subtract-the-product-and-sum-of-digits-of-an-integer",
            "acRate": "86.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1409",
            "questionFrontendId": "1284",
            "title": "Minimum Number of Flips to Convert Binary Matrix to Zero Matrix",
            "titleSlug": "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix",
            "acRate": "72.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1413",
            "questionFrontendId": "1292",
            "title": "Maximum Side Length of a Square with Sum Less than or Equal to Threshold",
            "titleSlug": "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold",
            "acRate": "53.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1414",
            "questionFrontendId": "1293",
            "title": "Shortest Path in a Grid with Obstacles Elimination",
            "titleSlug": "shortest-path-in-a-grid-with-obstacles-elimination",
            "acRate": "45.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1418",
            "questionFrontendId": "2305",
            "title": "Fair Distribution of Cookies",
            "titleSlug": "fair-distribution-of-cookies",
            "acRate": "69.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1422",
            "questionFrontendId": "1296",
            "title": "Divide Array in Sets of K Consecutive Numbers",
            "titleSlug": "divide-array-in-sets-of-k-consecutive-numbers",
            "acRate": "56.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1428",
            "questionFrontendId": "1306",
            "title": "Jump Game III",
            "titleSlug": "jump-game-iii",
            "acRate": "64.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1431",
            "questionFrontendId": "2192",
            "title": "All Ancestors of a Node in a Directed Acyclic Graph",
            "titleSlug": "all-ancestors-of-a-node-in-a-directed-acyclic-graph",
            "acRate": "51.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1443",
            "questionFrontendId": "1320",
            "title": "Minimum Distance to Type a Word Using Two Fingers",
            "titleSlug": "minimum-distance-to-type-a-word-using-two-fingers",
            "acRate": "59.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1447",
            "questionFrontendId": "1345",
            "title": "Jump Game IV",
            "titleSlug": "jump-game-iv",
            "acRate": "46.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1456",
            "questionFrontendId": "1334",
            "title": "Find the City With the Smallest Number of Neighbors at a Threshold Distance",
            "titleSlug": "find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",
            "acRate": "59.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1461",
            "questionFrontendId": "1359",
            "title": "Count All Valid Pickup and Delivery Options",
            "titleSlug": "count-all-valid-pickup-and-delivery-options",
            "acRate": "65.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1463",
            "questionFrontendId": "1337",
            "title": "The K Weakest Rows in a Matrix",
            "titleSlug": "the-k-weakest-rows-in-a-matrix",
            "acRate": "73.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1468",
            "questionFrontendId": "1346",
            "title": "Check If N and Its Double Exist",
            "titleSlug": "check-if-n-and-its-double-exist",
            "acRate": "37.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1477",
            "questionFrontendId": "1352",
            "title": "Product of the Last K Numbers",
            "titleSlug": "product-of-the-last-k-numbers",
            "acRate": "50.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1478",
            "questionFrontendId": "1353",
            "title": "Maximum Number of Events That Can Be Attended",
            "titleSlug": "maximum-number-of-events-that-can-be-attended",
            "acRate": "32.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1482",
            "questionFrontendId": "1365",
            "title": "How Many Numbers Are Smaller Than the Current Number",
            "titleSlug": "how-many-numbers-are-smaller-than-the-current-number",
            "acRate": "86.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1483",
            "questionFrontendId": "1366",
            "title": "Rank Teams by Votes",
            "titleSlug": "rank-teams-by-votes",
            "acRate": "58.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1485",
            "questionFrontendId": "1368",
            "title": "Minimum Cost to Make at Least One Valid Path in a Grid",
            "titleSlug": "minimum-cost-to-make-at-least-one-valid-path-in-a-grid",
            "acRate": "62.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1487",
            "questionFrontendId": "1386",
            "title": "Cinema Seat Allocation",
            "titleSlug": "cinema-seat-allocation",
            "acRate": "41.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1488",
            "questionFrontendId": "1387",
            "title": "Sort Integers by The Power Value",
            "titleSlug": "sort-integers-by-the-power-value",
            "acRate": "69.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1489",
            "questionFrontendId": "1388",
            "title": "Pizza With 3n Slices",
            "titleSlug": "pizza-with-3n-slices",
            "acRate": "51.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1492",
            "questionFrontendId": "1376",
            "title": "Time Needed to Inform All Employees",
            "titleSlug": "time-needed-to-inform-all-employees",
            "acRate": "60.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1493",
            "questionFrontendId": "1377",
            "title": "Frog Position After T Seconds",
            "titleSlug": "frog-position-after-t-seconds",
            "acRate": "35.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1499",
            "questionFrontendId": "1383",
            "title": "Maximum Performance of a Team",
            "titleSlug": "maximum-performance-of-a-team",
            "acRate": "47.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1501",
            "questionFrontendId": "1401",
            "title": "Circle and Rectangle Overlapping",
            "titleSlug": "circle-and-rectangle-overlapping",
            "acRate": "46.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1508",
            "questionFrontendId": "1392",
            "title": "Longest Happy Prefix",
            "titleSlug": "longest-happy-prefix",
            "acRate": "45.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1509",
            "questionFrontendId": "1378",
            "title": "Replace Employee ID With The Unique Identifier",
            "titleSlug": "replace-employee-id-with-the-unique-identifier",
            "acRate": "82.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1515",
            "questionFrontendId": "1414",
            "title": "Find the Minimum Number of Fibonacci Numbers Whose Sum Is K",
            "titleSlug": "find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k",
            "acRate": "65.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1522",
            "questionFrontendId": "1406",
            "title": "Stone Game III",
            "titleSlug": "stone-game-iii",
            "acRate": "64.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Game Theory",
                    "slug": "game-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1528",
            "questionFrontendId": "1431",
            "title": "Kids With the Greatest Number of Candies",
            "titleSlug": "kids-with-the-greatest-number-of-candies",
            "acRate": "87.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1537",
            "questionFrontendId": "1422",
            "title": "Maximum Score After Splitting a String",
            "titleSlug": "maximum-score-after-splitting-a-string",
            "acRate": "62.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1538",
            "questionFrontendId": "1423",
            "title": "Maximum Points You Can Obtain from Cards",
            "titleSlug": "maximum-points-you-can-obtain-from-cards",
            "acRate": "52.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1539",
            "questionFrontendId": "1424",
            "title": "Diagonal Traverse II",
            "titleSlug": "diagonal-traverse-ii",
            "acRate": "56.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1543",
            "questionFrontendId": "1447",
            "title": "Simplified Fractions",
            "titleSlug": "simplified-fractions",
            "acRate": "66.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1544",
            "questionFrontendId": "1448",
            "title": "Count Good Nodes in Binary Tree",
            "titleSlug": "count-good-nodes-in-binary-tree",
            "acRate": "73.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1545",
            "questionFrontendId": "1449",
            "title": "Form Largest Integer With Digits That Add up to Target",
            "titleSlug": "form-largest-integer-with-digits-that-add-up-to-target",
            "acRate": "48.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1549",
            "questionFrontendId": "1438",
            "title": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",
            "titleSlug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
            "acRate": "49.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1552",
            "questionFrontendId": "1441",
            "title": "Build an Array With Stack Operations",
            "titleSlug": "build-an-array-with-stack-operations",
            "acRate": "79.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1555",
            "questionFrontendId": "1444",
            "title": "Number of Ways of Cutting a Pizza",
            "titleSlug": "number-of-ways-of-cutting-a-pizza",
            "acRate": "62.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1557",
            "questionFrontendId": "1461",
            "title": "Check If a String Contains All Binary Codes of Size K",
            "titleSlug": "check-if-a-string-contains-all-binary-codes-of-size-k",
            "acRate": "56.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1559",
            "questionFrontendId": "1463",
            "title": "Cherry Pickup II",
            "titleSlug": "cherry-pickup-ii",
            "acRate": "71.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1562",
            "questionFrontendId": "1452",
            "title": "People Whose List of Favorite Companies Is Not a Subset of Another List",
            "titleSlug": "people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list",
            "acRate": "57.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1573",
            "questionFrontendId": "1477",
            "title": "Find Two Non-overlapping Sub-arrays Each With Target Sum",
            "titleSlug": "find-two-non-overlapping-sub-arrays-each-with-target-sum",
            "acRate": "36.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1580",
            "questionFrontendId": "1470",
            "title": "Shuffle the Array",
            "titleSlug": "shuffle-the-array",
            "acRate": "88.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1581",
            "questionFrontendId": "1471",
            "title": "The k Strongest Values in an Array",
            "titleSlug": "the-k-strongest-values-in-an-array",
            "acRate": "61.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1582",
            "questionFrontendId": "1472",
            "title": "Design Browser History",
            "titleSlug": "design-browser-history",
            "acRate": "77.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1583",
            "questionFrontendId": "1473",
            "title": "Paint House III",
            "titleSlug": "paint-house-iii",
            "acRate": "61.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1584",
            "questionFrontendId": "1491",
            "title": "Average Salary Excluding the Minimum and Maximum Salary",
            "titleSlug": "average-salary-excluding-the-minimum-and-maximum-salary",
            "acRate": "63.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1587",
            "questionFrontendId": "1494",
            "title": "Parallel Courses II",
            "titleSlug": "parallel-courses-ii",
            "acRate": "29.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1603",
            "questionFrontendId": "1480",
            "title": "Running Sum of 1d Array",
            "titleSlug": "running-sum-of-1d-array",
            "acRate": "86.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1605",
            "questionFrontendId": "1482",
            "title": "Minimum Number of Days to Make m Bouquets",
            "titleSlug": "minimum-number-of-days-to-make-m-bouquets",
            "acRate": "51.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1612",
            "questionFrontendId": "1488",
            "title": "Avoid Flood in The City",
            "titleSlug": "avoid-flood-in-the-city",
            "acRate": "27.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1615",
            "questionFrontendId": "1508",
            "title": "Range Sum of Sorted Subarray Sums",
            "titleSlug": "range-sum-of-sorted-subarray-sums",
            "acRate": "58.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1616",
            "questionFrontendId": "1509",
            "title": "Minimum Difference Between Largest and Smallest Value in Three Moves",
            "titleSlug": "minimum-difference-between-largest-and-smallest-value-in-three-moves",
            "acRate": "55.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1621",
            "questionFrontendId": "1498",
            "title": "Number of Subsequences That Satisfy the Given Sum Condition",
            "titleSlug": "number-of-subsequences-that-satisfy-the-given-sum-condition",
            "acRate": "43.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1622",
            "questionFrontendId": "1499",
            "title": "Max Value of Equation",
            "titleSlug": "max-value-of-equation",
            "acRate": "44.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1627",
            "questionFrontendId": "1503",
            "title": "Last Moment Before All Ants Fall Out of a Plank",
            "titleSlug": "last-moment-before-all-ants-fall-out-of-a-plank",
            "acRate": "68.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Brainteaser",
                    "slug": "brainteaser"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1628",
            "questionFrontendId": "1504",
            "title": "Count Submatrices With All Ones",
            "titleSlug": "count-submatrices-with-all-ones",
            "acRate": "57.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1630",
            "questionFrontendId": "1523",
            "title": "Count Odd Numbers in an Interval Range",
            "titleSlug": "count-odd-numbers-in-an-interval-range",
            "acRate": "49.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1632",
            "questionFrontendId": "1525",
            "title": "Number of Good Ways to Split a String",
            "titleSlug": "number-of-good-ways-to-split-a-string",
            "acRate": "68.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1633",
            "questionFrontendId": "1526",
            "title": "Minimum Number of Increments on Subarrays to Form a Target Array",
            "titleSlug": "minimum-number-of-increments-on-subarrays-to-form-a-target-array",
            "acRate": "69.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1635",
            "questionFrontendId": "1512",
            "title": "Number of Good Pairs",
            "titleSlug": "number-of-good-pairs",
            "acRate": "88.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1636",
            "questionFrontendId": "1513",
            "title": "Number of Substrings With Only 1s",
            "titleSlug": "number-of-substrings-with-only-1s",
            "acRate": "46.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1646",
            "questionFrontendId": "1539",
            "title": "Kth Missing Positive Number",
            "titleSlug": "kth-missing-positive-number",
            "acRate": "59.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1649",
            "questionFrontendId": "1546",
            "title": "Maximum Number of Non-Overlapping Subarrays With Sum Equals Target",
            "titleSlug": "maximum-number-of-non-overlapping-subarrays-with-sum-equals-target",
            "acRate": "47.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1650",
            "questionFrontendId": "1506",
            "title": "Find Root of N-Ary Tree",
            "titleSlug": "find-root-of-n-ary-tree",
            "acRate": "78.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1651",
            "questionFrontendId": "1528",
            "title": "Shuffle String",
            "titleSlug": "shuffle-string",
            "acRate": "84.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1653",
            "questionFrontendId": "1530",
            "title": "Number of Good Leaf Nodes Pairs",
            "titleSlug": "number-of-good-leaf-nodes-pairs",
            "acRate": "62.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1655",
            "questionFrontendId": "1516",
            "title": "Move Sub-Tree of N-Ary Tree",
            "titleSlug": "move-sub-tree-of-n-ary-tree",
            "acRate": "62.9%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1661",
            "questionFrontendId": "1557",
            "title": "Minimum Number of Vertices to Reach All Nodes",
            "titleSlug": "minimum-number-of-vertices-to-reach-all-nodes",
            "acRate": "81.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1666",
            "questionFrontendId": "1544",
            "title": "Make The String Great",
            "titleSlug": "make-the-string-great",
            "acRate": "63.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1669",
            "questionFrontendId": "1547",
            "title": "Minimum Cost to Cut a Stick",
            "titleSlug": "minimum-cost-to-cut-a-stick",
            "acRate": "61.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1676",
            "questionFrontendId": "1553",
            "title": "Minimum Number of Days to Eat N Oranges",
            "titleSlug": "minimum-number-of-days-to-eat-n-oranges",
            "acRate": "35.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1677",
            "questionFrontendId": "1572",
            "title": "Matrix Diagonal Sum",
            "titleSlug": "matrix-diagonal-sum",
            "acRate": "82.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1681",
            "questionFrontendId": "1538",
            "title": "Guess the Majority in a Hidden Array",
            "titleSlug": "guess-the-majority-in-a-hidden-array",
            "acRate": "70.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1684",
            "questionFrontendId": "1562",
            "title": "Find Latest Group of Size M",
            "titleSlug": "find-latest-group-of-size-m",
            "acRate": "42.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1687",
            "questionFrontendId": "1548",
            "title": "The Most Similar Path in a Graph",
            "titleSlug": "the-most-similar-path-in-a-graph",
            "acRate": "59.1%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1692",
            "questionFrontendId": "1569",
            "title": "Number of Ways to Reorder Array to Get Same BST",
            "titleSlug": "number-of-ways-to-reorder-array-to-get-same-bst",
            "acRate": "53.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1696",
            "questionFrontendId": "1591",
            "title": "Strange Printer II",
            "titleSlug": "strange-printer-ii",
            "acRate": "58.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1697",
            "questionFrontendId": "1554",
            "title": "Strings Differ by One Character",
            "titleSlug": "strings-differ-by-one-character",
            "acRate": "41.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1701",
            "questionFrontendId": "1579",
            "title": "Remove Max Number of Edges to Keep Graph Fully Traversable",
            "titleSlug": "remove-max-number-of-edges-to-keep-graph-fully-traversable",
            "acRate": "64.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1703",
            "questionFrontendId": "1564",
            "title": "Put Boxes Into the Warehouse I",
            "titleSlug": "put-boxes-into-the-warehouse-i",
            "acRate": "67.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1704",
            "questionFrontendId": "1582",
            "title": "Special Positions in a Binary Matrix",
            "titleSlug": "special-positions-in-a-binary-matrix",
            "acRate": "68.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1707",
            "questionFrontendId": "1585",
            "title": "Check If String Is Transformable With Substring Sort Operations",
            "titleSlug": "check-if-string-is-transformable-with-substring-sort-operations",
            "acRate": "48.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1710",
            "questionFrontendId": "1606",
            "title": "Find Servers That Handled Most Number of Requests",
            "titleSlug": "find-servers-that-handled-most-number-of-requests",
            "acRate": "43.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1711",
            "questionFrontendId": "1605",
            "title": "Find Valid Matrix Given Row and Column Sums",
            "titleSlug": "find-valid-matrix-given-row-and-column-sums",
            "acRate": "77.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1713",
            "questionFrontendId": "1570",
            "title": "Dot Product of Two Sparse Vectors",
            "titleSlug": "dot-product-of-two-sparse-vectors",
            "acRate": "89.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1714",
            "questionFrontendId": "1592",
            "title": "Rearrange Spaces Between Words",
            "titleSlug": "rearrange-spaces-between-words",
            "acRate": "43.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1715",
            "questionFrontendId": "1593",
            "title": "Split a String Into the Max Number of Unique Substrings",
            "titleSlug": "split-a-string-into-the-max-number-of-unique-substrings",
            "acRate": "56.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1716",
            "questionFrontendId": "1594",
            "title": "Maximum Non Negative Product in a Matrix",
            "titleSlug": "maximum-non-negative-product-in-a-matrix",
            "acRate": "33.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1717",
            "questionFrontendId": "1595",
            "title": "Minimum Cost to Connect Two Groups of Points",
            "titleSlug": "minimum-cost-to-connect-two-groups-of-points",
            "acRate": "47.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1719",
            "questionFrontendId": "1580",
            "title": "Put Boxes Into the Warehouse II",
            "titleSlug": "put-boxes-into-the-warehouse-ii",
            "acRate": "63.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1722",
            "questionFrontendId": "1600",
            "title": "Throne Inheritance",
            "titleSlug": "throne-inheritance",
            "acRate": "64.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1723",
            "questionFrontendId": "1601",
            "title": "Maximum Number of Achievable Transfer Requests",
            "titleSlug": "maximum-number-of-achievable-transfer-requests",
            "acRate": "64.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1727",
            "questionFrontendId": "1728",
            "title": "Cat and Mouse II",
            "titleSlug": "cat-and-mouse-ii",
            "acRate": "39.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Game Theory",
                    "slug": "game-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1728",
            "questionFrontendId": "1622",
            "title": "Fancy Sequence",
            "titleSlug": "fancy-sequence",
            "acRate": "17.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1730",
            "questionFrontendId": "1608",
            "title": "Special Array With X Elements Greater Than or Equal X",
            "titleSlug": "special-array-with-x-elements-greater-than-or-equal-x",
            "acRate": "60.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1733",
            "questionFrontendId": "1610",
            "title": "Maximum Number of Visible Points",
            "titleSlug": "maximum-number-of-visible-points",
            "acRate": "37.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1736",
            "questionFrontendId": "1597",
            "title": "Build Binary Expression Tree From Infix Expression",
            "titleSlug": "build-binary-expression-tree-from-infix-expression",
            "acRate": "62.6%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1739",
            "questionFrontendId": "1616",
            "title": "Split Two Strings to Make Palindrome",
            "titleSlug": "split-two-strings-to-make-palindrome",
            "acRate": "31.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1744",
            "questionFrontendId": "1639",
            "title": "Number of Ways to Form a Target String Given a Dictionary",
            "titleSlug": "number-of-ways-to-form-a-target-string-given-a-dictionary",
            "acRate": "51.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1745",
            "questionFrontendId": "1602",
            "title": "Find Nearest Right Node in Binary Tree",
            "titleSlug": "find-nearest-right-node-in-binary-tree",
            "acRate": "75.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1750",
            "questionFrontendId": "1612",
            "title": "Check If Two Expression Trees are Equivalent",
            "titleSlug": "check-if-two-expression-trees-are-equivalent",
            "acRate": "70.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1752",
            "questionFrontendId": "1630",
            "title": "Arithmetic Subarrays",
            "titleSlug": "arithmetic-subarrays",
            "acRate": "83.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1753",
            "questionFrontendId": "1631",
            "title": "Path With Minimum Effort",
            "titleSlug": "path-with-minimum-effort",
            "acRate": "59.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1758",
            "questionFrontendId": "1655",
            "title": "Distribute Repeating Integers",
            "titleSlug": "distribute-repeating-integers",
            "acRate": "39.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1762",
            "questionFrontendId": "1642",
            "title": "Furthest Building You Can Reach",
            "titleSlug": "furthest-building-you-can-reach",
            "acRate": "49.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1765",
            "questionFrontendId": "1669",
            "title": "Merge In Between Linked Lists",
            "titleSlug": "merge-in-between-linked-lists",
            "acRate": "72.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1768",
            "questionFrontendId": "1628",
            "title": "Design an Expression Tree With Evaluate Function",
            "titleSlug": "design-an-expression-tree-with-evaluate-function",
            "acRate": "82.7%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1770",
            "questionFrontendId": "1647",
            "title": "Minimum Deletions to Make Character Frequencies Unique",
            "titleSlug": "minimum-deletions-to-make-character-frequencies-unique",
            "acRate": "61.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1776",
            "questionFrontendId": "1658",
            "title": "Minimum Operations to Reduce X to Zero",
            "titleSlug": "minimum-operations-to-reduce-x-to-zero",
            "acRate": "39.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1777",
            "questionFrontendId": "1657",
            "title": "Determine if Two Strings Are Close",
            "titleSlug": "determine-if-two-strings-are-close",
            "acRate": "55.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1791",
            "questionFrontendId": "1672",
            "title": "Richest Customer Wealth",
            "titleSlug": "richest-customer-wealth",
            "acRate": "87.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1792",
            "questionFrontendId": "1673",
            "title": "Find the Most Competitive Subsequence",
            "titleSlug": "find-the-most-competitive-subsequence",
            "acRate": "50.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1796",
            "questionFrontendId": "1660",
            "title": "Correct a Binary Tree",
            "titleSlug": "correct-a-binary-tree",
            "acRate": "74.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1798",
            "questionFrontendId": "1679",
            "title": "Max Number of K-Sum Pairs",
            "titleSlug": "max-number-of-k-sum-pairs",
            "acRate": "55.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1805",
            "questionFrontendId": "1703",
            "title": "Minimum Adjacent Swaps for K Consecutive Ones",
            "titleSlug": "minimum-adjacent-swaps-for-k-consecutive-ones",
            "acRate": "42.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1810",
            "questionFrontendId": "1666",
            "title": "Change the Root of a Binary Tree",
            "titleSlug": "change-the-root-of-a-binary-tree",
            "acRate": "73.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1814",
            "questionFrontendId": "1696",
            "title": "Jump Game VI",
            "titleSlug": "jump-game-vi",
            "acRate": "45.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1815",
            "questionFrontendId": "1697",
            "title": "Checking Existence of Edge Length Limited Paths",
            "titleSlug": "checking-existence-of-edge-length-limited-paths",
            "acRate": "62.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1818",
            "questionFrontendId": "1717",
            "title": "Maximum Score From Removing Substrings",
            "titleSlug": "maximum-score-from-removing-substrings",
            "acRate": "46.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1826",
            "questionFrontendId": "1707",
            "title": "Maximum XOR With an Element From Array",
            "titleSlug": "maximum-xor-with-an-element-from-array",
            "acRate": "49.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1828",
            "questionFrontendId": "1692",
            "title": "Count Ways to Distribute Candies",
            "titleSlug": "count-ways-to-distribute-candies",
            "acRate": "63.1%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1829",
            "questionFrontendId": "1710",
            "title": "Maximum Units on a Truck",
            "titleSlug": "maximum-units-on-a-truck",
            "acRate": "73.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1832",
            "questionFrontendId": "1713",
            "title": "Minimum Operations to Make a Subsequence",
            "titleSlug": "minimum-operations-to-make-a-subsequence",
            "acRate": "48.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1839",
            "questionFrontendId": "1720",
            "title": "Decode XORed Array",
            "titleSlug": "decode-xored-array",
            "acRate": "86.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1840",
            "questionFrontendId": "1722",
            "title": "Minimize Hamming Distance After Swap Operations",
            "titleSlug": "minimize-hamming-distance-after-swap-operations",
            "acRate": "48.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1845",
            "questionFrontendId": "1727",
            "title": "Largest Submatrix With Rearrangements",
            "titleSlug": "largest-submatrix-with-rearrangements",
            "acRate": "75.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1847",
            "questionFrontendId": "1708",
            "title": "Largest Subarray Length K",
            "titleSlug": "largest-subarray-length-k",
            "acRate": "64.4%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1858",
            "questionFrontendId": "1736",
            "title": "Latest Time by Replacing Hidden Digits",
            "titleSlug": "latest-time-by-replacing-hidden-digits",
            "acRate": "42.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1859",
            "questionFrontendId": "1737",
            "title": "Change Minimum Characters to Satisfy One of Three Conditions",
            "titleSlug": "change-minimum-characters-to-satisfy-one-of-three-conditions",
            "acRate": "36.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1860",
            "questionFrontendId": "1738",
            "title": "Find Kth Largest XOR Coordinate Value",
            "titleSlug": "find-kth-largest-xor-coordinate-value",
            "acRate": "61.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                },
                {
                    "name": "Quickselect",
                    "slug": "quickselect"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1865",
            "questionFrontendId": "1724",
            "title": "Checking Existence of Edge Length Limited Paths II",
            "titleSlug": "checking-existence-of-edge-length-limited-paths-ii",
            "acRate": "52.0%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Minimum Spanning Tree",
                    "slug": "minimum-spanning-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1875",
            "questionFrontendId": "1766",
            "title": "Tree of Coprimes",
            "titleSlug": "tree-of-coprimes",
            "acRate": "40.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1876",
            "questionFrontendId": "1765",
            "title": "Map of Highest Peak",
            "titleSlug": "map-of-highest-peak",
            "acRate": "61.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1878",
            "questionFrontendId": "1752",
            "title": "Check if Array Is Sorted and Rotated",
            "titleSlug": "check-if-array-is-sorted-and-rotated",
            "acRate": "50.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1879",
            "questionFrontendId": "1753",
            "title": "Maximum Score From Removing Stones",
            "titleSlug": "maximum-score-from-removing-stones",
            "acRate": "67.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1883",
            "questionFrontendId": "1740",
            "title": "Find Distance in a Binary Tree",
            "titleSlug": "find-distance-in-a-binary-tree",
            "acRate": "70.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1890",
            "questionFrontendId": "1781",
            "title": "Sum of Beauty of All Substrings",
            "titleSlug": "sum-of-beauty-of-all-substrings",
            "acRate": "64.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1894",
            "questionFrontendId": "1768",
            "title": "Merge Strings Alternately",
            "titleSlug": "merge-strings-alternately",
            "acRate": "79.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1895",
            "questionFrontendId": "1769",
            "title": "Minimum Number of Operations to Move All Balls to Each Box",
            "titleSlug": "minimum-number-of-operations-to-move-all-balls-to-each-box",
            "acRate": "85.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1896",
            "questionFrontendId": "1770",
            "title": "Maximum Score from Performing Multiplication Operations",
            "titleSlug": "maximum-score-from-performing-multiplication-operations",
            "acRate": "39.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1900",
            "questionFrontendId": "1774",
            "title": "Closest Dessert Cost",
            "titleSlug": "closest-dessert-cost",
            "acRate": "47.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1902",
            "questionFrontendId": "1776",
            "title": "Car Fleet II",
            "titleSlug": "car-fleet-ii",
            "acRate": "54.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1903",
            "questionFrontendId": "1756",
            "title": "Design Most Recently Used Queue",
            "titleSlug": "design-most-recently-used-queue",
            "acRate": "76.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "1907",
            "questionFrontendId": "1803",
            "title": "Count Pairs With XOR in a Range",
            "titleSlug": "count-pairs-with-xor-in-a-range",
            "acRate": "48.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1908",
            "questionFrontendId": "1757",
            "title": "Recyclable and Low Fat Products",
            "titleSlug": "recyclable-and-low-fat-products",
            "acRate": "89.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1912",
            "questionFrontendId": "1786",
            "title": "Number of Restricted Paths From First to Last Node",
            "titleSlug": "number-of-restricted-paths-from-first-to-last-node",
            "acRate": "38.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1914",
            "questionFrontendId": "1767",
            "title": "Find the Subtasks That Did Not Execute",
            "titleSlug": "find-the-subtasks-that-did-not-execute",
            "acRate": "77.3%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1918",
            "questionFrontendId": "1793",
            "title": "Maximum Score of a Good Subarray",
            "titleSlug": "maximum-score-of-a-good-subarray",
            "acRate": "64.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1923",
            "questionFrontendId": "1813",
            "title": "Sentence Similarity III",
            "titleSlug": "sentence-similarity-iii",
            "acRate": "33.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1924",
            "questionFrontendId": "1815",
            "title": "Maximum Number of Groups Getting Fresh Donuts",
            "titleSlug": "maximum-number-of-groups-getting-fresh-donuts",
            "acRate": "40.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1934",
            "questionFrontendId": "1807",
            "title": "Evaluate the Bracket Pairs of a String",
            "titleSlug": "evaluate-the-bracket-pairs-of-a-string",
            "acRate": "66.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1935",
            "questionFrontendId": "1806",
            "title": "Minimum Number of Operations to Reinitialize a Permutation",
            "titleSlug": "minimum-number-of-operations-to-reinitialize-a-permutation",
            "acRate": "72.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1939",
            "questionFrontendId": "1828",
            "title": "Queries on Number of Points Inside a Circle",
            "titleSlug": "queries-on-number-of-points-inside-a-circle",
            "acRate": "86.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1943",
            "questionFrontendId": "1794",
            "title": "Count Pairs of Equal Substrings With Minimum Difference",
            "titleSlug": "count-pairs-of-equal-substrings-with-minimum-difference",
            "acRate": "65.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1949",
            "questionFrontendId": "1804",
            "title": "Implement Trie II (Prefix Tree)",
            "titleSlug": "implement-trie-ii-prefix-tree",
            "acRate": "61.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1950",
            "questionFrontendId": "1822",
            "title": "Sign of the Product of an Array",
            "titleSlug": "sign-of-the-product-of-an-array",
            "acRate": "65.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1951",
            "questionFrontendId": "1823",
            "title": "Find the Winner of the Circular Game",
            "titleSlug": "find-the-winner-of-the-circular-game",
            "acRate": "78.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1953",
            "questionFrontendId": "1825",
            "title": "Finding MK Average",
            "titleSlug": "finding-mk-average",
            "acRate": "36.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1954",
            "questionFrontendId": "1844",
            "title": "Replace All Digits with Characters",
            "titleSlug": "replace-all-digits-with-characters",
            "acRate": "80.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1959",
            "questionFrontendId": "1810",
            "title": "Minimum Path Cost in a Hidden Grid",
            "titleSlug": "minimum-path-cost-in-a-hidden-grid",
            "acRate": "55.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1960",
            "questionFrontendId": "1832",
            "title": "Check if the Sentence Is Pangram",
            "titleSlug": "check-if-the-sentence-is-pangram",
            "acRate": "83.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1962",
            "questionFrontendId": "1834",
            "title": "Single-Threaded CPU",
            "titleSlug": "single-threaded-cpu",
            "acRate": "45.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1966",
            "questionFrontendId": "1838",
            "title": "Frequency of the Most Frequent Element",
            "titleSlug": "frequency-of-the-most-frequent-element",
            "acRate": "45.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1969",
            "questionFrontendId": "1820",
            "title": "Maximum Number of Accepted Invitations",
            "titleSlug": "maximum-number-of-accepted-invitations",
            "acRate": "49.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1974",
            "questionFrontendId": "1821",
            "title": "Find Customers With Positive Revenue this Year",
            "titleSlug": "find-customers-with-positive-revenue-this-year",
            "acRate": "88.1%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1977",
            "questionFrontendId": "1851",
            "title": "Minimum Interval to Include Each Query",
            "titleSlug": "minimum-interval-to-include-each-query",
            "acRate": "49.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Line Sweep",
                    "slug": "line-sweep"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1978",
            "questionFrontendId": "1850",
            "title": "Minimum Adjacent Swaps to Reach the Kth Smallest Number",
            "titleSlug": "minimum-adjacent-swaps-to-reach-the-kth-smallest-number",
            "acRate": "71.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1983",
            "questionFrontendId": "1854",
            "title": "Maximum Population Year",
            "titleSlug": "maximum-population-year",
            "acRate": "60.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "1986",
            "questionFrontendId": "1857",
            "title": "Largest Color Value in a Directed Graph",
            "titleSlug": "largest-color-value-in-a-directed-graph",
            "acRate": "50.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "1996",
            "questionFrontendId": "1866",
            "title": "Number of Ways to Rearrange Sticks With K Sticks Visible",
            "titleSlug": "number-of-ways-to-rearrange-sticks-with-k-sticks-visible",
            "acRate": "56.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2000",
            "questionFrontendId": "1870",
            "title": "Minimum Speed to Arrive on Time",
            "titleSlug": "minimum-speed-to-arrive-on-time",
            "acRate": "46.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2001",
            "questionFrontendId": "1871",
            "title": "Jump Game VII",
            "titleSlug": "jump-game-vii",
            "acRate": "24.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2008",
            "questionFrontendId": "1896",
            "title": "Minimum Cost to Change the Final Value of Expression",
            "titleSlug": "minimum-cost-to-change-the-final-value-of-expression",
            "acRate": "54.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2009",
            "questionFrontendId": "1858",
            "title": "Longest Word With All Prefixes",
            "titleSlug": "longest-word-with-all-prefixes",
            "acRate": "68.2%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2012",
            "questionFrontendId": "1882",
            "title": "Process Tasks Using Servers",
            "titleSlug": "process-tasks-using-servers",
            "acRate": "39.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2013",
            "questionFrontendId": "1883",
            "title": "Minimum Skips to Arrive at Meeting On Time",
            "titleSlug": "minimum-skips-to-arrive-at-meeting-on-time",
            "acRate": "37.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2017",
            "questionFrontendId": "1888",
            "title": "Minimum Number of Flips to Make the Binary String Alternating",
            "titleSlug": "minimum-number-of-flips-to-make-the-binary-string-alternating",
            "acRate": "39.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2018",
            "questionFrontendId": "1889",
            "title": "Minimum Space Wasted From Packaging",
            "titleSlug": "minimum-space-wasted-from-packaging",
            "acRate": "31.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2026",
            "questionFrontendId": "1899",
            "title": "Merge Triplets to Form Target Triplet",
            "titleSlug": "merge-triplets-to-form-target-triplet",
            "acRate": "65.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2028",
            "questionFrontendId": "1900",
            "title": "The Earliest and Latest Rounds Where Players Compete",
            "titleSlug": "the-earliest-and-latest-rounds-where-players-compete",
            "acRate": "50.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2029",
            "questionFrontendId": "1874",
            "title": "Minimize Product Sum of Two Arrays",
            "titleSlug": "minimize-product-sum-of-two-arrays",
            "acRate": "89.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2034",
            "questionFrontendId": "1906",
            "title": "Minimum Absolute Difference Queries",
            "titleSlug": "minimum-absolute-difference-queries",
            "acRate": "44.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2036",
            "questionFrontendId": "1885",
            "title": "Count Pairs in Two Arrays",
            "titleSlug": "count-pairs-in-two-arrays",
            "acRate": "59.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2038",
            "questionFrontendId": "1926",
            "title": "Nearest Exit from Entrance in Maze",
            "titleSlug": "nearest-exit-from-entrance-in-maze",
            "acRate": "46.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2044",
            "questionFrontendId": "1915",
            "title": "Number of Wonderful Substrings",
            "titleSlug": "number-of-wonderful-substrings",
            "acRate": "46.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2045",
            "questionFrontendId": "1891",
            "title": "Cutting Ribbons",
            "titleSlug": "cutting-ribbons",
            "acRate": "49.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2047",
            "questionFrontendId": "1901",
            "title": "Find a Peak Element II",
            "titleSlug": "find-a-peak-element-ii",
            "acRate": "50.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2048",
            "questionFrontendId": "1920",
            "title": "Build Array from Permutation",
            "titleSlug": "build-array-from-permutation",
            "acRate": "89.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2049",
            "questionFrontendId": "1921",
            "title": "Eliminate Maximum Number of Monsters",
            "titleSlug": "eliminate-maximum-number-of-monsters",
            "acRate": "51.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2050",
            "questionFrontendId": "1922",
            "title": "Count Good Numbers",
            "titleSlug": "count-good-numbers",
            "acRate": "43.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2055",
            "questionFrontendId": "1943",
            "title": "Describe the Painting",
            "titleSlug": "describe-the-painting",
            "acRate": "49.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2058",
            "questionFrontendId": "1929",
            "title": "Concatenation of Array",
            "titleSlug": "concatenation-of-array",
            "acRate": "89.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2059",
            "questionFrontendId": "1930",
            "title": "Unique Length-3 Palindromic Subsequences",
            "titleSlug": "unique-length-3-palindromic-subsequences",
            "acRate": "66.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2061",
            "questionFrontendId": "1931",
            "title": "Painting a Grid With Three Different Colors",
            "titleSlug": "painting-a-grid-with-three-different-colors",
            "acRate": "57.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2067",
            "questionFrontendId": "1937",
            "title": "Maximum Number of Points with Cost",
            "titleSlug": "maximum-number-of-points-with-cost",
            "acRate": "35.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2069",
            "questionFrontendId": "1918",
            "title": "Kth Smallest Subarray Sum",
            "titleSlug": "kth-smallest-subarray-sum",
            "acRate": "52.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2071",
            "questionFrontendId": "1940",
            "title": "Longest Common Subsequence Between Sorted Arrays",
            "titleSlug": "longest-common-subsequence-between-sorted-arrays",
            "acRate": "78.5%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2074",
            "questionFrontendId": "1924",
            "title": "Erect the Fence II",
            "titleSlug": "erect-the-fence-ii",
            "acRate": "51.7%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2079",
            "questionFrontendId": "1948",
            "title": "Delete Duplicate Folders in System",
            "titleSlug": "delete-duplicate-folders-in-system",
            "acRate": "56.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2101",
            "questionFrontendId": "1970",
            "title": "Last Day Where You Can Still Cross",
            "titleSlug": "last-day-where-you-can-still-cross",
            "acRate": "62.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2104",
            "questionFrontendId": "1993",
            "title": "Operations on Tree",
            "titleSlug": "operations-on-tree",
            "acRate": "45.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2107",
            "questionFrontendId": "1980",
            "title": "Find Unique Binary String",
            "titleSlug": "find-unique-binary-string",
            "acRate": "74.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2111",
            "questionFrontendId": "1966",
            "title": "Binary Searchable Numbers in an Unsorted Array",
            "titleSlug": "binary-searchable-numbers-in-an-unsorted-array",
            "acRate": "65.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "2114",
            "questionFrontendId": "1986",
            "title": "Minimum Number of Work Sessions to Finish the Tasks",
            "titleSlug": "minimum-number-of-work-sessions-to-finish-the-tasks",
            "acRate": "33.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2115",
            "questionFrontendId": "1987",
            "title": "Number of Unique Good Subsequences",
            "titleSlug": "number-of-unique-good-subsequences",
            "acRate": "52.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2117",
            "questionFrontendId": "2007",
            "title": "Find Original Array From Doubled Array",
            "titleSlug": "find-original-array-from-doubled-array",
            "acRate": "40.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2121",
            "questionFrontendId": "1971",
            "title": "Find if Path Exists in Graph",
            "titleSlug": "find-if-path-exists-in-graph",
            "acRate": "51.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2123",
            "questionFrontendId": "1996",
            "title": "The Number of Weak Characters in the Game",
            "titleSlug": "the-number-of-weak-characters-in-the-game",
            "acRate": "43.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2132",
            "questionFrontendId": "2022",
            "title": "Convert 1D Array Into 2D Array",
            "titleSlug": "convert-1d-array-into-2d-array",
            "acRate": "60.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2135",
            "questionFrontendId": "2025",
            "title": "Maximum Number of Ways to Partition an Array",
            "titleSlug": "maximum-number-of-ways-to-partition-an-array",
            "acRate": "33.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2139",
            "questionFrontendId": "2013",
            "title": "Detect Squares",
            "titleSlug": "detect-squares",
            "acRate": "50.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2146",
            "questionFrontendId": "2018",
            "title": "Check if Word Can Be Placed In Crossword",
            "titleSlug": "check-if-word-can-be-placed-in-crossword",
            "acRate": "49.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2161",
            "questionFrontendId": "2034",
            "title": "Stock Price Fluctuation ",
            "titleSlug": "stock-price-fluctuation",
            "acRate": "48.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Data Stream",
                    "slug": "data-stream"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "2162",
            "questionFrontendId": "2035",
            "title": "Partition Array Into Two Arrays to Minimize Sum Difference",
            "titleSlug": "partition-array-into-two-arrays-to-minimize-sum-difference",
            "acRate": "20.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2176",
            "questionFrontendId": "2050",
            "title": "Parallel Courses III",
            "titleSlug": "parallel-courses-iii",
            "acRate": "67.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2181",
            "questionFrontendId": "2057",
            "title": "Smallest Index With Equal Value",
            "titleSlug": "smallest-index-with-equal-value",
            "acRate": "72.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2183",
            "questionFrontendId": "2059",
            "title": "Minimum Operations to Convert Number",
            "titleSlug": "minimum-operations-to-convert-number",
            "acRate": "48.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2193",
            "questionFrontendId": "2088",
            "title": "Count Fertile Pyramids in a Land",
            "titleSlug": "count-fertile-pyramids-in-a-land",
            "acRate": "64.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2198",
            "questionFrontendId": "2076",
            "title": "Process Restricted Friend Requests",
            "titleSlug": "process-restricted-friend-requests",
            "acRate": "54.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2200",
            "questionFrontendId": "2132",
            "title": "Stamping the Grid",
            "titleSlug": "stamping-the-grid",
            "acRate": "32.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2206",
            "questionFrontendId": "2101",
            "title": "Detonate the Maximum Bombs",
            "titleSlug": "detonate-the-maximum-bombs",
            "acRate": "48.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2210",
            "questionFrontendId": "2089",
            "title": "Find Target Indices After Sorting Array",
            "titleSlug": "find-target-indices-after-sorting-array",
            "acRate": "76.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2212",
            "questionFrontendId": "2091",
            "title": "Removing Minimum and Maximum From Array",
            "titleSlug": "removing-minimum-and-maximum-from-array",
            "acRate": "54.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2213",
            "questionFrontendId": "2092",
            "title": "Find All People With Secret",
            "titleSlug": "find-all-people-with-secret",
            "acRate": "46.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2217",
            "questionFrontendId": "2096",
            "title": "Step-By-Step Directions From a Binary Tree Node to Another",
            "titleSlug": "step-by-step-directions-from-a-binary-tree-node-to-another",
            "acRate": "48.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2218",
            "questionFrontendId": "2077",
            "title": "Paths in Maze That Lead to Same Room",
            "titleSlug": "paths-in-maze-that-lead-to-same-room",
            "acRate": "54.9%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2219",
            "questionFrontendId": "2114",
            "title": "Maximum Number of Words Found in Sentences",
            "titleSlug": "maximum-number-of-words-found-in-sentences",
            "acRate": "86.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2220",
            "questionFrontendId": "2115",
            "title": "Find All Possible Recipes from Given Supplies",
            "titleSlug": "find-all-possible-recipes-from-given-supplies",
            "acRate": "49.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2221",
            "questionFrontendId": "2116",
            "title": "Check if a Parentheses String Can Be Valid",
            "titleSlug": "check-if-a-parentheses-string-can-be-valid",
            "acRate": "31.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2226",
            "questionFrontendId": "2103",
            "title": "Rings and Rods",
            "titleSlug": "rings-and-rods",
            "acRate": "80.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2228",
            "questionFrontendId": "2105",
            "title": "Watering Plants II",
            "titleSlug": "watering-plants-ii",
            "acRate": "48.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2237",
            "questionFrontendId": "2131",
            "title": "Longest Palindrome by Concatenating Two Letter Words",
            "titleSlug": "longest-palindrome-by-concatenating-two-letter-words",
            "acRate": "48.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2241",
            "questionFrontendId": "2122",
            "title": "Recover the Original Array",
            "titleSlug": "recover-the-original-array",
            "acRate": "38.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2245",
            "questionFrontendId": "2126",
            "title": "Destroying Asteroids",
            "titleSlug": "destroying-asteroids",
            "acRate": "51.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2246",
            "questionFrontendId": "2127",
            "title": "Maximum Employees to Be Invited to a Meeting",
            "titleSlug": "maximum-employees-to-be-invited-to-a-meeting",
            "acRate": "36.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2256",
            "questionFrontendId": "2135",
            "title": "Count Words Obtained After Adding a Letter",
            "titleSlug": "count-words-obtained-after-adding-a-letter",
            "acRate": "42.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2261",
            "questionFrontendId": "2155",
            "title": "All Divisions With the Highest Score of a Binary Array",
            "titleSlug": "all-divisions-with-the-highest-score-of-a-binary-array",
            "acRate": "63.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2264",
            "questionFrontendId": "2160",
            "title": "Minimum Sum of Four Digit Number After Splitting Digits",
            "titleSlug": "minimum-sum-of-four-digit-number-after-splitting-digits",
            "acRate": "86.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2265",
            "questionFrontendId": "2161",
            "title": "Partition Array According to Given Pivot",
            "titleSlug": "partition-array-according-to-given-pivot",
            "acRate": "84.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2266",
            "questionFrontendId": "2162",
            "title": "Minimum Cost to Set Cooking Time",
            "titleSlug": "minimum-cost-to-set-cooking-time",
            "acRate": "40.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2268",
            "questionFrontendId": "2128",
            "title": "Remove All Ones With Row and Column Flips",
            "titleSlug": "remove-all-ones-with-row-and-column-flips",
            "acRate": "76.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2270",
            "questionFrontendId": "2150",
            "title": "Find All Lonely Numbers in the Array",
            "titleSlug": "find-all-lonely-numbers-in-the-array",
            "acRate": "60.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2279",
            "questionFrontendId": "2178",
            "title": "Maximum Split of Positive Even Integers",
            "titleSlug": "maximum-split-of-positive-even-integers",
            "acRate": "59.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2286",
            "questionFrontendId": "2167",
            "title": "Minimum Time to Remove All Cars Containing Illegal Goods",
            "titleSlug": "minimum-time-to-remove-all-cars-containing-illegal-goods",
            "acRate": "41.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2290",
            "questionFrontendId": "2171",
            "title": "Removing Minimum Number of Magic Beans",
            "titleSlug": "removing-minimum-number-of-magic-beans",
            "acRate": "42.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2291",
            "questionFrontendId": "2172",
            "title": "Maximum AND Sum of Array",
            "titleSlug": "maximum-and-sum-of-array",
            "acRate": "48.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2292",
            "questionFrontendId": "2185",
            "title": "Counting Words With a Given Prefix",
            "titleSlug": "counting-words-with-a-given-prefix",
            "acRate": "77.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2294",
            "questionFrontendId": "2187",
            "title": "Minimum Time to Complete Trips",
            "titleSlug": "minimum-time-to-complete-trips",
            "acRate": "38.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2295",
            "questionFrontendId": "2188",
            "title": "Minimum Time to Finish the Race",
            "titleSlug": "minimum-time-to-finish-the-race",
            "acRate": "41.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2297",
            "questionFrontendId": "2158",
            "title": "Amount of New Area Painted Each Day",
            "titleSlug": "amount-of-new-area-painted-each-day",
            "acRate": "55.1%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2306",
            "questionFrontendId": "2196",
            "title": "Create Binary Tree From Descriptions",
            "titleSlug": "create-binary-tree-from-descriptions",
            "acRate": "72.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2311",
            "questionFrontendId": "2209",
            "title": "Minimum White Tiles After Covering With Carpets",
            "titleSlug": "minimum-white-tiles-after-covering-with-carpets",
            "acRate": "35.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2312",
            "questionFrontendId": "2190",
            "title": "Most Frequent Number Following Key In an Array",
            "titleSlug": "most-frequent-number-following-key-in-an-array",
            "acRate": "58.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2314",
            "questionFrontendId": "2174",
            "title": "Remove All Ones With Row and Column Flips II",
            "titleSlug": "remove-all-ones-with-row-and-column-flips-ii",
            "acRate": "68.1%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2320",
            "questionFrontendId": "2200",
            "title": "Find All K-Distant Indices in an Array",
            "titleSlug": "find-all-k-distant-indices-in-an-array",
            "acRate": "65.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2321",
            "questionFrontendId": "2203",
            "title": "Minimum Weighted Subgraph With the Required Paths",
            "titleSlug": "minimum-weighted-subgraph-with-the-required-paths",
            "acRate": "36.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2322",
            "questionFrontendId": "2184",
            "title": "Number of Ways to Build Sturdy Brick Wall",
            "titleSlug": "number-of-ways-to-build-sturdy-brick-wall",
            "acRate": "50.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2332",
            "questionFrontendId": "2249",
            "title": "Count Lattice Points Inside a Circle",
            "titleSlug": "count-lattice-points-inside-a-circle",
            "acRate": "51.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2333",
            "questionFrontendId": "2250",
            "title": "Count Number of Rectangles Containing Each Point",
            "titleSlug": "count-number-of-rectangles-containing-each-point",
            "acRate": "34.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2334",
            "questionFrontendId": "2251",
            "title": "Number of Flowers in Full Bloom",
            "titleSlug": "number-of-flowers-in-full-bloom",
            "acRate": "56.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2338",
            "questionFrontendId": "2260",
            "title": "Minimum Consecutive Cards to Pick Up",
            "titleSlug": "minimum-consecutive-cards-to-pick-up",
            "acRate": "51.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2341",
            "questionFrontendId": "2255",
            "title": "Count Prefixes of a Given String",
            "titleSlug": "count-prefixes-of-a-given-string",
            "acRate": "72.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2344",
            "questionFrontendId": "2258",
            "title": "Escape the Spreading Fire",
            "titleSlug": "escape-the-spreading-fire",
            "acRate": "34.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2345",
            "questionFrontendId": "2224",
            "title": "Minimum Number of Operations to Convert Time",
            "titleSlug": "minimum-number-of-operations-to-convert-time",
            "acRate": "65.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2347",
            "questionFrontendId": "2265",
            "title": "Count Nodes Equal to Average of Subtree",
            "titleSlug": "count-nodes-equal-to-average-of-subtree",
            "acRate": "86.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2349",
            "questionFrontendId": "2267",
            "title": " Check if There Is a Valid Parentheses String Path",
            "titleSlug": "check-if-there-is-a-valid-parentheses-string-path",
            "acRate": "38.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2350",
            "questionFrontendId": "2239",
            "title": "Find Closest Number to Zero",
            "titleSlug": "find-closest-number-to-zero",
            "acRate": "44.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2352",
            "questionFrontendId": "2241",
            "title": "Design an ATM Machine",
            "titleSlug": "design-an-atm-machine",
            "acRate": "40.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Design",
                    "slug": "design"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2353",
            "questionFrontendId": "2242",
            "title": "Maximum Score of a Node Sequence",
            "titleSlug": "maximum-score-of-a-node-sequence",
            "acRate": "38.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2357",
            "questionFrontendId": "2276",
            "title": "Count Integers in Intervals",
            "titleSlug": "count-integers-in-intervals",
            "acRate": "34.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2359",
            "questionFrontendId": "2271",
            "title": "Maximum White Tiles Covered by a Carpet",
            "titleSlug": "maximum-white-tiles-covered-by-a-carpet",
            "acRate": "33.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2367",
            "questionFrontendId": "2280",
            "title": "Minimum Lines to Represent a Line Chart",
            "titleSlug": "minimum-lines-to-represent-a-line-chart",
            "acRate": "25.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2375",
            "questionFrontendId": "2290",
            "title": "Minimum Obstacle Removal to Reach Corner",
            "titleSlug": "minimum-obstacle-removal-to-reach-corner",
            "acRate": "52.3%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Shortest Path",
                    "slug": "shortest-path"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2377",
            "questionFrontendId": "2283",
            "title": "Check if Number Has Equal Digit Count and Digit Value",
            "titleSlug": "check-if-number-has-equal-digit-count-and-digit-value",
            "acRate": "72.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2378",
            "questionFrontendId": "2284",
            "title": "Sender With Largest Word Count",
            "titleSlug": "sender-with-largest-word-count",
            "acRate": "56.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2380",
            "questionFrontendId": "2286",
            "title": "Booking Concert Tickets in Groups",
            "titleSlug": "booking-concert-tickets-in-groups",
            "acRate": "16.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2383",
            "questionFrontendId": "2235",
            "title": "Add Two Integers",
            "titleSlug": "add-two-integers",
            "acRate": "87.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2385",
            "questionFrontendId": "2237",
            "title": "Count Positions on Street With Required Brightness",
            "titleSlug": "count-positions-on-street-with-required-brightness",
            "acRate": "63.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2389",
            "questionFrontendId": "2296",
            "title": "Design a Text Editor",
            "titleSlug": "design-a-text-editor",
            "acRate": "43.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                },
                {
                    "name": "Doubly-Linked List",
                    "slug": "doubly-linked-list"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2394",
            "questionFrontendId": "2302",
            "title": "Count Subarrays With Score Less Than K",
            "titleSlug": "count-subarrays-with-score-less-than-k",
            "acRate": "53.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2395",
            "questionFrontendId": "2311",
            "title": "Longest Binary Subsequence Less Than or Equal to K",
            "titleSlug": "longest-binary-subsequence-less-than-or-equal-to-k",
            "acRate": "37.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2396",
            "questionFrontendId": "2254",
            "title": "Design Video Sharing Platform",
            "titleSlug": "design-video-sharing-platform",
            "acRate": "64.1%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2399",
            "questionFrontendId": "2313",
            "title": "Minimum Flips in Binary Tree to Get Result",
            "titleSlug": "minimum-flips-in-binary-tree-to-get-result",
            "acRate": "59.2%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2401",
            "questionFrontendId": "2315",
            "title": "Count Asterisks",
            "titleSlug": "count-asterisks",
            "acRate": "82.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2403",
            "questionFrontendId": "2316",
            "title": "Count Unreachable Pairs of Nodes in an Undirected Graph",
            "titleSlug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph",
            "acRate": "49.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2413",
            "questionFrontendId": "2336",
            "title": "Smallest Number in Infinite Set",
            "titleSlug": "smallest-number-in-infinite-set",
            "acRate": "72.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2414",
            "questionFrontendId": "2337",
            "title": "Move Pieces to Obtain a String",
            "titleSlug": "move-pieces-to-obtain-a-string",
            "acRate": "47.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2416",
            "questionFrontendId": "2331",
            "title": "Evaluate Boolean Binary Tree",
            "titleSlug": "evaluate-boolean-binary-tree",
            "acRate": "77.8%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2417",
            "questionFrontendId": "2332",
            "title": "The Latest Time to Catch a Bus",
            "titleSlug": "the-latest-time-to-catch-a-bus",
            "acRate": "26.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2419",
            "questionFrontendId": "2334",
            "title": "Subarray With Elements Greater Than Varying Threshold",
            "titleSlug": "subarray-with-elements-greater-than-varying-threshold",
            "acRate": "42.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2420",
            "questionFrontendId": "2277",
            "title": "Closest Node to Path in Tree",
            "titleSlug": "closest-node-to-path-in-tree",
            "acRate": "62.4%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2427",
            "questionFrontendId": "2351",
            "title": "First Letter to Appear Twice",
            "titleSlug": "first-letter-to-appear-twice",
            "acRate": "73.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2432",
            "questionFrontendId": "2348",
            "title": "Number of Zero-Filled Subarrays",
            "titleSlug": "number-of-zero-filled-subarrays",
            "acRate": "66.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2434",
            "questionFrontendId": "2349",
            "title": "Design a Number Container System",
            "titleSlug": "design-a-number-container-system",
            "acRate": "45.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2435",
            "questionFrontendId": "2350",
            "title": "Shortest Impossible Sequence of Rolls",
            "titleSlug": "shortest-impossible-sequence-of-rolls",
            "acRate": "68.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2443",
            "questionFrontendId": "2369",
            "title": "Check if There is a Valid Partition For The Array",
            "titleSlug": "check-if-there-is-a-valid-partition-for-the-array",
            "acRate": "51.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2447",
            "questionFrontendId": "2363",
            "title": "Merge Similar Items",
            "titleSlug": "merge-similar-items",
            "acRate": "75.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2448",
            "questionFrontendId": "2364",
            "title": "Count Number of Bad Pairs",
            "titleSlug": "count-number-of-bad-pairs",
            "acRate": "41.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2450",
            "questionFrontendId": "2366",
            "title": "Minimum Replacements to Sort the Array",
            "titleSlug": "minimum-replacements-to-sort-the-array",
            "acRate": "53.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2454",
            "questionFrontendId": "2373",
            "title": "Largest Local Values in a Matrix",
            "titleSlug": "largest-local-values-in-a-matrix",
            "acRate": "83.0%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2472",
            "questionFrontendId": "2392",
            "title": "Build a Matrix With Conditions",
            "titleSlug": "build-a-matrix-with-conditions",
            "acRate": "60.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2479",
            "questionFrontendId": "2402",
            "title": "Meeting Rooms III",
            "titleSlug": "meeting-rooms-iii",
            "acRate": "45.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2481",
            "questionFrontendId": "2396",
            "title": "Strictly Palindromic Number",
            "titleSlug": "strictly-palindromic-number",
            "acRate": "87.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Brainteaser",
                    "slug": "brainteaser"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2485",
            "questionFrontendId": "2345",
            "title": "Finding the Number of Visible Mountains",
            "titleSlug": "finding-the-number-of-visible-mountains",
            "acRate": "37.8%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2489",
            "questionFrontendId": "2459",
            "title": "Sort Array by Moving Items to Empty Space",
            "titleSlug": "sort-array-by-moving-items-to-empty-space",
            "acRate": "45.2%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2494",
            "questionFrontendId": "2416",
            "title": "Sum of Prefix Scores of Strings",
            "titleSlug": "sum-of-prefix-scores-of-strings",
            "acRate": "45.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2505",
            "questionFrontendId": "2421",
            "title": "Number of Good Paths",
            "titleSlug": "number-of-good-paths",
            "acRate": "56.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2506",
            "questionFrontendId": "2371",
            "title": "Minimize Maximum Value in a Grid",
            "titleSlug": "minimize-maximum-value-in-a-grid",
            "acRate": "64.9%",
            "difficulty": "Hard",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2512",
            "questionFrontendId": "2424",
            "title": "Longest Uploaded Prefix",
            "titleSlug": "longest-uploaded-prefix",
            "acRate": "55.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2513",
            "questionFrontendId": "2426",
            "title": "Number of Pairs Satisfying Inequality",
            "titleSlug": "number-of-pairs-satisfying-inequality",
            "acRate": "43.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Merge Sort",
                    "slug": "merge-sort"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2521",
            "questionFrontendId": "2435",
            "title": "Paths in Matrix Whose Sum Is Divisible by K",
            "titleSlug": "paths-in-matrix-whose-sum-is-divisible-by-k",
            "acRate": "42.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2525",
            "questionFrontendId": "2442",
            "title": "Count Number of Distinct Integers After Reverse Operations",
            "titleSlug": "count-number-of-distinct-integers-after-reverse-operations",
            "acRate": "78.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2526",
            "questionFrontendId": "2407",
            "title": "Longest Increasing Subsequence II",
            "titleSlug": "longest-increasing-subsequence-ii",
            "acRate": "22.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Binary Indexed Tree",
                    "slug": "binary-indexed-tree"
                },
                {
                    "name": "Segment Tree",
                    "slug": "segment-tree"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2528",
            "questionFrontendId": "2437",
            "title": "Number of Valid Clock Times",
            "titleSlug": "number-of-valid-clock-times",
            "acRate": "45.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2536",
            "questionFrontendId": "2446",
            "title": "Determine if Two Events Have Conflict",
            "titleSlug": "determine-if-two-events-have-conflict",
            "acRate": "50.5%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2538",
            "questionFrontendId": "2448",
            "title": "Minimum Cost to Make Array Equal",
            "titleSlug": "minimum-cost-to-make-array-equal",
            "acRate": "45.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2545",
            "questionFrontendId": "2458",
            "title": "Height of Binary Tree After Subtree Removal Queries",
            "titleSlug": "height-of-binary-tree-after-subtree-removal-queries",
            "acRate": "39.8%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2550",
            "questionFrontendId": "2452",
            "title": "Words Within Two Edits of Dictionary",
            "titleSlug": "words-within-two-edits-of-dictionary",
            "acRate": "60.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2564",
            "questionFrontendId": "2467",
            "title": "Most Profitable Path in a Tree",
            "titleSlug": "most-profitable-path-in-a-tree",
            "acRate": "48.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2567",
            "questionFrontendId": "2476",
            "title": "Closest Nodes Queries in a Binary Search Tree",
            "titleSlug": "closest-nodes-queries-in-a-binary-search-tree",
            "acRate": "41.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2569",
            "questionFrontendId": "2478",
            "title": "Number of Beautiful Partitions",
            "titleSlug": "number-of-beautiful-partitions",
            "acRate": "30.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2574",
            "questionFrontendId": "2488",
            "title": "Count Subarrays With Median K",
            "titleSlug": "count-subarrays-with-median-k",
            "acRate": "44.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2591",
            "questionFrontendId": "2498",
            "title": "Frog Jump II",
            "titleSlug": "frog-jump-ii",
            "acRate": "61.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "notac",
            "questionId": "2615",
            "questionFrontendId": "2531",
            "title": "Make Number of Distinct Characters Equal",
            "titleSlug": "make-number-of-distinct-characters-equal",
            "acRate": "26.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2625",
            "questionFrontendId": "2536",
            "title": "Increment Submatrices by One",
            "titleSlug": "increment-submatrices-by-one",
            "acRate": "48.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2641",
            "questionFrontendId": "2556",
            "title": "Disconnect Path in a Binary Matrix by at Most One Flip",
            "titleSlug": "disconnect-path-in-a-binary-matrix-by-at-most-one-flip",
            "acRate": "27.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2653",
            "questionFrontendId": "2510",
            "title": "Check if There is a Path With Equal Number of 0's And 1's",
            "titleSlug": "check-if-there-is-a-path-with-equal-number-of-0s-and-1s",
            "acRate": "50.4%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2687",
            "questionFrontendId": "2663",
            "title": "Lexicographically Smallest Beautiful String",
            "titleSlug": "lexicographically-smallest-beautiful-string",
            "acRate": "36.5%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2707",
            "questionFrontendId": "2570",
            "title": "Merge Two 2D Arrays by Summing Values",
            "titleSlug": "merge-two-2d-arrays-by-summing-values",
            "acRate": "73.2%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2716",
            "questionFrontendId": "2601",
            "title": "Prime Subtraction Operation",
            "titleSlug": "prime-subtraction-operation",
            "acRate": "37.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2732",
            "questionFrontendId": "2620",
            "title": "Counter",
            "titleSlug": "counter",
            "acRate": "80.1%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2734",
            "questionFrontendId": "2619",
            "title": "Array Prototype Last",
            "titleSlug": "array-prototype-last",
            "acRate": "72.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2736",
            "questionFrontendId": "2645",
            "title": "Minimum Additions to Make Valid String",
            "titleSlug": "minimum-additions-to-make-valid-string",
            "acRate": "49.9%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2747",
            "questionFrontendId": "2635",
            "title": "Apply Transform Over Each Element in Array",
            "titleSlug": "apply-transform-over-each-element-in-array",
            "acRate": "85.3%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2774",
            "questionFrontendId": "2700",
            "title": "Differences Between Two Objects",
            "titleSlug": "differences-between-two-objects",
            "acRate": "80.0%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "2809",
            "questionFrontendId": "2667",
            "title": "Create Hello World Function",
            "titleSlug": "create-hello-world-function",
            "acRate": "80.9%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2818",
            "questionFrontendId": "2713",
            "title": "Maximum Strictly Increasing Cells in a Matrix",
            "titleSlug": "maximum-strictly-increasing-cells-in-a-matrix",
            "acRate": "29.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2843",
            "questionFrontendId": "2689",
            "title": "Extract Kth Character From The Rope Tree",
            "titleSlug": "extract-kth-character-from-the-rope-tree",
            "acRate": "74.4%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2849",
            "questionFrontendId": "2763",
            "title": "Sum of Imbalance Numbers of All Subarrays",
            "titleSlug": "sum-of-imbalance-numbers-of-all-subarrays",
            "acRate": "45.6%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2859",
            "questionFrontendId": "2723",
            "title": "Add Two Promises",
            "titleSlug": "add-two-promises",
            "acRate": "90.6%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2868",
            "questionFrontendId": "2762",
            "title": "Continuous Subarrays",
            "titleSlug": "continuous-subarrays",
            "acRate": "40.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Queue",
                    "slug": "queue"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                },
                {
                    "name": "Monotonic Queue",
                    "slug": "monotonic-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2875",
            "questionFrontendId": "2728",
            "title": "Count Houses in a Circular Street",
            "titleSlug": "count-houses-in-a-circular-street",
            "acRate": "84.7%",
            "difficulty": "Easy",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Interactive",
                    "slug": "interactive"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2891",
            "questionFrontendId": "2779",
            "title": "Maximum Beauty of an Array After Applying Operation",
            "titleSlug": "maximum-beauty-of-an-array-after-applying-operation",
            "acRate": "37.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2914",
            "questionFrontendId": "2812",
            "title": "Find the Safest Path in a Grid",
            "titleSlug": "find-the-safest-path-in-a-grid",
            "acRate": "31.0%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "2953",
            "questionFrontendId": "2857",
            "title": "Count Pairs of Points With Distance k",
            "titleSlug": "count-pairs-of-points-with-distance-k",
            "acRate": "31.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3000",
            "questionFrontendId": "2817",
            "title": "Minimum Absolute Difference Between Elements With Constraint",
            "titleSlug": "minimum-absolute-difference-between-elements-with-constraint",
            "acRate": "32.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3024",
            "questionFrontendId": "2851",
            "title": "String Transformation",
            "titleSlug": "string-transformation",
            "acRate": "29.2%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "3056",
            "questionFrontendId": "2849",
            "title": "Determine if a Cell Is Reachable at a Given Time",
            "titleSlug": "determine-if-a-cell-is-reachable-at-a-given-time",
            "acRate": "35.8%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3057",
            "questionFrontendId": "2842",
            "title": "Count K-Subsequences of a String With Maximum Beauty",
            "titleSlug": "count-k-subsequences-of-a-string-with-maximum-beauty",
            "acRate": "28.7%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3058",
            "questionFrontendId": "2872",
            "title": "Maximum Number of K-Divisible Components",
            "titleSlug": "maximum-number-of-k-divisible-components",
            "acRate": "58.4%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3062",
            "questionFrontendId": "2877",
            "title": "Create a DataFrame from List",
            "titleSlug": "create-a-dataframe-from-list",
            "acRate": "80.7%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "3158",
            "questionFrontendId": "2863",
            "title": "Maximum Length of Semi-Decreasing Subarrays",
            "titleSlug": "maximum-length-of-semi-decreasing-subarrays",
            "acRate": "72.6%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "3178",
            "questionFrontendId": "2919",
            "title": "Minimum Increment Operations to Make Array Beautiful",
            "titleSlug": "minimum-increment-operations-to-make-array-beautiful",
            "acRate": "33.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3188",
            "questionFrontendId": "2923",
            "title": "Find Champion I",
            "titleSlug": "find-champion-i",
            "acRate": "72.4%",
            "difficulty": "Easy",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3189",
            "questionFrontendId": "2924",
            "title": "Find Champion II",
            "titleSlug": "find-champion-ii",
            "acRate": "56.7%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Graph",
                    "slug": "graph"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3191",
            "questionFrontendId": "2925",
            "title": "Maximum Score After Applying Operations on a Tree",
            "titleSlug": "maximum-score-after-applying-operations-on-a-tree",
            "acRate": "48.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3212",
            "questionFrontendId": "2963",
            "title": "Count the Number of Good Partitions",
            "titleSlug": "count-the-number-of-good-partitions",
            "acRate": "48.9%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3218",
            "questionFrontendId": "2973",
            "title": "Find Number of Coins to Place in Tree Nodes",
            "titleSlug": "find-number-of-coins-to-place-in-tree-nodes",
            "acRate": "34.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3222",
            "questionFrontendId": "2936",
            "title": "Number of Equal Numbers Blocks",
            "titleSlug": "number-of-equal-numbers-blocks",
            "acRate": "71.3%",
            "difficulty": "Medium",
            "isPaidOnly": true,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3229",
            "questionFrontendId": "2967",
            "title": "Minimum Cost to Make Array Equalindromic",
            "titleSlug": "minimum-cost-to-make-array-equalindromic",
            "acRate": "21.2%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3240",
            "questionFrontendId": "3007",
            "title": "Maximum Number That Sum of the Prices Is Less Than or Equal to K",
            "titleSlug": "maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k",
            "acRate": "34.4%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "companyTags": []
        },
        {
            "status": "ac",
            "questionId": "3241",
            "questionFrontendId": "2966",
            "title": "Divide Array Into Arrays With Max Difference",
            "titleSlug": "divide-array-into-arrays-with-max-difference",
            "acRate": "71.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3266",
            "questionFrontendId": "2982",
            "title": "Find Longest Special Substring That Occurs Thrice II",
            "titleSlug": "find-longest-special-substring-that-occurs-thrice-ii",
            "acRate": "32.3%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3267",
            "questionFrontendId": "2981",
            "title": "Find Longest Special Substring That Occurs Thrice I",
            "titleSlug": "find-longest-special-substring-that-occurs-thrice-i",
            "acRate": "41.6%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3277",
            "questionFrontendId": "3027",
            "title": "Find the Number of Ways to Place People II",
            "titleSlug": "find-the-number-of-ways-to-place-people-ii",
            "acRate": "48.0%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3278",
            "questionFrontendId": "3025",
            "title": "Find the Number of Ways to Place People I",
            "titleSlug": "find-the-number-of-ways-to-place-people-i",
            "acRate": "40.1%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3298",
            "questionFrontendId": "3041",
            "title": "Maximize Consecutive Elements in an Array After Modification",
            "titleSlug": "maximize-consecutive-elements-in-an-array-after-modification",
            "acRate": "29.1%",
            "difficulty": "Hard",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "companyTags": []
        },
        {
            "status": "",
            "questionId": "3314",
            "questionFrontendId": "3044",
            "title": "Most Frequent Prime",
            "titleSlug": "most-frequent-prime",
            "acRate": "47.5%",
            "difficulty": "Medium",
            "isPaidOnly": false,
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "companyTags": []
        }
    ],
    "frequencies": "{\"734\": [1, 1, 1, 43, 0, 0, 0, 6.607460668479512, 4], \"737\": [0, 0, 1, 46, 0, 0, 0, 6.628985752489213, 4], \"754\": [0, 0, 2, 91, 0, 0, 1.0986122886681096, 8.252902873662867, 3], \"746\": [1, 1, 3, 29, 0, 0, 1.3862943611198906, 5.639540205927847, 3], \"19\": [2, 6, 12, 59, 0.016227536621756702, 0.1373584160478243, 0.4630778608927755, 2.7237410410788554, 1], \"2\": [12, 17, 26, 471, 0.29700447772203814, 0.5271186810611378, 0.9644860528587361, 6.279945111919063, 1], \"616\": [0, 1, 2, 41, 0, 0, 1.5339303599259553, 7.3324881119934116, 3], \"88\": [13, 22, 28, 102, 0.302353529790408, 0.6986677403854575, 0.9699334680461713, 3.123855554989139, 1], \"1\": [45, 83, 143, 2424, 0.9340285838063993, 1.8334080348522686, 2.8093549021673203, 8.332192122361928, 1], \"543\": [3, 4, 7, 75, 0.05485836055204669, 0.0955379961853079, 0.2677478575509637, 3.590283807882681, 1], \"48\": [6, 12, 17, 119, 0.20502850052367105, 0.6472289945050858, 1.0391458665073359, 4.505496517698736, 1], \"681\": [3, 3, 4, 197, 1.2332691738143668, 1.2332691738143668, 1.6722858160937641, 8.785375890781593, 1], \"683\": [0, 0, 0, 163, 0, 0, 0, 9.098379084082286, 4], \"124\": [1, 1, 6, 142, 0, 0, 0.2900157957980011, 5.244117737758378, 3], \"226\": [4, 6, 10, 187, 0.08395068617381013, 0.17985546429876115, 0.43654080131558365, 5.259582796838969, 1], \"731\": [0, 0, 3, 47, 0, 0, 0.8032907596583713, 5.715720069611282, 3], \"93\": [0, 1, 2, 25, 0, 0, 0.2037476209666304, 3.592113412797457, 3], \"399\": [2, 3, 10, 217, 0.10058723690516862, 0.21357410029805904, 1.2934942559540161, 7.128288017681783, 1], \"98\": [1, 2, 3, 80, 0, 0.01885958774468238, 0.041944638750466105, 3.448770453473382, 2], \"236\": [0, 2, 6, 103, 0, 0.02978626758157693, 0.24067603007585034, 4.396779332447394, 2], \"220\": [0, 1, 3, 27, 0, 0, 0.42488319396526597, 3.7815122561475447, 3], \"280\": [0, 0, 0, 55, 0, 0, 0, 6.821834216474498, 4], \"235\": [1, 3, 4, 46, 0, 0.07676401621183813, 0.13264447460629472, 2.9836022639615827, 2], \"207\": [5, 14, 25, 103, 0.1482877095698255, 0.8123500659508137, 1.6086703545097594, 4.231675738451646, 1], \"299\": [0, 0, 13, 162, 0, 0, 2.894292233374129, 7.883035071272156, 3], \"687\": [0, 0, 0, 50, 0, 0, 0, 5.5557926175608285, 4], \"8\": [2, 2, 5, 88, 0.02463178718966542, 0.02463178718966542, 0.14484495769934067, 3.8975041500022334, 1], \"139\": [0, 2, 7, 172, 0, 0.032054026290083464, 0.3357739938371129, 5.4885742391002275, 2], \"32\": [1, 2, 4, 64, 0, 0.055569851154810765, 0.20585205420414873, 4.0862163797715585, 2], \"31\": [2, 5, 18, 156, 0.02697398873285018, 0.1577570973039956, 1.1677114809249236, 5.120046378435125, 1], \"84\": [2, 3, 5, 99, 0.03865215443427916, 0.08495672247596549, 0.22018350968573291, 4.58048373101423, 1], \"146\": [12, 24, 42, 294, 0.6636112688346976, 1.5617524354531507, 2.528680463909098, 6.339142797880696, 1], \"4\": [8, 19, 39, 368, 0.2346473757956944, 0.912979470570499, 1.9858344562411838, 6.329013535582948, 1], \"686\": [0, 0, 1, 128, 0, 0, 0, 6.809252716123452, 4], \"412\": [2, 3, 11, 59, 0.05090157276603699, 0.1110882064011508, 0.9476477085672218, 3.838244362449941, 1], \"51\": [2, 3, 6, 44, 0.059898141581068966, 0.1300531282481978, 0.44183275227903923, 3.42999677620518, 1], \"349\": [0, 2, 8, 49, 0, 0.04485056616535176, 0.5503991328304987, 3.351110505565457, 2], \"130\": [0, 0, 7, 96, 0, 0, 0.48065202300277077, 4.762776564865711, 3], \"780\": [0, 0, 1, 22, 0, 0, 0, 4.003284596706471, 4], \"162\": [2, 3, 12, 125, 0.02460148673030814, 0.0545259218451414, 0.6400826389484001, 4.587936609526758, 1], \"66\": [3, 4, 13, 292, 0.03522869188374385, 0.061795719268465645, 0.51480177214563, 5.830994139002009, 1], \"205\": [1, 1, 8, 119, 0, 0, 0.3814737493399504, 4.642127538063373, 3], \"50\": [2, 6, 14, 135, 0.01974397798969095, 0.16505807601645126, 0.6816153405578604, 4.520183405449967, 1], \"102\": [1, 1, 4, 60, 0, 0, 0.09424273398820002, 3.1457005672185603, 3], \"394\": [4, 7, 34, 298, 0.2188530145453416, 0.5591788204825445, 2.9272307623258813, 7.214400896811897, 1], \"20\": [10, 21, 41, 288, 0.1706547058018452, 0.5991758881915717, 1.4177987981201774, 5.045636435353072, 1], \"448\": [0, 0, 2, 62, 0, 0, 0.07057601740611524, 4.266534733788564, 3], \"403\": [0, 0, 4, 75, 0, 0, 0.8718389693033213, 6.194671549115381, 3], \"650\": [2, 2, 2, 9, 0.5316597106688327, 0.5316597106688327, 0.5316597106688327, 2.7219877089459916, 1], \"788\": [0, 0, 0, 28, 0, 0, 0, 6.570500918399885, 4], \"56\": [7, 19, 49, 465, 0.2084668368982769, 0.9960859742461586, 2.514272544592365, 6.93129994539714, 1], \"459\": [4, 6, 8, 55, 0.45328763125380567, 0.8286926725561692, 1.1920743405343215, 4.695220548703572, 1], \"142\": [2, 2, 2, 21, 0.046358242602104555, 0.046358242602104555, 0.046358242602104555, 1.8295876629521062, 1], \"75\": [3, 4, 6, 50, 0.04553138480795342, 0.07956481041235021, 0.17086906306216687, 2.6347594348927084, 1], \"482\": [0, 0, 1, 231, 0, 0, 0, 7.8407064517494, 4], \"240\": [0, 2, 3, 62, 0, 0.06035013533317068, 0.13100097764903212, 4.107298144581779, 2], \"544\": [0, 1, 1, 20, 0, 0, 0, 6.68586094706836, 4], \"762\": [0, 0, 0, 9, 0, 0, 0, 3.364914876480732, 4], \"345\": [2, 2, 2, 87, 0.030748002625591072, 0.030748002625591072, 0.030748002625591072, 4.095787704622067, 1], \"793\": [1, 2, 14, 94, 0, 0.7939518796819109, 4.062612723653798, 7.893040498503554, 2], \"425\": [0, 0, 3, 39, 0, 0, 1.7047480922384253, 6.635290172335217, 3], \"435\": [1, 2, 3, 27, 0, 0.06828590786613152, 0.1475667107409061, 2.630438771831119, 2], \"695\": [1, 2, 13, 117, 0, 0.06321219334021966, 1.3236029638844737, 5.413036078096357, 2], \"36\": [2, 3, 5, 79, 0.02552786995334295, 0.056547726798068784, 0.14980103621049293, 3.7218934109595856, 1], \"296\": [0, 0, 3, 47, 0, 0, 0.7741883905630712, 5.662554553603074, 3], \"778\": [2, 4, 6, 69, 0.10563902840158458, 0.36858149467760976, 0.6945389692327678, 4.894987859428233, 1], \"117\": [0, 0, 2, 37, 0, 0, 0.11441035117774422, 3.7491475061280553, 3], \"332\": [2, 4, 10, 78, 0.10969891725642447, 0.38101401224400006, 1.3606048750045798, 5.178112923388409, 1], \"642\": [2, 2, 10, 106, 0.5042466526679481, 0.5042466526679481, 2.856093274440672, 7.519132167557567, 1], \"208\": [3, 5, 14, 109, 0.10041874774704733, 0.2572954628835441, 1.1940647261012398, 4.9448398539980944, 1], \"38\": [1, 1, 7, 86, 0, 0, 0.6252934776032487, 4.883822248642185, 3], \"53\": [2, 3, 16, 219, 0.013223333174689446, 0.029510338149388523, 0.6162194167403372, 5.078941666361847, 1], \"116\": [2, 3, 4, 44, 0.09330773169945256, 0.1988909397087169, 0.3301652780835292, 3.8781551771531357, 1], \"322\": [5, 7, 11, 108, 0.14620266110855132, 0.26893052985209165, 0.5664295134183455, 4.3101396007266715, 1], \"215\": [3, 12, 19, 162, 0.045075231751573075, 0.5525652299387559, 1.0471032678208725, 4.908578362342791, 1], \"347\": [2, 4, 15, 114, 0.017536617757396032, 0.06837348466008865, 0.6907116651304261, 4.068667571733321, 1], \"166\": [0, 0, 1, 57, 0, 0, 0, 5.613220109761592, 4], \"777\": [0, 0, 0, 68, 0, 0, 0, 5.201944121890447, 4], \"189\": [4, 7, 10, 67, 0.0530980724300844, 0.1544427785587057, 0.29329004024607735, 2.791160925820792, 1], \"3\": [15, 18, 35, 381, 0.3491803619806113, 0.4711174218242147, 1.1863972643224086, 5.60069909579351, 1], \"801\": [1, 3, 5, 34, 0, 0.22426024601428485, 0.5296418955654667, 3.505272154906224, 2], \"388\": [2, 4, 10, 422, 0.42285685082003355, 1.133098464739279, 2.650272400435399, 9.068052517855497, 1], \"187\": [1, 1, 4, 36, 0, 0, 0.6690496289808848, 4.358538653366668, 3], \"518\": [3, 3, 5, 49, 0.16048591655106914, 0.16048591655106914, 0.39444392685882707, 3.8594869560395075, 1], \"524\": [0, 1, 4, 59, 0, 0, 1.6722858160937641, 6.8478044166253, 3], \"159\": [0, 0, 1, 108, 0, 0, 0, 7.377013767665887, 4], \"252\": [1, 2, 11, 45, 0, 0.1578069910303688, 1.81985120409507, 4.472078257224739, 2], \"46\": [2, 3, 9, 82, 0.02777956410707571, 0.0614527792136636, 0.45134471385885805, 3.8785099164163768, 1], \"63\": [1, 1, 5, 66, 0, 0, 0.29626581614317243, 4.112229643389009, 3], \"5\": [10, 17, 35, 272, 0.2960008031559851, 0.6909056070719942, 1.6524538471115324, 5.544605404819597, 1], \"604\": [1, 1, 2, 13, 0, 0, 1.2992829841302609, 4.733270188615407, 3], \"308\": [0, 1, 2, 113, 0, 0, 1.6094379124341003, 8.856045047550069, 3], \"542\": [2, 4, 9, 60, 0.07831789344741825, 0.2820655144140487, 0.9744443507179847, 4.308376806028899, 1], \"217\": [6, 11, 19, 96, 0.08866251547065755, 0.27125899715293733, 0.6573612006326435, 3.2081879571002476, 1], \"653\": [1, 2, 4, 16, 0, 0.13176927763112334, 0.44685032427101873, 2.3039925527619256, 2], \"216\": [0, 0, 3, 20, 0, 0, 0.21562875481172333, 2.4591774038221814, 3], \"118\": [3, 7, 10, 69, 0.06282596044139727, 0.30234351870145837, 0.5425923334457429, 3.5639156188664742, 1], \"785\": [0, 0, 2, 39, 0, 0, 0.4013413909243023, 5.2405705443357125, 3], \"685\": [2, 4, 4, 29, 0.4274440148269396, 1.1420974006078486, 1.1420974006078486, 4.728567064132016, 1], \"297\": [1, 1, 6, 125, 0, 0, 0.5828906942899122, 5.841822916988767, 3], \"228\": [0, 1, 2, 84, 0, 0, 0.06669137449867221, 4.809376941961982, 3], \"125\": [2, 3, 9, 44, 0.010857869972049116, 0.02426649135243324, 0.19972741625605403, 1.837981703333128, 1], \"11\": [6, 10, 18, 215, 0.09445926501964402, 0.243086456036205, 0.6374122084536628, 4.853602706125562, 1], \"229\": [2, 3, 5, 86, 0.053848809125692315, 0.1173218873890459, 0.2969748600272404, 4.63759854608801, 1], \"328\": [0, 1, 4, 23, 0, 0, 0.1730301980665079, 1.9803906077370426, 3], \"732\": [0, 0, 2, 26, 0, 0, 0.9808292530117262, 5.644268347123793, 3], \"269\": [2, 2, 7, 95, 0.20271151249700387, 0.20271151249700387, 1.3225046232445605, 6.230525682643625, 1], \"343\": [1, 1, 3, 22, 0, 0, 0.4054651081081644, 3.3282283617955644, 3], \"241\": [1, 2, 3, 36, 0, 0.38946476676172326, 0.7282385003712154, 5.045266738065896, 2], \"282\": [0, 2, 9, 40, 0, 0.2876820724517809, 2.0476928433652555, 4.9003242732785735, 2], \"264\": [1, 2, 2, 26, 0, 0.19478832555908462, 0.19478832555908462, 3.620174559590818, 2], \"271\": [0, 0, 1, 96, 0, 0, 0, 6.309138753696982, 4], \"25\": [3, 7, 10, 62, 0.09876441467241241, 0.4479926830543273, 0.7670491667611807, 3.814118922264199, 1], \"387\": [1, 1, 2, 61, 0, 0, 0.048671406375812236, 3.8585485704646914, 3], \"158\": [1, 1, 3, 98, 0, 0, 1.4118276631250553, 8.09504711827244, 3], \"647\": [0, 2, 6, 34, 0, 0.059898141581068966, 0.44183275227903923, 2.9359560571719636, 2], \"17\": [3, 8, 16, 242, 0.05355235448068089, 0.3301652780835292, 0.9418774523534954, 5.883240658537612, 1], \"490\": [2, 2, 3, 51, 0.4737843520856416, 0.4737843520856416, 0.8602012652231115, 5.979115888018004, 1], \"803\": [2, 3, 8, 43, 0.009985105426996765, 0.022327893569875402, 0.14890434201864447, 1.7296598514593489, 1], \"67\": [3, 4, 5, 51, 0.06412452816953867, 0.11130308844462915, 0.1688637328412395, 3.0026618508624403, 1], \"134\": [1, 1, 4, 75, 0, 0, 0.14413390158378703, 4.01648777118458, 3], \"813\": [0, 0, 3, 18, 0, 0, 0.35667494393873234, 2.7990219793079367, 3], \"825\": [0, 0, 3, 21, 0, 0, 1.042653635020065, 4.51085950651685, 3], \"447\": [0, 0, 2, 35, 0, 0, 0.7939518796819109, 5.919463910072614, 3], \"317\": [1, 1, 11, 87, 0, 0, 2.319114394945256, 6.353341844400365, 3], \"62\": [3, 12, 32, 195, 0.0627383406334233, 0.7109729645125459, 2.1242842193879725, 5.615174008741045, 1], \"64\": [0, 1, 9, 93, 0, 0, 0.7115428784981009, 4.716198348943438, 3], \"249\": [0, 0, 1, 50, 0, 0, 0, 4.806961171607856, 4], \"206\": [4, 6, 9, 127, 0.04729013504145709, 0.1034215911531522, 0.2192619355720338, 3.908347979914987, 1], \"806\": [1, 1, 3, 13, 0, 0, 0.41689380393178715, 2.3714246960310073, 3], \"149\": [1, 1, 4, 106, 0, 0, 0.5158761395520592, 6.163510210213651, 3], \"830\": [0, 0, 0, 5, 0, 0, 0, 2.0485643031153966, 4], \"729\": [2, 3, 49, 134, 0.3452699473247421, 0.6563976383512038, 5.412551193070618, 7.524093777932673, 1], \"289\": [0, 0, 3, 107, 0, 0, 0.2631357702277599, 5.95040736607067, 3], \"369\": [0, 0, 0, 17, 0, 0, 0, 4.841444541030285, 4], \"54\": [4, 6, 16, 157, 0.10549958804522798, 0.2234216767505736, 1.0225409767793534, 5.149885122133723, 1], \"676\": [0, 0, 0, 20, 0, 0, 0, 4.105968286516259, 4], \"14\": [7, 12, 28, 173, 0.12195056436018913, 0.3229194176352189, 1.1233608504910229, 4.384762433693346, 1], \"358\": [0, 0, 1, 18, 0, 0, 0, 5.522383569011815, 4], \"169\": [5, 5, 11, 94, 0.06596957525075067, 0.06596957525075067, 0.2852240622015118, 3.222969996400864, 1], \"836\": [2, 4, 119, 202, 0.4795730802618863, 1.241713132308783, 6.072954027215344, 8.585945063628941, 1], \"72\": [4, 4, 9, 105, 0.18442903913351932, 0.18442903913351932, 0.7057259627668054, 4.945612830279564, 1], \"79\": [4, 5, 14, 102, 0.1319869907731485, 0.19922665188991748, 1.003713546845314, 4.5298649161629045, 1], \"253\": [6, 14, 46, 260, 0.5431628262327367, 1.594903946464674, 3.732294220593461, 7.212080152643768, 1], \"76\": [2, 4, 8, 147, 0.034074846884502526, 0.12984175197651093, 0.44121359555069656, 5.237786977726542, 1], \"227\": [1, 3, 4, 41, 0, 0.15154989812720093, 0.2553466918088445, 3.4520057099878247, 2], \"392\": [2, 2, 8, 76, 0.020398463529540674, 0.020398463529540674, 0.2849736165496036, 3.426145466490157, 1], \"103\": [1, 1, 2, 38, 0, 0, 0.04367506350266158, 2.84001787175055, 3], \"362\": [4, 4, 8, 73, 0.8152951293010299, 0.8152951293010299, 1.7982997149086648, 6.041697239886355, 1], \"43\": [0, 0, 8, 90, 0, 0, 0.6473043047125727, 4.755489108069519, 3], \"198\": [5, 11, 19, 129, 0.12016358430653022, 0.48117692984386073, 1.0451123789238, 4.454228515890137, 1], \"33\": [4, 10, 12, 167, 0.055377469468953854, 0.30444470579295524, 0.4137344995906711, 4.6076581915366726, 1], \"494\": [0, 2, 3, 22, 0, 0.06947237281476738, 0.15003120953201945, 2.2726449230770642, 2], \"167\": [0, 0, 3, 67, 0, 0, 0.04100802372737705, 3.0855304614508, 3], \"621\": [0, 1, 6, 54, 0, 0, 0.5659382536749097, 4.1375484956847615, 3], \"23\": [1, 8, 16, 207, 0, 0.3863696735809461, 1.0600496738309622, 5.758152950564583, 2], \"307\": [1, 1, 4, 46, 0, 0, 0.8197099038683746, 5.129522951649512, 3], \"821\": [0, 1, 2, 42, 0, 0, 1.6094379124341003, 7.475905969367397, 3], \"465\": [0, 1, 4, 80, 0, 0, 1.1242547192814474, 6.724035342313231, 3], \"415\": [0, 2, 5, 54, 0, 0.06581321856957176, 0.3542911525834561, 3.923790233924564, 2], \"315\": [5, 7, 16, 143, 0.7689072264414809, 1.184336829809077, 2.55348791394253, 6.854051674722754, 1], \"486\": [0, 1, 4, 38, 0, 0, 0.9088557533866369, 4.90307757898266, 3], \"539\": [0, 1, 27, 69, 0, 0, 4.2754094307150705, 6.198122438130354, 3], \"835\": [0, 0, 0, 30, 0, 0, 0, 5.05096061356974, 4], \"7\": [8, 16, 23, 179, 0.21222341159702543, 0.6656199298690881, 1.0832254607175886, 4.782173476103536, 1], \"822\": [0, 0, 2, 21, 0, 0, 0.2646925542270822, 3.538320800079133, 3], \"140\": [0, 3, 4, 81, 0, 0.3012613305781618, 0.48550781578170077, 5.55020020963952, 2], \"6\": [2, 3, 5, 40, 0.03241774957342243, 0.07151577086715469, 0.1872517229018133, 2.651802313589976, 1], \"353\": [1, 1, 4, 42, 0, 0, 1.552005863348225, 6.019158889361415, 3], \"49\": [5, 8, 16, 112, 0.08759097220436643, 0.21054159376035572, 0.6613394214304267, 3.848697467357514, 1], \"679\": [3, 3, 6, 79, 1.0296194171811583, 1.0296194171811583, 2.1041341542702074, 7.130258625408923, 1], \"487\": [0, 0, 3, 8, 0, 0, 0.7741883905630712, 2.2312704187459365, 3], \"41\": [3, 4, 9, 117, 0.09986117458829845, 0.17117447745078015, 0.6653429641530142, 5.079736029595832, 1], \"525\": [0, 1, 3, 22, 0, 0, 0.2822324676842163, 2.9197272969815833, 3], \"632\": [0, 0, 2, 20, 0, 0, 0.325422400434628, 3.6753264877092326, 3], \"238\": [2, 5, 8, 101, 0.012586698578312142, 0.07618669313361895, 0.18453569655664379, 3.50562015568777, 1], \"864\": [0, 0, 0, 16, 0, 0, 0, 5.287878454820207, 4], \"42\": [6, 10, 24, 418, 0.17201488856374392, 0.4196154736393474, 1.3870761201173594, 6.815606831812804, 1], \"127\": [2, 2, 7, 130, 0.056592185311170023, 0.056592185311170023, 0.5383898150379274, 5.509376550290699, 1], \"268\": [2, 2, 6, 51, 0.01626713381927022, 0.01626713381927022, 0.13767409129953323, 2.456524891335917, 1], \"862\": [3, 6, 23, 148, 0.8430873278508602, 1.83961549040569, 4.3094817766181635, 8.067333318734645, 1], \"659\": [0, 0, 2, 53, 0, 0, 0.8286926725561692, 6.810284702684814, 3], \"26\": [5, 7, 12, 99, 0.04695698308777104, 0.09005162255085788, 0.24445333790096083, 2.9881071219904602, 1], \"57\": [3, 9, 26, 149, 0.08076135664445847, 0.563613128368043, 1.990303861528897, 5.339871803047538, 1], \"334\": [0, 0, 6, 67, 0, 0, 0.33615507835658165, 3.928337586633778, 3], \"330\": [1, 1, 1, 6, 0, 0, 0, 2.3978952727983707, 4], \"287\": [1, 1, 4, 101, 0, 0, 0.10278616290486765, 4.248765841428631, 3], \"285\": [0, 0, 3, 47, 0, 0, 0.5198754592859085, 5.126036145557583, 3], \"380\": [3, 4, 11, 116, 0.10259559233600947, 0.17569702187832992, 0.8971409526507793, 5.090903297286441, 1], \"874\": [0, 2, 7, 198, 0, 0.0891458495182624, 0.76182920342767, 6.818755913265709, 2], \"91\": [2, 2, 9, 110, 0.05798725765034936, 0.05798725765034936, 0.792519654373149, 5.201790028396483, 1], \"739\": [3, 5, 8, 46, 0.07702694116580719, 0.20083244232865827, 0.4506902061131003, 2.9869751806870695, 1], \"69\": [4, 5, 9, 76, 0.07572206422667029, 0.11592399416739557, 0.33520721431462625, 3.38090102384822, 1], \"150\": [3, 5, 59, 166, 0.08376988306545878, 0.2173012756899814, 3.5112297507726686, 5.592977463045618, 1], \"155\": [1, 1, 1, 93, 0, 0, 0, 4.028194766354058, 4], \"407\": [1, 1, 4, 49, 0, 0, 1.629743178594846, 6.424287048498207, 3], \"418\": [2, 2, 12, 135, 0.5705448584676129, 0.5705448584676129, 3.3566290621822787, 8.151697198938209, 1], \"873\": [0, 5, 29, 313, 0, 1.8803128665695001, 5.132855409400383, 8.99738336108702, 2], \"715\": [13, 20, 44, 93, 3.0111667341017396, 3.5174399290742127, 5.318054013954116, 6.914430623629008, 1], \"876\": [0, 1, 4, 70, 0, 0, 0.6493445579015523, 5.638354669333745, 3], \"359\": [25, 38, 93, 312, 3.5273141124990817, 4.159411766464059, 5.7850870256148905, 8.714706734013117, 1], \"13\": [5, 22, 61, 293, 0.06897382912722166, 0.8681344712869461, 2.4534496842298608, 5.506196187801391, 1], \"304\": [0, 0, 3, 106, 0, 0, 0.3624832855344793, 6.303418826482085, 3], \"190\": [1, 2, 5, 36, 0, 0.05910139227591337, 0.32245843163052607, 3.031390272639965, 2], \"879\": [0, 0, 0, 69, 0, 0, 0, 6.1479654042801934, 4], \"560\": [4, 7, 23, 112, 0.10071397560183078, 0.28103752973311236, 1.5048129613552281, 4.4316836573238545, 1], \"288\": [0, 0, 0, 66, 0, 0, 0, 8.032679577557039, 4], \"70\": [7, 12, 17, 153, 0.1457009601925972, 0.37908520002238966, 0.6549758525888978, 4.329848455326834, 1], \"680\": [2, 3, 4, 19, 0.047458490406358134, 0.10377967991789866, 0.17765291947009673, 1.683875634067984, 1], \"382\": [0, 0, 1, 16, 0, 0, 0, 3.84405002184194, 4], \"133\": [0, 0, 3, 91, 0, 0, 0.08269171584511335, 4.386017701904711, 3], \"337\": [3, 4, 8, 61, 0.36101334553733055, 0.5726430547892012, 1.4089819013866853, 5.197161632317309, 1], \"722\": [0, 0, 3, 47, 0, 0, 1.4118276631250553, 6.636896416671286, 3], \"111\": [1, 2, 2, 12, 0, 0.054067221270275766, 0.054067221270275766, 1.0986122886681096, 2], \"28\": [3, 4, 10, 53, 0.031317799552547564, 0.055015590982370674, 0.3026803801757273, 2.391447589350273, 1], \"883\": [2, 3, 3, 69, 0.08607460877124298, 0.18419246472976633, 0.18419246472976633, 4.682027185091145, 1], \"882\": [0, 1, 2, 64, 0, 0, 0.06935187346531807, 4.311293020966756, 3], \"135\": [1, 3, 9, 67, 0, 0.119664503756089, 0.7627048642618555, 4.165175041197773, 2], \"375\": [0, 1, 1, 52, 0, 0, 0, 5.851244166332663, 4], \"341\": [0, 0, 5, 54, 0, 0, 0.8549902060103592, 5.06652162791411, 3], \"692\": [2, 6, 16, 73, 0.14310084364067333, 0.8690378470236095, 2.3838105329166317, 5.327689444860367, 1], \"348\": [0, 1, 2, 32, 0, 0, 0.26121549926361765, 4.349218154960434, 3], \"73\": [2, 2, 3, 43, 0.02393890497845229, 0.02393890497845229, 0.053078495848061034, 2.501376373552753, 1], \"400\": [0, 0, 3, 34, 0, 0, 0.7282385003712154, 4.9317295060222, 3], \"340\": [0, 1, 4, 139, 0, 0, 0.9033634973726954, 7.480749070945962, 3], \"126\": [0, 1, 2, 45, 0, 0, 0.17985546429876115, 4.612678870936379, 3], \"749\": [0, 0, 0, 10, 0, 0, 0, 2.7963428082478883, 4], \"286\": [0, 1, 3, 44, 0, 0, 0.37948962170490375, 4.607986728625868, 3], \"163\": [1, 1, 2, 115, 0, 0, 0.1616413515564159, 6.364826243932334, 3], \"413\": [2, 2, 4, 12, 0.4519851237430572, 0.4519851237430572, 1.1895840668738362, 3.0713696877596113, 1], \"283\": [3, 7, 12, 101, 0.031515213214872134, 0.16068516094666113, 0.41361395745225826, 3.618713841568209, 1], \"173\": [0, 0, 4, 81, 0, 0, 0.28820385696661954, 4.92705700005698, 3], \"444\": [0, 2, 4, 36, 0, 1.6094379124341003, 2.833213344056216, 7.167809184316444, 2], \"346\": [2, 3, 8, 135, 0.10453372768183221, 0.22148929121818325, 1.0163479536970847, 6.220721604210366, 1], \"474\": [0, 0, 3, 12, 0, 0, 0.6371529112053704, 2.725066318478856, 3], \"152\": [0, 1, 4, 81, 0, 0, 0.11548506451875977, 3.9357186108243196, 3], \"360\": [0, 0, 1, 31, 0, 0, 0, 6.33911358572175, 4], \"9\": [6, 9, 23, 148, 0.06987708037860961, 0.15087113947525063, 0.7244182819321224, 3.8074842045207835, 1], \"658\": [0, 1, 6, 40, 0, 0, 0.5406551509719639, 3.4926367449725593, 3], \"68\": [6, 9, 37, 222, 0.7073318155519017, 1.198242129616951, 3.653456488003826, 7.250716619833108, 1], \"230\": [1, 1, 3, 48, 0, 0, 0.07017687679183775, 2.9760734162132074, 3], \"224\": [1, 3, 15, 96, 0, 0.19671029424605424, 1.8617180578349655, 5.409897629845767, 2], \"44\": [2, 3, 4, 73, 0.0846170485596561, 0.1812171944509014, 0.3024728104531774, 4.776076579467739, 1], \"12\": [0, 3, 11, 56, 0, 0.06915196782011657, 0.6742749079391093, 3.2561056952377117, 2], \"351\": [0, 0, 0, 55, 0, 0, 0, 7.484599945020273, 4], \"250\": [0, 0, 2, 32, 0, 0, 0.705886206337375, 5.574296611883275, 3], \"724\": [0, 0, 3, 34, 0, 0, 0.0939167287975245, 2.613571185631918, 3], \"361\": [0, 0, 0, 66, 0, 0, 0, 7.96370965527203, 4], \"281\": [1, 1, 1, 57, 0, 0, 0, 7.253901072410006, 4], \"549\": [0, 0, 1, 26, 0, 0, 0, 6.517671272912275, 4], \"147\": [1, 1, 2, 13, 0, 0, 0.12399764165657076, 1.8836635147034255, 3], \"305\": [0, 1, 2, 67, 0, 0, 0.6690496289808848, 6.975235896478091, 3], \"210\": [5, 11, 29, 112, 0.2399217465803641, 0.8382705617291413, 2.314659409584727, 4.920360859027775, 1], \"242\": [1, 3, 7, 78, 0, 0.023735291453265014, 0.12289995183287185, 2.8470576323357513, 2], \"121\": [6, 13, 26, 239, 0.06599425467590715, 0.2778269616244511, 0.8246274849740669, 4.693595035161426, 1], \"122\": [0, 0, 5, 56, 0, 0, 0.13246850501338622, 2.932137593921126, 3], \"200\": [9, 17, 48, 482, 0.33201757623041267, 0.8775327215747515, 2.5014997064112547, 7.030354441127814, 1], \"274\": [1, 2, 11, 73, 0, 0.0433907545137394, 0.8507761247635285, 4.095674054994929, 2], \"214\": [1, 2, 3, 28, 0, 0.22190054307461277, 0.44404857414732085, 3.905917447865661, 2], \"266\": [0, 0, 2, 24, 0, 0, 0.31259842371631547, 3.9860916583291908, 3], \"336\": [1, 1, 3, 40, 0, 0, 0.7537718023763802, 5.303304908059076, 3], \"137\": [1, 4, 8, 58, 0, 0.32879599515977564, 0.9389041563807166, 4.417021465225799, 2], \"138\": [1, 1, 2, 80, 0, 0, 0.03854041530777664, 4.156824236508111, 3], \"503\": [1, 1, 3, 17, 0, 0, 0.20157261209600713, 2.1006177204296814, 3], \"381\": [0, 0, 2, 20, 0, 0, 0.4013413909243023, 3.919648180733367, 3], \"259\": [1, 1, 1, 42, 0, 0, 0, 5.5053315359323625, 4], \"799\": [0, 0, 0, 5, 0, 0, 0, 1.0479685558493548, 4], \"148\": [1, 2, 4, 34, 0, 0.05285245817831084, 0.19646796986945952, 2.814522716983111, 2], \"300\": [6, 8, 21, 130, 0.24956311434817105, 0.4080863415880386, 1.49793433226256, 4.898368511962053, 1], \"176\": [0, 1, 4, 28, 0, 0, 0.11760968036427905, 1.9622677197910303, 3], \"101\": [1, 1, 7, 64, 0, 0, 0.29717080996048234, 3.3987461689706975, 3], \"498\": [0, 0, 1, 36, 0, 0, 0, 3.7410652072845068, 4], \"393\": [1, 1, 5, 68, 0, 0, 2.3281806401830094, 7.446347376967401, 3], \"391\": [0, 0, 0, 21, 0, 0, 0, 4.687312002311547, 4], \"136\": [1, 6, 12, 74, 0, 0.143271988600872, 0.4800619881735989, 3.1958835203204474, 2], \"193\": [0, 0, 2, 17, 0, 0, 0.2815658454343448, 3.198507183757884, 3], \"105\": [0, 1, 3, 50, 0, 0, 0.08609520651785023, 3.257135498487234, 3], \"141\": [2, 3, 5, 47, 0.015711242265145316, 0.035009409666652905, 0.09437401871625871, 2.2767596140914415, 1], \"295\": [5, 5, 14, 173, 0.2731294587804852, 0.2731294587804852, 1.241936446289166, 5.932225193379583, 1], \"450\": [0, 0, 2, 29, 0, 0, 0.05998799772144878, 2.638946923874048, 3], \"807\": [0, 1, 3, 16, 0, 0, 0.19845093872383826, 1.9801600720983918, 3], \"128\": [5, 13, 30, 190, 0.10150694634183632, 0.5436154465889815, 1.578185368929996, 5.045188105640989, 1], \"99\": [0, 1, 2, 28, 0, 0, 0.1506602748874898, 3.4925579142683536, 3], \"273\": [0, 1, 3, 43, 0, 0, 0.39290888933275187, 4.603939482459021, 3], \"540\": [0, 3, 7, 49, 0, 0.1248155284549812, 0.544520359374281, 3.5963607953615475, 2], \"15\": [8, 18, 27, 285, 0.14073677634579276, 0.5681807911727325, 1.0011352607786945, 5.26162521304161, 1], \"10\": [0, 1, 7, 173, 0, 0, 0.45997135224603913, 5.879756954747625, 3], \"168\": [0, 2, 3, 53, 0, 0.1042610103244094, 0.22094333040460734, 4.358890159574371, 2], \"812\": [2, 2, 3, 14, 0.09835932019884275, 0.09835932019884275, 0.20909179785855941, 1.8024685028212417, 1], \"310\": [0, 0, 2, 29, 0, 0, 0.1391128024627178, 3.477559385847439, 3], \"211\": [2, 3, 10, 53, 0.07315875518638974, 0.15766847536402548, 1.06385975667727, 3.9945556772719555, 1], \"279\": [0, 1, 4, 108, 0, 0, 0.3506199037197806, 5.727309309726783, 3], \"22\": [7, 11, 14, 152, 0.26426179824368246, 0.5578505624108535, 0.7929366511683162, 4.967152011144328, 1], \"222\": [0, 0, 5, 171, 0, 0, 0.3203744341373232, 6.09290803566299, 3], \"329\": [4, 7, 35, 191, 0.27380672595816385, 0.6752718287329821, 3.2234323572234187, 6.578042038559788, 1], \"219\": [0, 0, 2, 36, 0, 0, 0.033616610798984974, 2.4912964478867714, 3], \"29\": [0, 1, 7, 57, 0, 0, 0.38946476676172326, 3.483524985381398, 3], \"218\": [0, 0, 2, 113, 0, 0, 0.3201675275962693, 7.094751427419145, 3], \"662\": [1, 2, 5, 33, 0, 0.13580154115906176, 0.6466271649250525, 3.703768066607687, 2], \"184\": [0, 1, 2, 8, 0, 0, 0.12516314295400602, 1.1420974006078486, 3], \"151\": [1, 1, 3, 36, 0, 0, 0.04274154837727102, 1.9862579201075954, 3], \"323\": [2, 2, 7, 23, 0.14361551169114867, 0.14361551169114867, 1.0619109218176817, 3.0645449486263634, 1], \"471\": [0, 0, 1, 35, 0, 0, 0, 7.804251383528112, 4], \"365\": [4, 9, 12, 36, 0.7191226669632059, 1.84513392981943, 2.348865845558052, 4.457402599577389, 1], \"485\": [4, 8, 15, 38, 0.1387503085003144, 0.46709241903827714, 1.1291490125281913, 2.6694866363207175, 1], \"34\": [2, 5, 11, 156, 0.021031269384912857, 0.1247254651404102, 0.4964830895619876, 4.869910436974509, 1], \"71\": [2, 3, 8, 62, 0.04137094624740334, 0.09078811504344908, 0.5163016273403308, 3.727891998416142, 1], \"747\": [0, 1, 2, 22, 0, 0, 0.04032804538697178, 1.7883242202297345, 3], \"284\": [0, 0, 0, 69, 0, 0, 0, 6.5825286635761735, 4], \"645\": [2, 2, 2, 6, 0.1391128024627178, 0.1391128024627178, 0.1391128024627178, 0.851553185957342, 1], \"112\": [0, 1, 5, 31, 0, 0, 0.19780330998499504, 2.2415284005957155, 3], \"246\": [0, 0, 0, 73, 0, 0, 0, 6.665271493451589, 4], \"327\": [0, 0, 0, 18, 0, 0, 0, 3.991106867679882, 4], \"109\": [0, 1, 2, 29, 0, 0, 0.2016859239757458, 3.87085178792547, 3], \"684\": [0, 1, 1, 39, 0, 0, 0, 3.8402889980805757, 4], \"153\": [3, 3, 3, 53, 0.047881486233213956, 0.047881486233213956, 0.047881486233213956, 2.791649769937503, 1], \"298\": [0, 0, 1, 89, 0, 0, 0, 7.3886559518496915, 4], \"143\": [2, 2, 5, 50, 0.04410858325627566, 0.04410858325627566, 0.24830351144095653, 3.373651208866838, 1], \"80\": [1, 2, 3, 16, 0, 0.021906681085866738, 0.048631948838036385, 0.8827328031329585, 2], \"572\": [0, 1, 3, 25, 0, 0, 0.10560800978110423, 2.16735494571412, 3], \"85\": [4, 5, 6, 136, 0.4825218476031389, 0.6775218626568644, 0.8735288725360734, 6.576329203774362, 1], \"541\": [1, 2, 2, 7, 0, 0.1735948056557174, 0.1735948056557174, 1.2006497535585237, 2], \"463\": [1, 1, 1, 56, 0, 0, 0, 4.756122479114401, 4], \"721\": [5, 5, 7, 68, 0.5262190008387144, 0.5262190008387144, 0.8575341702404932, 4.860499320778078, 1], \"21\": [9, 13, 21, 148, 0.19396945307727467, 0.3692279594288555, 0.7726205279350474, 4.075600570990309, 1], \"89\": [2, 3, 3, 21, 0.2295744416445002, 0.4578330936254804, 0.4578330936254804, 3.382748676109822, 1], \"652\": [2, 4, 16, 82, 0.37827896780400755, 1.0434802179733935, 3.4152740835725175, 6.651408505230845, 1], \"100\": [4, 5, 10, 63, 0.013303596890516519, 0.020709819026014487, 0.08038390024142347, 1.463758268955417, 1], \"221\": [0, 0, 3, 115, 0, 0, 0.20526312603636132, 5.816545900776823, 3], \"630\": [0, 0, 2, 16, 0, 0, 0.6061358035703156, 3.9951379121386528, 3], \"535\": [0, 0, 0, 23, 0, 0, 0, 4.017032944177151, 4], \"636\": [0, 0, 4, 46, 0, 0, 0.4559156889082516, 4.348856173833798, 3], \"78\": [2, 6, 9, 71, 0.0272496424473755, 0.22203796800646014, 0.44429617176394565, 3.5783259200350317, 1], \"568\": [0, 0, 0, 38, 0, 0, 0, 7.786413369382737, 4], \"398\": [0, 0, 2, 24, 0, 0, 0.1636294237818021, 3.280911215787653, 3], \"203\": [0, 0, 4, 27, 0, 0, 0.188348264660815, 2.345932393652335, 3], \"419\": [1, 2, 16, 51, 0, 0.291910408561302, 3.122140901785453, 5.400078190744582, 2], \"556\": [1, 2, 6, 18, 0, 0.20585205420414873, 1.1174807729724925, 2.9711467980813766, 2], \"833\": [0, 0, 2, 34, 0, 0, 0.28978070910870213, 4.586424143167036, 3], \"35\": [5, 8, 15, 64, 0.0840831172105414, 0.20258274193377665, 0.581921545449721, 2.732543107545248, 1], \"110\": [2, 2, 5, 47, 0.026650477991494073, 0.026650477991494073, 0.15598174090841047, 2.7672996075761325, 1], \"312\": [2, 4, 6, 38, 0.18315872720701828, 0.5900175637637866, 1.0328446484306069, 4.29813965444692, 1], \"402\": [0, 3, 3, 20, 0, 0.2840257612486704, 0.2840257612486704, 2.7471773294910227, 2], \"720\": [0, 0, 9, 27, 0, 0, 2.705748704113931, 4.841740435788597, 3], \"820\": [1, 1, 1, 17, 0, 0, 0, 2.505128812169187, 4], \"887\": [0, 0, 1, 64, 0, 0, 0, 7.676376040181324, 4], \"202\": [2, 2, 23, 115, 0.03404584140971713, 0.03404584140971713, 1.7192042924173938, 4.749289270064732, 1], \"213\": [2, 7, 21, 55, 0.05083686690269261, 0.4939964072229912, 1.9094942155346453, 3.6998039188875467, 1], \"237\": [1, 1, 3, 31, 0, 0, 0.11747520126885172, 2.660976015322905, 3], \"406\": [2, 3, 5, 77, 0.4369283775639494, 0.8032907596583713, 1.4871928820742655, 6.700966974499372, 1], \"818\": [0, 0, 0, 8, 0, 0, 0, 5.36753243556951, 4], \"318\": [0, 0, 1, 28, 0, 0, 0, 4.570679730917609, 4], \"808\": [1, 2, 16, 91, 0, 0.33647223662121295, 3.280911215787653, 6.720340775122173, 2], \"865\": [3, 7, 24, 212, 0.6876375247489758, 1.8538912503350613, 4.125232324178869, 8.402861279130404, 1], \"483\": [0, 0, 0, 3, 0, 0, 0, 1.6650077635889111, 4], \"324\": [1, 1, 1, 38, 0, 0, 0, 5.487559366186565, 4], \"903\": [2, 2, 2, 9, 0.42285685082003355, 0.42285685082003355, 0.42285685082003355, 2.45598361031875, 1], \"277\": [0, 1, 2, 25, 0, 0, 0.5465437063680699, 4.741765063166549, 3], \"562\": [0, 0, 11, 63, 0, 0, 4.2217575323444105, 7.756069429494231, 3], \"18\": [5, 7, 9, 96, 0.20700668998073374, 0.3721026998418289, 0.5568520828138047, 4.451830278285566, 1], \"247\": [3, 3, 4, 68, 1.0986122886681096, 1.0986122886681096, 1.5163474893680884, 6.935910723730992, 1], \"115\": [2, 3, 5, 43, 0.11540167715731688, 0.24312605090154807, 0.5678820956108461, 4.052555824647391, 1], \"384\": [1, 4, 9, 64, 0, 0.8241754429663495, 2.012232791986386, 5.795084633062987, 2], \"850\": [0, 0, 1, 35, 0, 0, 0, 3.9810845440853506, 4], \"302\": [0, 0, 4, 23, 0, 0, 4.3370925863621554, 7.880804344674901, 3], \"765\": [1, 2, 5, 36, 0, 0.7328875092094594, 2.0485643031153966, 5.861555927937364, 2], \"792\": [0, 1, 8, 52, 0, 0, 0.2625085750240587, 2.6161488388183884, 3], \"727\": [0, 0, 2, 82, 0, 0, 0.8109302162163288, 7.650763478713007, 3], \"857\": [0, 0, 0, 11, 0, 0, 0, 2.892716424855419, 4], \"884\": [0, 0, 0, 6, 0, 0, 0, 2.9444389791664403, 4], \"278\": [3, 3, 24, 107, 0.1100008952143285, 0.1100008952143285, 2.1332027185712885, 5.003408554945901, 1], \"320\": [0, 0, 0, 20, 0, 0, 0, 6.2166061010848646, 4], \"527\": [0, 0, 0, 18, 0, 0, 0, 6.47543271670409, 4], \"689\": [0, 0, 1, 8, 0, 0, 0, 2.4877760922159533, 4], \"912\": [3, 5, 40, 175, 0.1769307081590782, 0.4302451371066513, 3.5286787541305915, 6.491636851046463, 1], \"564\": [3, 4, 5, 14, 0.9264088620397397, 1.3115342859107813, 1.6558038329920262, 3.532820174407118, 1], \"27\": [3, 6, 8, 52, 0.020624012397236508, 0.08006051790551516, 0.13818021352843274, 1.9824774132401157, 1], \"209\": [1, 1, 3, 49, 0, 0, 0.06779704115233462, 2.981326591975149, 3], \"39\": [5, 9, 13, 63, 0.14409229247637959, 0.4069106426913169, 0.7167353472655807, 3.242839337410996, 1], \"657\": [0, 0, 0, 8, 0, 0, 0, 1.092401088575469, 4], \"188\": [1, 1, 6, 42, 0, 0, 0.7044467358138786, 3.9340513180410546, 3], \"94\": [2, 2, 6, 69, 0.024243611609992773, 0.024243611609992773, 0.19955462391773007, 3.408126286497582, 1], \"239\": [3, 8, 26, 154, 0.09162049700888575, 0.5201635523995949, 2.104965884837467, 5.536687683601447, 1], \"276\": [0, 0, 1, 34, 0, 0, 0, 5.156392639277642, 4], \"104\": [3, 5, 10, 83, 0.031951599806602365, 0.08634978252289104, 0.30803628344355427, 3.2523915397326695, 1], \"199\": [0, 1, 2, 24, 0, 0, 0.023516662802923808, 1.4876163939886455, 3], \"377\": [1, 1, 4, 22, 0, 0, 0.5124978649583528, 3.0564061188697345, 3], \"55\": [2, 4, 8, 89, 0.01759060308959439, 0.0685787070577552, 0.24993321259170756, 3.5874547892517796, 1], \"605\": [0, 1, 2, 17, 0, 0, 0.0276069982440099, 1.1060489950308336, 3], \"437\": [0, 0, 2, 26, 0, 0, 0.08252102368800351, 2.7432651073932766, 3], \"37\": [3, 5, 11, 86, 0.1468431003761763, 0.3642036497267385, 1.1399262535395043, 4.875063156243589, 1], \"404\": [1, 1, 2, 14, 0, 0, 0.15123096972392353, 2.1972245773362196, 3], \"432\": [0, 0, 2, 16, 0, 0, 0.5543107357057295, 3.8796528476198926, 3], \"363\": [0, 0, 1, 41, 0, 0, 0, 6.068484940708739, 4], \"460\": [2, 3, 5, 48, 0.19478832555908462, 0.39465419200394874, 0.851895569635833, 4.827280946092502, 1], \"595\": [1, 3, 6, 35, 0, 0.04625696157576713, 0.17342712978954067, 2.0074052294639424, 2], \"416\": [4, 5, 7, 52, 0.18615053403105197, 0.27739920549619695, 0.48649100335475637, 3.571727613074205, 1], \"501\": [2, 2, 3, 23, 0.19105523676270922, 0.19105523676270922, 0.38776553100876343, 3.361836307781575, 1], \"609\": [0, 0, 2, 23, 0, 0, 1.0663514264498883, 5.533012982698976, 3], \"157\": [1, 1, 2, 56, 0, 0, 0.6061358035703156, 6.4836169056083515, 3], \"261\": [0, 0, 3, 38, 0, 0, 0.3161972427598021, 4.10543980651404, 3], \"417\": [4, 5, 16, 132, 0.2776317365982795, 0.4054651081081644, 1.8115620965242347, 5.856446335429894, 1], \"567\": [1, 3, 5, 28, 0, 0.10648348040245009, 0.2716364238085919, 2.37841264877304, 2], \"629\": [0, 0, 2, 7, 0, 0, 0.5877866649021191, 2.379546134130174, 3], \"505\": [0, 0, 0, 31, 0, 0, 0, 6.081803714190286, 4], \"370\": [0, 0, 1, 16, 0, 0, 0, 4.5264361454455875, 4], \"496\": [1, 2, 2, 20, 0, 0.05320403606346461, 0.05320403606346461, 1.8663227111369658, 2], \"424\": [11, 14, 26, 80, 0.7491528565200857, 1.0319209141694374, 1.978296399192573, 4.094114120926001, 1], \"719\": [1, 2, 2, 15, 0, 0.3643378166843015, 0.3643378166843015, 3.2474739609740606, 2], \"421\": [0, 1, 1, 22, 0, 0, 0, 3.8428953539692943, 4], \"410\": [4, 4, 11, 211, 0.38101401224400006, 0.38101401224400006, 1.5056864075819747, 7.163531558031602, 1], \"123\": [0, 1, 3, 19, 0, 0, 0.16370399777788422, 2.0961004276664745, 3], \"395\": [1, 1, 3, 28, 0, 0, 0.4396392879207579, 3.893821549560284, 3], \"378\": [0, 0, 3, 50, 0, 0, 0.18726735344577217, 4.064026890876523, 3], \"499\": [0, 0, 2, 17, 0, 0, 1.791759469228055, 5.8923345812007915, 3], \"523\": [0, 0, 2, 14, 0, 0, 0.10705399616415937, 1.8774359946198476, 3], \"678\": [1, 1, 4, 14, 0, 0, 0.43571951646596674, 2.039845331415177, 3], \"131\": [0, 0, 2, 32, 0, 0, 0.0734274685548172, 3.0206571472068395, 3], \"270\": [0, 0, 0, 26, 0, 0, 0, 3.136343593103657, 4], \"181\": [1, 1, 3, 17, 0, 0, 0.1599143845440084, 1.8822703889720145, 3], \"593\": [1, 1, 8, 50, 0, 0, 2.6821866905122906, 6.278361737152052, 3], \"74\": [4, 5, 10, 44, 0.08329474305991373, 0.12726860836956136, 0.4336560918417938, 2.443243579017791, 1], \"389\": [2, 3, 3, 46, 0.07262718841407138, 0.15656906069153992, 0.15656906069153992, 3.7098906857116973, 1], \"383\": [0, 1, 4, 22, 0, 0, 0.11692133805890229, 1.5585525315745392, 3], \"552\": [0, 1, 15, 74, 0, 0, 4.536005039613109, 7.775640989900994, 3], \"60\": [1, 1, 5, 21, 0, 0, 0.623288882796565, 2.7886783109903837, 3], \"405\": [0, 1, 2, 11, 0, 0, 0.23499359123170555, 2.1986951658365417, 3], \"408\": [0, 0, 2, 13, 0, 0, 0.08994823666293948, 1.6047209225559615, 3], \"344\": [3, 3, 5, 58, 0.06286986221654821, 0.06286986221654821, 0.1657221570563033, 3.228976051330065, 1], \"45\": [2, 3, 8, 62, 0.02454110891611761, 0.05439407206579877, 0.3346960372199571, 3.2138944945179966, 1], \"611\": [1, 1, 2, 12, 0, 0, 0.3101549283038395, 2.645529844120876, 3], \"97\": [0, 1, 7, 43, 0, 0, 0.8195287214715606, 3.8898091833814474, 3], \"231\": [0, 0, 2, 44, 0, 0, 0.025609594204324387, 2.606764573031174, 3], \"191\": [0, 0, 2, 29, 0, 0, 0.03640074305379057, 2.1740985467156237, 3], \"293\": [0, 0, 0, 15, 0, 0, 0, 3.4469800247676323, 4], \"294\": [0, 0, 0, 22, 0, 0, 0, 5.922402991943679, 4], \"338\": [0, 0, 3, 27, 0, 0, 0.10438204199854623, 2.2937441709691435, 3], \"251\": [0, 0, 0, 13, 0, 0, 0, 4.31050728239497, 4], \"373\": [0, 0, 4, 33, 0, 0, 0.403392568506192, 3.5501883667402705, 3], \"83\": [2, 2, 5, 26, 0.029741969198737523, 0.029741969198737523, 0.17284281283941086, 1.8085980335908847, 1], \"95\": [0, 0, 2, 24, 0, 0, 0.2016859239757458, 3.5019102421751054, 3], \"309\": [0, 1, 2, 30, 0, 0, 0.09763846956391599, 3.1812538330786166, 3], \"397\": [0, 0, 0, 8, 0, 0, 0, 2.1539745935424026, 4], \"292\": [0, 1, 2, 17, 0, 0, 0.10591901888373739, 2.2052617148808684, 3], \"401\": [0, 0, 0, 27, 0, 0, 0, 4.37433584590591, 4], \"321\": [0, 0, 1, 8, 0, 0, 0, 2.743768283704289, 4], \"24\": [2, 3, 3, 33, 0.04401150329993394, 0.09643440701660581, 0.09643440701660581, 2.58397632844488, 1], \"306\": [1, 1, 3, 9, 0, 0, 1.2144441041932312, 3.1052944760655175, 3], \"225\": [0, 1, 3, 13, 0, 0, 0.14063696066053546, 1.3443181772894062, 3], \"179\": [0, 1, 2, 21, 0, 0, 0.11540167715731688, 2.6731991320264985, 3], \"409\": [2, 2, 3, 22, 0.07508215635156526, 0.07508215635156526, 0.1616413515564159, 2.345136585222612, 1], \"354\": [1, 1, 7, 75, 0, 0, 1.252762968495368, 5.662925048669257, 3], \"154\": [0, 1, 5, 21, 0, 0, 0.6449003470205599, 2.831933753350591, 3], \"47\": [0, 0, 2, 20, 0, 0, 0.07940677760441046, 2.2261858774754186, 3], \"16\": [0, 1, 5, 45, 0, 0, 0.24155230072427963, 3.1411800876795026, 3], \"411\": [0, 0, 0, 5, 0, 0, 0, 0, 4], \"379\": [1, 1, 3, 25, 0, 0, 1.6274564179367788, 5.652808108671928, 3], \"374\": [0, 0, 1, 23, 0, 0, 0, 2.3053117477167553, 4], \"40\": [1, 2, 4, 18, 0, 0.04154283751370906, 0.156722736620045, 1.489717688808741, 2], \"442\": [0, 0, 2, 38, 0, 0, 0.09933718986563198, 3.6559003183332135, 3], \"368\": [1, 1, 1, 25, 0, 0, 0, 3.381303841142585, 4], \"272\": [0, 0, 2, 6, 0, 0, 0.8668106746107854, 2.596283513631972, 3], \"356\": [1, 1, 1, 9, 0, 0, 0, 3.0099169085459474, 4], \"119\": [1, 1, 2, 23, 0, 0, 0.07622736538788424, 2.4401923264984924, 3], \"451\": [2, 2, 2, 23, 0.07988277164760574, 0.07988277164760574, 0.07988277164760574, 2.4847333846052053, 1], \"422\": [0, 0, 0, 7, 0, 0, 0, 2.8526314299133175, 4], \"61\": [0, 1, 3, 14, 0, 0, 0.08925643449076202, 1.1096165262591235, 3], \"185\": [0, 2, 2, 13, 0, 0.08533960173261773, 0.08533960173261773, 1.5610708213401514, 2], \"313\": [0, 0, 0, 7, 0, 0, 0, 2.2934526094307732, 4], \"469\": [0, 0, 0, 5, 0, 0, 0, 4.43477720005941, 4], \"475\": [0, 1, 2, 24, 0, 0, 0.5108256237659907, 4.574710978503383, 3], \"438\": [0, 1, 3, 35, 0, 0, 0.1896419516496191, 3.381751999131152, 3], \"484\": [0, 0, 0, 9, 0, 0, 0, 4.22683374526818, 4], \"530\": [0, 0, 2, 13, 0, 0, 0.08533960173261773, 1.5610708213401514, 3], \"516\": [0, 1, 3, 15, 0, 0, 0.24116205681688807, 2.056452023455137, 3], \"458\": [0, 0, 5, 17, 0, 0, 2.3978952727983707, 4.758749273916392, 3], \"557\": [0, 0, 2, 21, 0, 0, 0.07369816407476748, 2.2441211371688152, 3], \"175\": [2, 2, 4, 37, 0.03110670713225487, 0.03110670713225487, 0.11901099827011974, 2.469250233392883, 1], \"545\": [0, 0, 1, 5, 0, 0, 0, 1.289667525430819, 4], \"301\": [0, 0, 3, 29, 0, 0, 0.34967374847974886, 3.691782213771898, 3], \"172\": [1, 1, 2, 13, 0, 0, 0.06422752751043395, 1.335699086130719, 3], \"644\": [0, 0, 0, 3, 0, 0, 0, 3.828641396489095, 4], \"914\": [0, 0, 0, 20, 0, 0, 0, 5.2084921169742815, 4], \"761\": [3, 6, 18, 42, 0.851553185957342, 1.8520913938376586, 3.86082805849831, 5.577022701215251, 1], \"212\": [2, 4, 12, 86, 0.07302513501488987, 0.2646925542270822, 1.3156767939059373, 4.949297033862104, 1], \"257\": [2, 2, 3, 20, 0.09983345855568045, 0.09983345855568045, 0.21205871888971678, 2.4422329126871976, 1], \"314\": [0, 0, 0, 12, 0, 0, 0, 1.395743250317823, 4], \"316\": [2, 3, 6, 40, 0.19966567025192705, 0.4036217896138752, 1.094922247580656, 4.4930959621339825, 1], \"326\": [0, 0, 2, 20, 0, 0, 0.04008552707565072, 1.62727381289272, 3], \"331\": [0, 0, 0, 4, 0, 0, 0, 1.4825711915553106, 4], \"357\": [0, 0, 0, 3, 0, 0, 0, 0.7407752295491999, 4], \"480\": [0, 0, 0, 28, 0, 0, 0, 3.623410267483412, 4], \"481\": [0, 0, 0, 2, 0, 0, 0, 0.6466271649250525, 4], \"493\": [2, 2, 6, 31, 0.1042610103244094, 0.1042610103244094, 0.6876375247489758, 3.310583118469327, 1], \"506\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"514\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"520\": [0, 0, 0, 3, 0, 0, 0, 0.30961714931803663, 4], \"521\": [0, 0, 0, 4, 0, 0, 0, 0.8618435713895825, 4], \"522\": [0, 0, 0, 4, 0, 0, 0, 2.1972245773362196, 4], \"526\": [0, 0, 0, 2, 0, 0, 0, 0.5245244681241525, 4], \"531\": [0, 0, 0, 3, 0, 0, 0, 2.3978952727983707, 4], \"533\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"551\": [0, 0, 6, 39, 0, 0, 0.9113197191521346, 4.156555997629486, 3], \"569\": [0, 0, 1, 2, 0, 0, 0, 0.680877087968131, 4], \"581\": [0, 0, 0, 11, 0, 0, 0, 2.5543351562197634, 4], \"583\": [0, 0, 0, 7, 0, 0, 0, 1.4407077828436847, 4], \"587\": [0, 0, 1, 11, 0, 0, 0, 4.338923394256375, 4], \"638\": [0, 0, 0, 4, 0, 0, 0, 1.9042374526547454, 4], \"643\": [1, 2, 3, 10, 0, 0.0376692370931146, 0.08284403644981601, 0.6727877764112986, 2], \"651\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"656\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"665\": [1, 1, 3, 21, 0, 0, 0.6103748942760823, 3.742774501192698, 3], \"667\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"668\": [0, 0, 0, 3, 0, 0, 0, 1.0560526742493137, 4], \"726\": [1, 1, 6, 23, 0, 0, 2.1400661634962708, 4.7114053190565786, 3], \"748\": [0, 0, 1, 8, 0, 0, 0, 1.7002880657308959, 4], \"757\": [0, 0, 2, 5, 0, 0, 1.6094379124341003, 3.258096538021482, 3], \"760\": [0, 0, 0, 5, 0, 0, 0, 3.7534179752515073, 4], \"770\": [0, 0, 1, 8, 0, 0, 0, 2.8815611282140097, 4], \"779\": [0, 0, 0, 5, 0, 0, 0, 1.7129785913749407, 4], \"786\": [0, 0, 2, 19, 0, 0, 0.9808292530117262, 5.02003541860817, 3], \"794\": [0, 0, 20, 54, 0, 0, 3.3937355586180407, 5.350834731599203, 3], \"795\": [1, 1, 1, 7, 0, 0, 0, 1.6890647332228734, 4], \"796\": [0, 0, 0, 8, 0, 0, 0, 2.3699604954668168, 4], \"798\": [0, 0, 0, 4, 0, 0, 0, 1.9042374526547454, 4], \"804\": [0, 0, 2, 42, 0, 0, 0.5543107357057295, 5.791996831479057, 3], \"805\": [0, 0, 0, 2, 0, 0, 0, 1.0663514264498883, 4], \"826\": [0, 2, 2, 14, 0, 1.0360919316867756, 1.0360919316867756, 4.500819261531618, 2], \"827\": [0, 0, 2, 109, 0, 0, 0.7621400520468967, 8.119748326564057, 3], \"831\": [0, 0, 0, 3, 0, 0, 0, 1.6274564179367788, 4], \"834\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"861\": [4, 4, 9, 34, 0.535302370192545, 0.535302370192545, 1.5225874235471424, 3.954132666125573, 1], \"863\": [2, 3, 4, 18, 0.6576404921030354, 1.1291490125281913, 1.552005863348225, 4.335312801808031, 1], \"867\": [0, 2, 4, 49, 0, 1.007640510462383, 2.0739919369122712, 6.951688948954077, 2], \"868\": [0, 0, 0, 3, 0, 0, 0, 1.591893602783191, 4], \"869\": [0, 1, 7, 18, 0, 0, 2.6315101239798757, 4.457402599577389, 3], \"870\": [0, 0, 1, 16, 0, 0, 0, 5.54907608489522, 4], \"871\": [0, 0, 2, 27, 0, 0, 0.09159716909540325, 2.9167980639791917, 3], \"875\": [0, 1, 3, 27, 0, 0, 0.8873031950009028, 4.75972894580469, 3], \"877\": [1, 1, 4, 24, 0, 0, 1.2872888373444415, 4.558353483098425, 3], \"885\": [0, 0, 0, 27, 0, 0, 0, 5.678806488586024, 4], \"889\": [0, 1, 1, 13, 0, 0, 0, 2.6319437565264563, 4], \"894\": [0, 0, 0, 19, 0, 0, 0, 4.674476733763687, 4], \"895\": [0, 1, 1, 10, 0, 0, 0, 3.0256717381526252, 4], \"911\": [0, 0, 0, 2, 0, 0, 0, 1.4053425560905852, 4], \"913\": [0, 0, 0, 3, 0, 0, 0, 1.4384801142904609, 4], \"923\": [0, 1, 2, 23, 0, 0, 0.5465437063680699, 4.5765836382266745, 3], \"925\": [0, 0, 3, 23, 0, 0, 1.0986122886681096, 4.775381673965534, 3], \"930\": [0, 0, 4, 38, 0, 0, 0.9808292530117262, 5.02003541860817, 3], \"753\": [0, 0, 4, 61, 0, 0, 1.0434802179733935, 6.060760054788318, 3], \"904\": [1, 1, 2, 10, 0, 0, 0.10008345855698253, 1.289667525430819, 3], \"907\": [5, 7, 15, 64, 0.19245677868799768, 0.34780721870716, 1.0681589155061384, 3.5771318611755434, 1], \"854\": [0, 1, 3, 19, 0, 0, 0.3043409584384197, 2.7258098739387613, 3], \"893\": [1, 3, 7, 24, 0, 0.22094333040460734, 0.8527773261518292, 2.822816889140834, 2], \"936\": [4, 5, 16, 71, 1.252762968495368, 1.5905099025485816, 3.6752960316117913, 6.6703305478370964, 1], \"940\": [1, 3, 4, 329, 0, 0.2608348224155929, 0.42513787370686923, 8.174073531251324, 2], \"942\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"784\": [1, 1, 2, 11, 0, 0, 0.09374540917097383, 1.379514674134512, 3], \"114\": [1, 2, 4, 31, 0, 0.05945286991347217, 0.21915398027137953, 2.754723344369283, 2], \"947\": [0, 0, 2, 34, 0, 0, 0.680877087968131, 5.645274513571099, 3], \"949\": [0, 0, 0, 23, 0, 0, 0, 5.868354849945874, 4], \"950\": [0, 0, 2, 19, 0, 0, 0.3746934494414107, 3.7382105974688637, 3], \"952\": [0, 0, 2, 6, 0, 0, 0.7621400520468967, 2.423537703411708, 3], \"52\": [0, 3, 4, 10, 0, 0.1649065151922765, 0.276665436245279, 1.095952712632351, 2], \"144\": [0, 1, 4, 19, 0, 0, 0.14107859825990554, 1.4858139883151684, 3], \"674\": [0, 0, 2, 10, 0, 0, 0.23361485118150516, 2.02537432040956, 3], \"86\": [0, 2, 2, 12, 0, 0.08303522860999034, 0.08303522860999034, 1.4150963520235968, 2], \"92\": [1, 2, 4, 32, 0, 0.0483185772708077, 0.18067002875548166, 2.6154426365680328, 2], \"258\": [1, 4, 5, 19, 0, 0.25658186347459155, 0.37640587636823386, 2.0281001368306564, 2], \"789\": [0, 0, 4, 30, 0, 0, 0.23887082880216812, 2.7835945458202223, 3], \"234\": [2, 2, 7, 69, 0.029808466297826082, 0.029808466297826082, 0.31528546619129305, 3.6112858377551755, 1], \"815\": [0, 0, 1, 11, 0, 0, 0, 3.084753124450752, 4], \"926\": [0, 0, 3, 19, 0, 0, 0.8430873278508602, 3.9906166999881596, 3], \"962\": [0, 0, 0, 8, 0, 0, 0, 2.8099902394452045, 4], \"917\": [0, 0, 3, 16, 0, 0, 0.4554755286828257, 2.8570594814290495, 3], \"965\": [0, 1, 2, 360, 0, 0, 0.18149202543157925, 8.612695888708952, 3], \"967\": [1, 1, 4, 16, 0, 0, 0.462623521948113, 2.342936388517613, 3], \"969\": [1, 3, 4, 16, 0, 0.18805223150293965, 0.31321537445694564, 1.9293534794608656, 2], \"972\": [1, 1, 4, 40, 0, 0, 1.264037045068586, 5.5411390431662335, 3], \"968\": [0, 0, 0, 13, 0, 0, 0, 4.609279378738225, 4], \"902\": [0, 0, 7, 53, 0, 0, 2.261397534587431, 6.202144788118037, 3], \"976\": [8, 10, 19, 136, 2.4163324271691566, 2.7842401310339016, 4.043081331602773, 7.990616616850014, 1], \"956\": [0, 0, 3, 23, 0, 0, 1.7047480922384253, 5.581614840681993, 3], \"977\": [1, 1, 2, 16, 0, 0, 1.0663514264498883, 4.811409761995191, 3], \"978\": [2, 3, 3, 30, 0.17135825199668508, 0.35105168638437023, 0.35105168638437023, 3.7625033304740105, 1], \"979\": [0, 0, 2, 9, 0, 0, 0.3483066942682158, 2.244691114575143, 3], \"981\": [0, 1, 2, 5, 0, 0, 0.44685032427101873, 1.5087612460887005, 3], \"741\": [1, 2, 3, 14, 0, 0.4369283775639494, 0.8032907596583713, 3.3268083724799555, 2], \"945\": [0, 0, 0, 23, 0, 0, 0, 3.2338779357220218, 4], \"984\": [0, 0, 10, 128, 0, 0, 2.3281806401830094, 7.325173356233058, 3], \"953\": [0, 0, 0, 3, 0, 0, 0, 0.2813443418672318, 4], \"955\": [0, 0, 0, 10, 0, 0, 0, 2.8407748167567926, 4], \"985\": [0, 0, 1, 8, 0, 0, 0, 2.55348791394253, 4], \"886\": [0, 1, 2, 9, 0, 0, 0.291910408561302, 2.062347108320536, 3], \"87\": [0, 1, 2, 16, 0, 0, 0.322773392263051, 3.2339989864424217, 3], \"90\": [2, 3, 5, 18, 0.04927104900678274, 0.10763066419236544, 0.2743358304988864, 1.6274564179367788, 1], \"988\": [1, 1, 6, 82, 0, 0, 1.8647846042429448, 6.92734992267856, 3], \"989\": [0, 0, 0, 4, 0, 0, 0, 1.717651497074333, 4], \"766\": [0, 0, 2, 28, 0, 0, 0.29407187055055195, 4.219633388579779, 3], \"838\": [0, 2, 5, 14, 0, 0.10969891725642447, 0.5450169885142699, 1.8992915383993891, 2], \"991\": [0, 0, 0, 15, 0, 0, 0, 4.236738085063315, 4], \"992\": [0, 0, 1, 3, 0, 0, 0, 2.1400661634962708, 4], \"932\": [2, 2, 3, 11, 0.06613980250454501, 0.06613980250454501, 0.14310084364067333, 1.1211484536905227, 1], \"810\": [0, 0, 3, 20, 0, 0, 1.7047480922384253, 5.303304908059076, 3], \"975\": [1, 4, 12, 34, 0, 0.205321866637882, 1.1155618469818829, 2.8603269242968223, 2], \"1000\": [0, 0, 0, 4, 0, 0, 0, 2.9326741375868544, 4], \"1003\": [0, 0, 0, 31, 0, 0, 0, 7.784681287334015, 4], \"1002\": [1, 2, 2, 3, 0, 0.5877866649021191, 0.5877866649021191, 1.0296194171811583, 2], \"733\": [1, 3, 6, 48, 0, 0.13636827395972229, 0.4602156228795727, 3.6481250979987934, 2], \"744\": [1, 1, 14, 73, 0, 0, 1.648081948057704, 4.745899912399628, 3], \"178\": [2, 2, 3, 7, 0.07893642545877254, 0.07893642545877254, 0.16957814342550975, 0.6962225289601929, 1], \"476\": [0, 0, 2, 6, 0, 0, 0.18232155679395462, 1.0296194171811583, 3], \"1008\": [0, 1, 3, 27, 0, 0, 0.6563976383512038, 4.332765999025355, 3], \"547\": [1, 2, 3, 30, 0, 0.04587960575069364, 0.10041874774704733, 2.447843232411113, 2], \"816\": [0, 1, 2, 13, 0, 0, 0.15970111035790735, 2.1181834522467633, 3], \"1017\": [3, 9, 19, 153, 0.9473813189441862, 2.6654530232231006, 4.125801865144259, 8.2447426880198, 1], \"1014\": [0, 1, 6, 79, 0, 0, 0.34393738002030483, 4.278928223420497, 3], \"1021\": [0, 0, 0, 25, 0, 0, 0, 4.67219502046509, 4], \"860\": [0, 0, 2, 15, 0, 0, 0.15843334161925918, 2.366184331942466, 3], \"1019\": [2, 2, 3, 55, 0.042334363826560736, 0.042334363826560736, 0.09285015396346252, 3.517578033035812, 1], \"443\": [1, 2, 4, 35, 0, 0.0433907545137394, 0.1632946817392605, 2.6797145972333376, 2], \"1030\": [0, 0, 0, 3, 0, 0, 0, 1.591893602783191, 4], \"772\": [1, 3, 8, 28, 0, 0.6514744841593773, 2.0189763459299006, 4.394449154672439, 2], \"960\": [0, 0, 2, 8, 0, 0, 0.7191226669632059, 2.8815611282140097, 3], \"473\": [0, 0, 2, 4, 0, 0, 0.462623521948113, 1.209837923778334, 3], \"691\": [1, 2, 3, 7, 0, 0.19574457712609533, 0.3964152725882465, 1.294356865794205, 2], \"958\": [1, 1, 2, 5, 0, 0, 0.2646925542270822, 1.0626186860202043, 3], \"1013\": [1, 2, 9, 38, 0, 0.02967576814611661, 0.4761967615486114, 2.474308518796177, 2], \"1023\": [3, 3, 11, 107, 0.17798315519535646, 0.17798315519535646, 1.286210902562908, 5.516705037827304, 1], \"690\": [2, 3, 5, 90, 0.5705448584676129, 1.0045833390198333, 1.7591832987934422, 7.351602484403792, 1], \"1036\": [0, 0, 4, 28, 0, 0, 0.1548983434134889, 2.220227316690928, 3], \"197\": [3, 3, 3, 10, 0.038881787544207395, 0.038881787544207395, 0.038881787544207395, 0.3650101534158507, 1], \"366\": [3, 6, 67, 196, 0.8187244879431477, 1.8034282130624324, 5.734206310573645, 8.47353043589888, 1], \"1042\": [0, 0, 4, 14, 0, 0, 1.791759469228055, 4.131158535344817, 3], \"1028\": [0, 1, 3, 45, 0, 0, 0.23240287672700652, 4.092113392843298, 3], \"1049\": [0, 3, 5, 201, 0, 1.4384801142904609, 2.295416603515433, 8.926714204318545, 2], \"511\": [0, 0, 1, 2, 0, 0, 0, 0.8668106746107854, 4], \"1051\": [0, 0, 15, 72, 0, 0, 3.9848955806566706, 7.143135846790885, 3], \"1052\": [0, 0, 1, 93, 0, 0, 0, 8.64403757724464, 4], \"1025\": [0, 0, 4, 17, 0, 0, 0.6466271649250525, 2.8576450643936075, 3], \"1056\": [0, 3, 5, 43, 0, 0.15656906069153992, 0.38581312859774713, 3.578536889710902, 2], \"1057\": [0, 0, 0, 2, 0, 0, 0, 1.133098464739279, 4], \"1064\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1065\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"735\": [0, 0, 2, 61, 0, 0, 0.047012181997054606, 3.823790009576123, 3], \"1067\": [0, 0, 0, 41, 0, 0, 0, 8.110109697726289, 4], \"1069\": [0, 0, 0, 19, 0, 0, 0, 4.513602992462601, 4], \"1073\": [0, 1, 2, 16, 0, 0, 0.18485641239714268, 2.6386946822858084, 3], \"1076\": [0, 0, 1, 42, 0, 0, 0, 7.581209826196346, 4], \"1022\": [2, 2, 4, 17, 0.3281156420302715, 0.3281156420302715, 0.9374250439481288, 3.369302519623063, 1], \"1078\": [0, 0, 3, 15, 0, 0, 0.2457952697383762, 2.0751754890590877, 3], \"1080\": [0, 0, 0, 8, 0, 0, 0, 2.833213344056216, 4], \"1081\": [0, 0, 0, 16, 0, 0, 0, 4.638604962074329, 4], \"1087\": [0, 0, 1, 21, 0, 0, 0, 4.104205690987881, 4], \"1034\": [0, 0, 2, 18, 0, 0, 0.27570588140506525, 3.2851984677992734, 3], \"1097\": [0, 1, 2, 42, 0, 0, 1.0986122886681096, 6.78332520060396, 3], \"1101\": [12, 20, 26, 45, 2.601922490721534, 3.306863989296218, 4.0610269739227665, 5.185325466627731, 1], \"998\": [0, 2, 2, 19, 0, 0.19105523676270922, 0.19105523676270922, 2.995732273553991, 2], \"1115\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1116\": [0, 0, 1, 12, 0, 0, 0, 1.7047480922384253, 4], \"1118\": [0, 0, 0, 2, 0, 0, 0, 0, 4], \"201\": [1, 2, 2, 8, 0, 0.033060862260888106, 0.033060862260888106, 0.4303626597298915, 2], \"1123\": [0, 0, 0, 12, 0, 0, 0, 4.242353974027276, 4], \"1124\": [0, 0, 2, 85, 0, 0, 1.4663370687934272, 8.544199592667356, 3], \"1126\": [0, 1, 2, 9, 0, 0, 0.5465437063680699, 2.755396321699408, 3], \"983\": [0, 1, 2, 93, 0, 0, 0.27958486221916157, 6.5489351786970165, 3], \"1134\": [0, 0, 0, 2, 0, 0, 0, 2.3978952727983707, 4], \"999\": [0, 0, 2, 6, 0, 0, 0.9808292530117262, 2.772588722239781, 3], \"1122\": [1, 2, 3, 16, 0, 0.5623075796011341, 0.9925527167077854, 3.8979623519684905, 2], \"1128\": [1, 1, 3, 26, 0, 0, 0.16222534433150315, 2.6552795224463526, 3], \"1142\": [0, 0, 5, 58, 0, 0, 1.5087612460887005, 6.162899595534697, 3], \"1144\": [1, 1, 3, 38, 0, 0, 1.4663370687934272, 6.2837886066252615, 3], \"1029\": [1, 3, 5, 22, 0, 0.20432784239539936, 0.48841001381371013, 2.5795678135922975, 2], \"1106\": [1, 2, 2, 8, 0, 1.791759469228055, 1.791759469228055, 4.394449154672439, 2], \"1145\": [0, 2, 5, 28, 0, 0.680877087968131, 1.9597512004671847, 5.258638011649341, 2], \"1167\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"922\": [0, 0, 2, 17, 0, 0, 0.3308542443169896, 3.378724525810097, 3], \"1092\": [0, 0, 2, 14, 0, 0, 0.30774963550259016, 2.9262566600832502, 3], \"1129\": [2, 2, 48, 185, 0.24664152258151367, 0.24664152258151367, 4.985334538013008, 7.780869848855604, 1], \"1077\": [0, 0, 3, 52, 0, 0, 2.3978952727983707, 7.997701723664363, 3], \"1156\": [0, 0, 1, 2, 0, 0, 0, 0.44685032427101873, 4], \"1160\": [0, 0, 0, 5, 0, 0, 0, 1.8086232752800597, 4], \"1177\": [0, 0, 0, 4, 0, 0, 0, 0.27054579020879366, 4], \"1168\": [0, 0, 0, 7, 0, 0, 0, 1.0231047361599646, 4], \"1188\": [0, 0, 0, 28, 0, 0, 0, 7.02197642307216, 4], \"1169\": [0, 0, 0, 3, 0, 0, 0, 1.4384801142904609, 4], \"1192\": [0, 0, 1, 71, 0, 0, 0, 7.427342408416701, 4], \"971\": [1, 8, 15, 37, 0, 2.03688192726104, 3.1961188377455847, 4.967060671977761, 2], \"1171\": [0, 0, 9, 46, 0, 0, 0.9847037251192848, 3.8024207018619567, 3], \"1185\": [0, 0, 0, 13, 0, 0, 0, 2.7615632522280738, 4], \"1200\": [0, 0, 1, 7, 0, 0, 0, 2.538973871058276, 4], \"1207\": [20, 34, 43, 184, 3.2782695088255602, 3.817223286204459, 4.693331692917024, 7.6959587700523056, 1], \"1196\": [0, 0, 11, 18, 0, 0, 3.5614507135904465, 4.567407233314919, 3], \"1210\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1211\": [0, 0, 0, 7, 0, 0, 0, 3.1047816292416197, 4], \"1221\": [0, 0, 0, 9, 0, 0, 0, 1.9984961957798308, 4], \"1224\": [0, 0, 0, 6, 0, 0, 0, 2.477302050402781, 4], \"1037\": [1, 2, 2, 12, 0, 0.8873031950009028, 0.8873031950009028, 3.959451698999257, 2], \"1232\": [0, 0, 0, 3, 0, 0, 0, 2.217225244042889, 4], \"1203\": [0, 1, 1, 9, 0, 0, 0, 2.12389330425067, 4], \"1241\": [1, 2, 4, 11, 0, 0.19966567025192705, 0.633385446017691, 2.039281160657617, 2], \"1242\": [0, 0, 0, 15, 0, 0, 0, 4.047427642434349, 4], \"1244\": [0, 0, 0, 4, 0, 0, 0, 1.9352717508502575, 4], \"1238\": [1, 1, 3, 30, 0, 0, 1.4663370687934272, 5.812138499293826, 3], \"1159\": [0, 0, 0, 3, 0, 0, 0, 0.9264088620397397, 4], \"1247\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1248\": [0, 0, 0, 26, 0, 0, 0, 6.1129444446456915, 4], \"1249\": [4, 6, 28, 188, 0.6778797084291569, 1.157452788691043, 3.843600116437718, 7.6699902760165655, 1], \"1251\": [0, 1, 1, 5, 0, 0, 0, 2.8716796248840124, 4], \"1254\": [0, 1, 6, 9, 0, 0, 1.1616252564968437, 1.7815448758183368, 3], \"1256\": [0, 0, 2, 4, 0, 0, 0.2646925542270822, 0.7939518796819109, 3], \"1257\": [0, 0, 3, 13, 0, 0, 2.069779630768099, 4.875197323201151, 3], \"1273\": [0, 0, 0, 34, 0, 0, 0, 5.5749155113230335, 4], \"267\": [0, 0, 2, 11, 0, 0, 1.252762968495368, 4.338923394256375, 3], \"1229\": [1, 1, 2, 14, 0, 0, 0.4096756406445079, 3.2507669181074337, 3], \"1287\": [0, 0, 0, 2, 0, 0, 0, 0.5108256237659907, 4], \"1296\": [1, 1, 2, 15, 0, 0, 0.6576404921030354, 3.976416167164342, 3], \"1305\": [0, 0, 1, 5, 0, 0, 0, 1.2672350011039024, 4], \"1263\": [0, 0, 5, 19, 0, 0, 1.1793477570205468, 3.5122175270342884, 3], \"1310\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"817\": [1, 1, 3, 25, 0, 0, 0.2457952697383762, 3.01307330504092, 3], \"1319\": [1, 4, 8, 73, 0, 0.19197498849459727, 0.6133249071427848, 4.269549438598859, 2], \"1250\": [1, 3, 8, 35, 0, 0.08208799691830035, 0.4752181468685134, 2.5372212855467113, 2], \"1324\": [0, 0, 3, 36, 0, 0, 2.005333569526114, 6.831645304157742, 3], \"1325\": [1, 3, 6, 18, 0, 0.49091031406504926, 1.2627730620904685, 3.170395471857265, 2], \"1330\": [1, 2, 8, 31, 0, 0.538996500732687, 2.5199979695992702, 5.15101816166988, 2], \"1331\": [0, 1, 1, 30, 0, 0, 0, 5.121977881431629, 4], \"1335\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1337\": [0, 0, 1, 5, 0, 0, 0, 2.8716796248840124, 4], \"1350\": [0, 0, 0, 6, 0, 0, 0, 3.2851984677992734, 4], \"1358\": [0, 0, 3, 18, 0, 0, 1.33828514193353, 4.627420794922911, 3], \"1361\": [0, 0, 5, 30, 0, 0, 3.3596034843633182, 6.90875477931522, 3], \"1364\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1165\": [0, 0, 3, 12, 0, 0, 1.7047480922384253, 4.290459441148391, 3], \"1380\": [2, 7, 12, 68, 0.3513978868378886, 1.8177349556313156, 2.7824087684207566, 6.189776002420251, 1], \"1384\": [0, 0, 1, 13, 0, 0, 0, 6.3356450934650255, 4], \"892\": [2, 4, 6, 26, 0.31259842371631547, 0.9033634973726954, 1.4592548862171357, 4.143425931984738, 1], \"843\": [1, 1, 2, 4, 0, 0, 0.7328875092094594, 1.6722858160937641, 3], \"1387\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1392\": [1, 1, 4, 6, 0, 0, 0.2295744416445002, 0.4578330936254804, 3], \"1393\": [0, 1, 1, 3, 0, 0, 0, 1.5260563034950494, 4], \"1394\": [0, 0, 0, 3, 0, 0, 0, 1.4954936530848826, 4], \"1396\": [0, 0, 0, 4, 0, 0, 0, 1.9352717508502575, 4], \"1398\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"986\": [0, 2, 4, 21, 0, 0.8286926725561692, 1.8182862235614836, 4.964647650806956, 2], \"1402\": [0, 0, 8, 105, 0, 0, 2.2197607423586323, 7.254504199464582, 3], \"1397\": [1, 2, 5, 22, 0, 0.13626487952018312, 0.648363577932972, 2.9266090494630617, 2], \"1405\": [0, 0, 0, 4, 0, 0, 0, 1.589732841354768, 4], \"1099\": [0, 1, 8, 17, 0, 0, 3.560557138336636, 5.0848490807572455, 3], \"1413\": [0, 0, 0, 10, 0, 0, 0, 4.035223439214303, 4], \"1414\": [1, 2, 88, 236, 0, 0.21472498084861397, 5.638250643373494, 8.102075673670326, 2], \"1417\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1060\": [2, 3, 3, 9, 0.705886206337375, 1.1962507582320256, 1.1962507582320256, 3.080497540181701, 1], \"1406\": [0, 0, 2, 8, 0, 0, 0.11311480443783152, 1.0702703106658347, 3], \"1422\": [0, 1, 5, 36, 0, 0, 1.8803128665695001, 5.666426688112432, 3], \"775\": [1, 1, 4, 10, 0, 0, 0.9679921062510455, 2.416278143398904, 3], \"1138\": [0, 0, 2, 6, 0, 0, 0.4978384282391795, 1.9178709289909204, 3], \"1443\": [0, 0, 0, 10, 0, 0, 0, 4.836281906951478, 4], \"1447\": [0, 1, 6, 35, 0, 0, 1.71505156060815, 5.0502616374015314, 3], \"1409\": [0, 0, 4, 25, 0, 0, 3.3202283191284883, 6.949536812997092, 3], \"174\": [1, 1, 2, 28, 0, 0, 0.2646925542270822, 4.100888758746314, 3], \"507\": [0, 0, 2, 4, 0, 0, 0.11540167715731688, 0.3983039521853364, 3], \"718\": [2, 3, 4, 13, 0.24973714088765747, 0.49365782014362525, 0.7583503743707075, 2.5638576542963425, 1], \"1468\": [0, 1, 2, 6, 0, 0, 0.16775633188303693, 0.9722307477564944, 3], \"1477\": [2, 2, 9, 42, 0.34228620648663277, 0.34228620648663277, 2.2262768999307214, 5.198497031265826, 1], \"1220\": [2, 2, 2, 9, 0.7472144018302211, 0.7472144018302211, 0.7472144018302211, 3.157000421150113, 1], \"1482\": [1, 3, 6, 14, 0, 0.19627990904466153, 0.6245845091226487, 1.7444741962380432, 2], \"1483\": [0, 0, 1, 8, 0, 0, 0, 2.743768283704289, 4], \"1485\": [0, 0, 1, 35, 0, 0, 0, 6.3240330702487215, 4], \"1488\": [0, 0, 11, 15, 0, 0, 3.8232630649036374, 4.472078257224739, 3], \"1489\": [0, 1, 1, 9, 0, 0, 0, 3.364914876480732, 4], \"554\": [0, 2, 2, 9, 0, 0.4274440148269396, 0.4274440148269396, 2.468099531471619, 2], \"1127\": [0, 1, 2, 7, 0, 0, 0.08036450976802707, 0.705621354785121, 3], \"1492\": [0, 2, 17, 118, 0, 0.27570588140506525, 3.1754048221763687, 7.008576938169021, 2], \"1493\": [0, 1, 1, 20, 0, 0, 0, 5.2084921169742815, 4], \"1501\": [0, 2, 2, 4, 0, 0.9555114450274365, 0.9555114450274365, 2.0014800002101243, 2], \"1055\": [0, 0, 3, 10, 0, 0, 0.5780778507751582, 2.271677555530969, 3], \"1508\": [1, 1, 1, 2, 0, 0, 0, 0.3201675275962693, 4], \"420\": [1, 1, 5, 21, 0, 0, 1.6696567724271552, 4.344253149642672, 3], \"1515\": [0, 0, 0, 2, 0, 0, 0, 0.8109302162163288, 4], \"1522\": [0, 0, 1, 40, 0, 0, 0, 6.127181050637842, 4], \"1176\": [0, 1, 3, 30, 0, 0, 1.252762968495368, 5.5254529391317835, 3], \"1537\": [1, 1, 1, 4, 0, 0, 0, 0.9873866535578852, 4], \"1539\": [1, 1, 1, 7, 0, 0, 0, 1.7666955005648388, 4], \"1543\": [0, 0, 0, 3, 0, 0, 0, 1.4663370687934272, 4], \"1545\": [0, 0, 1, 4, 0, 0, 0, 2.588342237036242, 4], \"446\": [2, 2, 2, 11, 0.705886206337375, 0.705886206337375, 0.705886206337375, 3.4665368639959313, 1], \"1121\": [1, 2, 2, 10, 0, 0.18315872720701828, 0.18315872720701828, 1.7959383303030219, 2], \"1549\": [1, 1, 5, 73, 0, 0, 1.131673150928998, 6.106611056961443, 3], \"1538\": [2, 2, 19, 186, 0.2113090936672069, 0.2113090936672069, 3.101680851563372, 7.6187712689669125, 1], \"1552\": [0, 0, 1, 6, 0, 0, 0, 1.8034282130624324, 4], \"1555\": [0, 0, 0, 9, 0, 0, 0, 3.6327899874628926, 4], \"1557\": [0, 1, 1, 5, 0, 0, 0, 2.4350742760401247, 4], \"1559\": [1, 1, 2, 13, 0, 0, 0.2561688067457042, 2.590449630549882, 3], \"1063\": [0, 0, 4, 11, 0, 0, 2.662587827025453, 4.62333748994354, 3], \"1562\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1428\": [0, 0, 2, 11, 0, 0, 0.30774963550259016, 2.4766141032099913, 3], \"1573\": [0, 0, 3, 35, 0, 0, 1.6650077635889111, 6.370471596253125, 3], \"937\": [1, 2, 3, 13, 0, 0.1118483001365689, 0.23607730009877803, 1.791759469228055, 2], \"1528\": [0, 0, 2, 12, 0, 0, 0.03003228709887505, 0.7407752295491999, 3], \"1581\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1587\": [1, 2, 4, 10, 0, 0.6466271649250525, 1.5339303599259553, 3.166625134524323, 2], \"1352\": [2, 3, 7, 29, 0.18315872720701828, 0.3731218633879398, 1.241936446289166, 3.767258621933462, 1], \"1603\": [4, 7, 11, 48, 0.15718558352241233, 0.4195498479899034, 0.8273432458576588, 3.2390955533174557, 1], \"1605\": [1, 1, 1, 12, 0, 0, 0, 1.7746063900018056, 4], \"1046\": [4, 7, 17, 32, 0.14732471475685843, 0.39616271544585085, 1.352495431436192, 2.412222165419132, 1], \"1612\": [0, 0, 0, 4, 0, 0, 0, 2.0014800002101243, 4], \"1615\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1616\": [3, 5, 9, 86, 1.0698333241180664, 1.843584537092641, 2.903290316887721, 7.361767360597057, 1], \"1621\": [0, 1, 1, 10, 0, 0, 0, 2.557596383156278, 4], \"1622\": [0, 0, 5, 46, 0, 0, 2.5147596129376817, 6.869864590045299, 3], \"454\": [0, 3, 3, 15, 0, 0.6103748942760823, 0.6103748942760823, 3.092316068474225, 2], \"1627\": [1, 1, 2, 2, 0, 0, 0.9808292530117262, 0.9808292530117262, 3], \"1628\": [0, 0, 3, 27, 0, 0, 1.3618033411115948, 5.464515005161497, 3], \"1632\": [1, 1, 5, 47, 0, 0, 1.7434408919572473, 6.03498478488604, 3], \"1633\": [0, 1, 2, 20, 0, 0, 1.209837923778334, 5.465077290303066, 3], \"1170\": [1, 1, 2, 14, 0, 0, 0.27008631056140137, 2.7846283571948938, 3], \"1580\": [1, 1, 3, 13, 0, 0, 0.15575452940923282, 1.426666816410278, 3], \"1636\": [0, 0, 1, 3, 0, 0, 0, 1.3156767939059373, 4], \"1649\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1277\": [1, 1, 4, 6, 0, 0, 2.662587827025453, 3.4339872044851463, 3], \"1371\": [0, 3, 7, 20, 0, 0.14732471475685843, 0.6228306821424855, 2.086252509457247, 2], \"1650\": [1, 1, 5, 8, 0, 0, 2.6026896854443837, 3.4965075614664802, 3], \"1653\": [0, 0, 0, 3, 0, 0, 0, 1.11365016603265, 4], \"1085\": [8, 12, 38, 68, 2.1330538065527955, 2.8305637468283047, 5.0379799630678175, 6.300785794663244, 1], \"1655\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1661\": [1, 2, 2, 9, 0, 0.27193371548364176, 0.27193371548364176, 1.9917196850866075, 2], \"1016\": [0, 2, 2, 8, 0, 0.24067603007585034, 0.24067603007585034, 1.6777956616386671, 2], \"1117\": [0, 0, 2, 14, 0, 0, 0.6690496289808848, 3.8642323415917974, 3], \"1666\": [0, 0, 1, 2, 0, 0, 0, 0.19574457712609533, 4], \"1669\": [1, 1, 1, 12, 0, 0, 0, 2.822816889140834, 4], \"1676\": [0, 0, 1, 13, 0, 0, 0, 4.400310836168771, 4], \"1681\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1684\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1687\": [0, 0, 0, 20, 0, 0, 0, 7.196187070324464, 4], \"1692\": [0, 1, 2, 4, 0, 0, 1.349926716949016, 2.5199979695992702, 3], \"1696\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"664\": [1, 1, 2, 14, 0, 0, 0.9555114450274365, 4.37449836825309, 3], \"697\": [0, 1, 2, 5, 0, 0, 0.2363887780642304, 0.9808292530117262, 3], \"1286\": [2, 2, 2, 5, 0.7191226669632059, 0.7191226669632059, 0.7191226669632059, 2.02537432040956, 1], \"1703\": [0, 0, 0, 8, 0, 0, 0, 4.859812404361672, 4], \"1704\": [0, 0, 0, 4, 0, 0, 0, 1.0509842396788551, 4], \"1707\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1711\": [0, 1, 1, 0, 0, 0, 0, 0, 4], \"164\": [0, 0, 2, 9, 0, 0, 0.18149202543157925, 1.6153903109613956, 3], \"1714\": [0, 0, 5, 27, 0, 0, 1.8258924755975134, 5.029620594007336, 3], \"1715\": [1, 1, 1, 2, 0, 0, 0, 1.0986122886681096, 4], \"1716\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1717\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"58\": [2, 2, 4, 14, 0.01581060602664226, 0.01581060602664226, 0.061795719268465645, 0.5771056554817849, 1], \"1381\": [0, 0, 2, 11, 0, 0, 1.133098464739279, 4.169517130399594, 3], \"1646\": [0, 0, 2, 18, 0, 0, 0.06371581438610768, 1.84513392981943, 3], \"1719\": [0, 0, 0, 2, 0, 0, 0, 0, 4], \"1722\": [0, 0, 0, 3, 0, 0, 0, 2.217225244042889, 4], \"1727\": [0, 0, 1, 6, 0, 0, 0, 4.110873864173311, 4], \"1728\": [0, 0, 1, 2, 0, 0, 0, 1.1700712526502546, 4], \"1730\": [0, 0, 2, 3, 0, 0, 0.5042466526679481, 0.9064059726416132, 3], \"1739\": [0, 0, 0, 7, 0, 0, 0, 2.8217628372682206, 4], \"1745\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1733\": [0, 0, 21, 74, 0, 0, 5.248862771314089, 7.86657625976456, 3], \"1750\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1752\": [2, 2, 3, 8, 0.4519851237430572, 0.4519851237430572, 0.8266785731844679, 2.316769727986002, 1], \"1753\": [3, 4, 17, 66, 0.33774693405321354, 0.538996500732687, 2.632017300538904, 5.275377680968714, 1], \"1758\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1762\": [2, 3, 9, 30, 0.0922312242160336, 0.19671029424605424, 1.084013489246957, 3.124087248135773, 1], \"1768\": [0, 0, 2, 6, 0, 0, 1.6094379124341003, 3.6109179126442243, 3], \"1776\": [0, 0, 1, 14, 0, 0, 0, 3.0842496082184994, 4], \"673\": [0, 0, 3, 14, 0, 0, 0.4881938233057933, 2.6882755454427927, 3], \"1791\": [1, 3, 8, 20, 0, 0.10623186692973738, 0.5861248448271091, 1.7886412877180629, 2], \"1792\": [0, 0, 0, 5, 0, 0, 0, 2.2043674648485996, 4], \"1796\": [0, 0, 0, 2, 0, 0, 0, 1.6094379124341003, 4], \"1805\": [0, 0, 0, 2, 0, 0, 0, 1.9042374526547454, 4], \"1810\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1815\": [0, 0, 4, 10, 0, 0, 1.7661826274384054, 3.4437149076531584, 3], \"1818\": [0, 0, 0, 3, 0, 0, 0, 1.7047480922384253, 4], \"655\": [2, 2, 2, 6, 0.8109302162163288, 0.8109302162163288, 0.8109302162163288, 2.505525936990736, 1], \"1826\": [0, 1, 2, 11, 0, 0, 1.0986122886681096, 4.119037174812473, 3], \"1828\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"1832\": [0, 0, 0, 3, 0, 0, 0, 2.3978952727983707, 4], \"588\": [1, 2, 4, 17, 0, 0.4978384282391795, 1.2755429968271879, 3.8631038006752716, 2], \"1770\": [1, 1, 6, 9, 0, 0, 1.583292632329778, 2.2731230602637296, 3], \"1840\": [0, 0, 0, 3, 0, 0, 0, 2.217225244042889, 4], \"1845\": [2, 2, 3, 6, 0.7621400520468967, 0.7621400520468967, 1.2729656758128876, 2.423537703411708, 1], \"1847\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1858\": [0, 1, 1, 3, 0, 0, 0, 1.4663370687934272, 4], \"1859\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1860\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1865\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1875\": [0, 0, 0, 3, 0, 0, 0, 2.772588722239781, 4], \"1876\": [0, 0, 0, 4, 0, 0, 0, 2.342936388517613, 4], \"1879\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"1890\": [1, 1, 1, 2, 0, 0, 0, 0.3007541540191337, 4], \"1895\": [0, 0, 1, 11, 0, 0, 0, 2.8410258837930096, 4], \"1896\": [1, 1, 3, 21, 0, 0, 0.8780695190539574, 4.247155058690403, 3], \"1839\": [0, 1, 2, 3, 0, 0, 0.2629424662760252, 0.5168226432383649, 3], \"1900\": [1, 1, 1, 3, 0, 0, 0, 1.9459101490553132, 4], \"1902\": [0, 0, 2, 21, 0, 0, 1.209837923778334, 5.562264088675925, 3], \"1903\": [1, 1, 3, 5, 0, 0, 2.505525936990736, 3.4735180432417816, 3], \"1914\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1829\": [0, 0, 2, 10, 0, 0, 0.34228620648663277, 2.416278143398904, 3], \"1912\": [0, 0, 1, 4, 0, 0, 0, 2.5199979695992702, 4], \"1918\": [2, 2, 5, 13, 0.680877087968131, 0.680877087968131, 1.9597512004671847, 3.7428824884719014, 1], \"1713\": [0, 1, 4, 17, 0, 0, 0.3437715391028245, 2.1294519622544974, 3], \"1736\": [0, 0, 3, 5, 0, 0, 2.772588722239781, 3.7534179752515073, 3], \"1923\": [0, 1, 1, 0, 0, 0, 0, 0, 4], \"1924\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1943\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1934\": [0, 0, 1, 5, 0, 0, 0, 2.810907586541918, 4], \"1935\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1939\": [0, 0, 1, 2, 0, 0, 0, 0.5623075796011341, 4], \"1959\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1953\": [9, 12, 17, 34, 1.8863036815827319, 2.347697743898214, 3.0544628774286737, 4.404755867914859, 1], \"1974\": [0, 0, 0, 2, 0, 0, 0, 0.5968160716215132, 4], \"1954\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1962\": [4, 7, 11, 56, 0.9873866535578852, 1.8177349556313156, 2.620081428156253, 5.802436340403589, 1], \"1582\": [2, 2, 4, 12, 0.19384140062681604, 0.19384140062681604, 0.6182161630922726, 2.163384490364451, 1], \"1635\": [4, 4, 6, 20, 0.1859335866426544, 0.1859335866426544, 0.37827896780400755, 1.8096905476894938, 1], \"1267\": [0, 0, 3, 7, 0, 0, 0.7741883905630712, 1.9965538818740682, 3], \"1977\": [1, 1, 5, 8, 0, 0, 1.5660874715604867, 2.3699604954668168, 3], \"1978\": [1, 1, 1, 4, 0, 0, 0, 2.662587827025453, 4], \"908\": [1, 3, 6, 20, 0, 0.06300193657166703, 0.23120346829131005, 1.3584537351469488, 2], \"1630\": [0, 0, 2, 12, 0, 0, 0.1684645221325284, 2.0288722729061512, 3], \"1986\": [0, 2, 2, 5, 0, 0.7777045685880084, 0.7777045685880084, 2.1226137135450447, 2], \"670\": [0, 1, 3, 8, 0, 0, 0.22258938116979743, 1.0198768209823397, 3], \"2009\": [1, 1, 2, 5, 0, 0, 1.6945957207744073, 3.3596034843633182, 3], \"1996\": [0, 0, 0, 7, 0, 0, 0, 4.131158535344817, 4], \"2000\": [0, 0, 0, 5, 0, 0, 0, 1.9189724933235048, 4], \"2001\": [0, 0, 1, 2, 0, 0, 0, 0.4369283775639494, 4], \"550\": [2, 2, 4, 11, 0.6157605169445252, 0.6157605169445252, 1.4825711915553106, 3.286335606880189, 1], \"2008\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2013\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2017\": [0, 0, 0, 3, 0, 0, 0, 1.252762968495368, 4], \"2029\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2012\": [0, 0, 4, 21, 0, 0, 2.0739919369122712, 5.261337618815904, 3], \"2026\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2028\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2045\": [0, 0, 0, 2, 0, 0, 0, 0.35454501768090746, 4], \"1478\": [0, 0, 2, 8, 0, 0, 0.4737843520856416, 2.3699604954668168, 3], \"2034\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"2047\": [0, 1, 3, 6, 0, 0, 0.5229653783166013, 1.3212468045933692, 3], \"2044\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"740\": [0, 1, 2, 10, 0, 0, 0.16635770580494058, 1.709262772592952, 3], \"2069\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2049\": [0, 0, 0, 3, 0, 0, 0, 1.1451323043030026, 4], \"2050\": [0, 0, 0, 2, 0, 0, 0, 0.10453372768183221, 4], \"1883\": [2, 2, 3, 6, 0.680877087968131, 0.680877087968131, 1.1616252564968437, 2.2803893606022614, 1], \"2074\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2061\": [0, 0, 0, 2, 0, 0, 0, 2.3978952727983707, 4], \"2067\": [1, 1, 21, 84, 0, 0, 5.202568412906826, 8.063008966094763, 3], \"2055\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2071\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2111\": [0, 0, 1, 6, 0, 0, 0, 5.8888779583328805, 4], \"1197\": [1, 2, 2, 4, 0, 0.5316597106688327, 0.5316597106688327, 1.3368460857059095, 2], \"1499\": [0, 0, 2, 5, 0, 0, 1.133098464739279, 2.650272400435399, 3], \"2121\": [1, 4, 6, 13, 0, 0.34154838965307355, 0.6502556159306323, 1.6677548293917108, 2], \"441\": [2, 2, 2, 6, 0.12555653398976382, 0.12555653398976382, 0.12555653398976382, 0.7902799611118209, 1], \"948\": [0, 1, 3, 19, 0, 0, 0.09726884235514541, 1.6287730471515585, 3], \"957\": [1, 2, 6, 9, 0, 0.0840831172105414, 0.581921545449721, 1.0211247931897356, 2], \"1032\": [1, 1, 4, 22, 0, 0, 1.4663370687934272, 4.62333748994354, 3], \"1983\": [0, 2, 6, 14, 0, 0.462623521948113, 1.83961549040569, 3.3952976595349673, 2], \"2058\": [1, 2, 7, 14, 0, 0.03378699757738322, 0.3513342472922535, 0.9872518826681935, 2], \"2115\": [0, 0, 1, 6, 0, 0, 0, 4.110873864173311, 4], \"2104\": [0, 0, 0, 2, 0, 0, 0, 1.5339303599259553, 4], \"2123\": [0, 0, 11, 20, 0, 0, 3.987075655642633, 5.2084921169742815, 3], \"2117\": [2, 6, 9, 58, 0.39730179746900346, 1.684590634813445, 2.3867468853157563, 6.019186475073673, 1], \"2139\": [2, 5, 32, 66, 0.39730179746900346, 1.3984157216522355, 4.732318209282441, 6.277056021146821, 1], \"1120\": [1, 1, 2, 8, 0, 0, 0.6359887667199967, 2.7227563484919055, 3], \"1651\": [0, 0, 2, 13, 0, 0, 0.1263507915496621, 1.9006491037491173, 3], \"2146\": [0, 1, 9, 16, 0, 0, 4.34936267895397, 5.54907608489522, 3], \"2132\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2135\": [0, 0, 0, 5, 0, 0, 0, 4.151039905898646, 4], \"2161\": [1, 2, 51, 98, 0, 1.007640510462383, 5.976998360015193, 8.261354842907501, 2], \"510\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1389\": [0, 0, 4, 10, 0, 0, 2.9326741375868544, 4.719490443017389, 3], \"1308\": [0, 0, 2, 5, 0, 0, 0.6576404921030354, 1.9189724933235048, 3], \"2183\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2176\": [1, 1, 2, 4, 0, 0, 0.4519851237430572, 1.1895840668738362, 3], \"2101\": [1, 2, 2, 7, 0, 1.1700712526502546, 1.1700712526502546, 3.340109689682317, 2], \"2181\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1710\": [0, 0, 7, 10, 0, 0, 3.6954174348112123, 4.43477720005941, 3], \"2079\": [0, 0, 2, 5, 0, 0, 2.1972245773362196, 3.9318256327243257, 3], \"495\": [1, 2, 2, 3, 0, 0.21019457697340665, 0.21019457697340665, 0.42285685082003355, 2], \"1400\": [0, 0, 6, 15, 0, 0, 1.7361277732419063, 3.408529741448608, 3], \"1697\": [0, 0, 7, 23, 0, 0, 4.537763281824306, 6.9650803456014065, 3], \"2198\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2218\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2210\": [1, 2, 5, 16, 0, 0.16775633188303693, 0.7615310386297786, 2.540774699926003, 2], \"2213\": [1, 1, 5, 18, 0, 0, 0.005264832630677154, 0.06617358571766961, 3], \"2217\": [1, 1, 73, 153, 0, 0, 5.881042692815042, 8.280452228942755, 3], \"2193\": [2, 3, 3, 5, 1.2992829841302609, 1.9459101490553132, 1.9459101490553132, 2.8716796248840124, 1], \"2226\": [0, 0, 0, 9, 0, 0, 0, 2.5446783930879175, 4], \"2206\": [12, 30, 43, 66, 2.5095313777877073, 3.7682367565042303, 4.892499435868672, 5.848501056671288, 1], \"2228\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2220\": [2, 3, 38, 78, 0.3483066942682158, 0.661398482245365, 4.917040056446192, 6.4532312205847875, 1], \"1951\": [0, 1, 3, 8, 0, 0, 0.5108256237659907, 1.7475882509149174, 3], \"2219\": [0, 0, 1, 3, 0, 0, 0, 0.21878624594525403, 4], \"2241\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2268\": [0, 0, 16, 46, 0, 0, 5.264537073407531, 7.475528183189878, 3], \"2245\": [0, 0, 0, 3, 0, 0, 0, 1.3618033411115948, 4], \"2237\": [2, 2, 3, 9, 0.6257058997644127, 0.6257058997644127, 1.084013489246957, 2.9236289796526473, 1], \"2256\": [0, 0, 12, 20, 0, 0, 4.517354410193098, 5.589742425278652, 3], \"2162\": [2, 3, 8, 22, 0.27380672595816385, 0.5357102670818683, 1.7982997149086648, 3.6663842286487593, 1], \"2270\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"2048\": [1, 1, 2, 15, 0, 0, 0.04976150955906385, 1.3532281395580696, 3], \"2297\": [0, 0, 33, 45, 0, 0, 5.518413244169956, 6.421030814292307, 3], \"2261\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2286\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2266\": [0, 1, 8, 14, 0, 0, 4.3370925863621554, 5.5053315359323625, 3], \"2291\": [0, 0, 8, 19, 0, 0, 4.9784090028224846, 6.806276110032283, 3], \"2314\": [0, 0, 1, 4, 0, 0, 0, 3.4965075614664802, 4], \"2322\": [0, 0, 5, 8, 0, 0, 0, 0, 3], \"2279\": [0, 0, 26, 32, 0, 0, 5.542294976173343, 6.240275845170769, 3], \"1112\": [0, 0, 2, 3, 0, 0, 0.30774963550259016, 0.5937747067467416, 3], \"2294\": [0, 0, 4, 4, 0, 0, 1.8182862235614836, 1.8182862235614836, 3], \"2295\": [1, 2, 8, 10, 0, 0.9808292530117262, 3.3202283191284883, 3.7534179752515073, 2], \"2292\": [0, 0, 6, 11, 0, 0, 1.3212468045933692, 2.3259735600805267, 3], \"1274\": [0, 0, 2, 4, 0, 0, 1.007640510462383, 2.0739919369122712, 3], \"1461\": [0, 0, 2, 6, 0, 0, 0.4572413776318843, 1.8273504143307577, 3], \"1431\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2306\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2312\": [0, 1, 1, 0, 0, 0, 0, 0, 4], \"355\": [0, 0, 4, 8, 0, 0, 0.5262898494635722, 1.3272242663307092, 3], \"1878\": [0, 0, 2, 10, 0, 0, 0.04495138786226632, 0.7652004982000029, 3], \"2200\": [0, 0, 2, 3, 0, 0, 1.6945957207744073, 2.3978952727983707, 3], \"2320\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2321\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1456\": [0, 1, 2, 2, 0, 0, 0.29626581614317243, 0.29626581614317243, 3], \"1969\": [0, 0, 5, 7, 0, 0, 5.422457576969805, 6.19644412779452, 3], \"2311\": [0, 0, 1, 2, 0, 0, 0, 1.6094379124341003, 4], \"696\": [0, 0, 2, 4, 0, 0, 0.462623521948113, 1.209837923778334, 3], \"966\": [1, 2, 8, 11, 0, 0.20479441264601322, 1.5339303599259553, 2.063693184711697, 2], \"2345\": [0, 0, 3, 4, 0, 0, 1.1451323043030026, 1.5705980791178364, 3], \"2353\": [0, 0, 6, 16, 0, 0, 3.7903653613965784, 5.771441123130016, 3], \"2383\": [6, 10, 28, 48, 0.4423845982176617, 0.9343644356767398, 2.5739445654687763, 3.600335358921681, 1], \"586\": [0, 0, 3, 4, 0, 0, 0.17351092711179975, 0.29031019485805043, 3], \"933\": [1, 2, 3, 5, 0, 0.29849298855599654, 0.5780778507751582, 1.1549652252192413, 2], \"2334\": [1, 1, 2, 6, 0, 0, 0.5316597106688327, 1.9900349539642512, 3], \"2352\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"2385\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2114\": [0, 0, 4, 6, 0, 0, 2.3978952727983707, 3.157000421150113, 3], \"2333\": [0, 0, 3, 3, 0, 0, 1.7469089030627032, 1.7469089030627032, 3], \"1701\": [0, 1, 3, 8, 0, 0, 1.084013489246957, 2.7022362312367902, 3], \"2332\": [1, 1, 2, 3, 0, 0, 0.8873031950009028, 1.4384801142904609, 3], \"2338\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2341\": [0, 1, 1, 2, 0, 0, 0, 0.538996500732687, 4], \"2396\": [0, 0, 0, 2, 0, 0, 0, 1.791759469228055, 4], \"2359\": [0, 0, 4, 9, 0, 0, 2.342936388517613, 3.8845913509674754, 3], \"2349\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2357\": [0, 0, 3, 4, 0, 0, 1.3156767939059373, 1.7661826274384054, 3], \"2367\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2344\": [1, 2, 4, 7, 0, 1.0663514264498883, 2.1539745935424026, 3.1918471524802814, 2], \"2375\": [1, 1, 2, 3, 0, 0, 1.6945957207744073, 2.3978952727983707, 3], \"2377\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2378\": [0, 1, 1, 2, 0, 0, 0, 0.9315582040049435, 4], \"2380\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1765\": [0, 0, 2, 4, 0, 0, 0.27193371548364176, 0.8109302162163288, 3], \"2389\": [0, 0, 1, 3, 0, 0, 0, 1.0560526742493137, 4], \"2420\": [0, 0, 2, 2, 0, 0, 1.9042374526547454, 1.9042374526547454, 3], \"2394\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2395\": [0, 0, 4, 4, 0, 0, 2.3978952727983707, 2.3978952727983707, 3], \"1677\": [1, 2, 3, 8, 0, 0.14413390158378703, 0.29924289485285693, 1.2472104833805822, 2], \"1966\": [2, 2, 4, 7, 0.1506602748874898, 0.1506602748874898, 0.5010216236693699, 1.0958985827965135, 1], \"2246\": [1, 1, 3, 3, 0, 0, 1.791759469228055, 1.791759469228055, 3], \"2399\": [0, 1, 1, 2, 0, 0, 0, 1.6094379124341003, 4], \"2401\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"244\": [0, 1, 2, 4, 0, 0, 1.0986122886681096, 2.1972245773362196, 3], \"1583\": [0, 0, 3, 5, 0, 0, 1.591893602783191, 2.47397757925581, 3], \"2036\": [0, 0, 2, 2, 0, 0, 2.3978952727983707, 2.3978952727983707, 3], \"2416\": [0, 1, 3, 4, 0, 0, 0.7672551527136672, 1.1155618469818829, 3], \"2290\": [0, 0, 2, 3, 0, 0, 1.6945957207744073, 2.3978952727983707, 3], \"2413\": [0, 0, 2, 2, 0, 0, 0.21019457697340665, 0.21019457697340665, 3], \"2414\": [0, 0, 3, 8, 0, 0, 2.772588722239781, 4.679040034554547, 3], \"2417\": [1, 4, 7, 11, 0, 2.0014800002101243, 3.0252910757955354, 3.899950424193877, 2], \"2419\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1814\": [0, 1, 2, 2, 0, 0, 0.8873031950009028, 0.8873031950009028, 3], \"2485\": [0, 1, 5, 7, 0, 0, 3.893549597631809, 4.59511985013459, 3], \"1949\": [1, 1, 2, 2, 0, 0, 1.1700712526502546, 1.1700712526502546, 3], \"2264\": [1, 1, 2, 3, 0, 0, 0.18149202543157925, 0.37001835911241676, 3], \"2265\": [0, 0, 3, 3, 0, 0, 0.6876375247489758, 0.6876375247489758, 3], \"2427\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"2432\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"2434\": [0, 0, 1, 2, 0, 0, 0, 1.252762968495368, 4], \"2435\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2038\": [0, 0, 2, 5, 0, 0, 0.1292117314800062, 0.6216882165778004, 3], \"2448\": [0, 0, 3, 5, 0, 0, 1.55814461804655, 2.4350742760401247, 3], \"1332\": [0, 0, 3, 9, 0, 0, 1.0169342576538425, 2.8262688717034052, 3], \"1544\": [0, 1, 3, 3, 0, 0, 0.13024159768843604, 0.13024159768843604, 3], \"2450\": [0, 3, 6, 23, 0, 1.11365016603265, 2.217225244042889, 4.797667070823699, 2], \"2506\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"2447\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"2350\": [0, 1, 3, 4, 0, 0, 0.5858181603294468, 0.8820839764726192, 3], \"2454\": [0, 0, 1, 0, 0, 0, 0, 0, 4], \"900\": [0, 0, 2, 3, 0, 0, 0.7472144018302211, 1.252762968495368, 3], \"1054\": [0, 1, 2, 7, 0, 0, 0.11279549414534437, 0.9012528545096146, 3], \"1960\": [1, 2, 4, 8, 0, 0.08286311601350513, 0.29681946470121906, 0.8680619651672683, 2], \"1007\": [0, 0, 4, 8, 0, 0, 1.7414976344471667, 2.986869586296146, 3], \"2472\": [1, 1, 1, 3, 0, 0, 0, 2.3978952727983707, 4], \"2479\": [27, 42, 57, 92, 3.029224905152039, 3.557660816726236, 4.445318346154121, 5.453299725552011, 1], \"2443\": [0, 3, 4, 6, 0, 1.3618033411115948, 1.8182862235614836, 2.5347203555002196, 2], \"2526\": [1, 3, 5, 11, 0, 1.084013489246957, 1.8617180578349655, 3.307045950539049, 2], \"2494\": [0, 1, 11, 15, 0, 0, 4.8055661899830735, 5.5254529391317835, 3], \"2505\": [0, 0, 12, 30, 0, 0, 3.6752960316117913, 5.5254529391317835, 3], \"2512\": [0, 0, 1, 2, 0, 0, 0, 1.209837923778334, 4], \"2513\": [0, 0, 3, 5, 0, 0, 2.302585092994046, 3.258096538021482, 3], \"1418\": [1, 2, 3, 11, 0, 0.49159426183810306, 0.8873031950009028, 3.005996872165874, 2], \"2521\": [0, 1, 3, 8, 0, 0, 2.217225244042889, 4.080614369410199, 3], \"1463\": [1, 1, 2, 5, 0, 0, 0.27958486221916157, 1.1039742318094952, 3], \"1744\": [0, 2, 3, 3, 0, 1.0360919316867756, 1.6274564179367788, 1.6274564179367788, 2], \"2481\": [0, 0, 2, 4, 0, 0, 0.3483066942682158, 0.9808292530117262, 3], \"2525\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2528\": [8, 8, 9, 10, 2.2935259609503627, 2.2474578670390346, 2.518377748894864, 2.7136681934064333, 1], \"2536\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"2018\": [0, 0, 2, 2, 0, 0, 2.3978952727983707, 2.3978952727983707, 3], \"2489\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2545\": [10, 27, 31, 40, 2.5362174176726806, 3.948835826686065, 4.633718949024457, 5.24299118318281, 1], \"2550\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1584\": [1, 1, 2, 5, 0, 0, 0.3007541540191337, 1.1609554192422453, 3], \"2569\": [0, 0, 1, 2, 0, 0, 0, 1.791759469228055, 4], \"2567\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1777\": [0, 0, 2, 6, 0, 0, 0.07289200226803154, 0.5191088036556052, 3], \"2574\": [0, 0, 1, 2, 0, 0, 0, 1.9042374526547454, 4], \"2591\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2653\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2615\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"2625\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2641\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2707\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2716\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2564\": [1, 2, 2, 2, 0, 1.6945957207744073, 1.6945957207744073, 1.6945957207744073, 2], \"2734\": [1, 3, 3, 8, 0, 0.18884373606243307, 0.18884373606243307, 0.9074760146282086, 2], \"2809\": [17, 20, 20, 61, 1.208838993977109, 1.4473971086925055, 1.4473971086925055, 3.442084414717766, 1], \"2687\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1894\": [10, 14, 14, 42, 0.4110418019017627, 0.6913662361889505, 0.6913662361889505, 2.2993771059263626, 1], \"2747\": [1, 2, 2, 2, 0, 0.05007303798232116, 0.05007303798232116, 0.05007303798232116, 2], \"2843\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1186\": [1, 2, 2, 4, 0, 0.38946476676172326, 0.38946476676172326, 1.0663514264498883, 2], \"1258\": [1, 3, 3, 6, 0, 0.03250557040493138, 0.03250557040493138, 0.12412606741381713, 2], \"1950\": [1, 2, 2, 3, 0, 0.20800057121164617, 0.20800057121164617, 0.4188624376799856, 2], \"2818\": [3, 12, 12, 22, 1.0169342576538425, 3.0962880495182237, 3.3753766820404127, 4.563326427815031, 1], \"1907\": [1, 3, 3, 5, 0, 2.448991251267845, 2.505525936990736, 3.4735180432417816, 2], \"2403\": [3, 4, 4, 6, 1.0169342576538425, 1.4200325007517407, 1.4200325007517407, 2.086767581771909, 1], \"2736\": [1, 2, 2, 2, 0, 0.9808292530117262, 0.9808292530117262, 0.9808292530117262, 2], \"2875\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1798\": [0, 2, 2, 4, 0, 0.06351340572232586, 0.06351340572232586, 0.2329315576803726, 2], \"2538\": [0, 2, 2, 6, 0, 1.209837923778334, 1.209837923778334, 3.0990318433917947, 2], \"2732\": [2, 5, 5, 12, 0.04251437271498565, 0.24015332734241052, 0.24015332734241052, 0.9413805008302061, 1], \"2868\": [0, 1, 1, 3, 0, 0, 0, 1.890850371872286, 4], \"2849\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2891\": [0, 1, 1, 2, 0, 0, 0, 1.0986122886681096, 4], \"584\": [3, 4, 4, 12, 0.045393572260362246, 0.07932799650553095, 0.07932799650553095, 0.5556273049170338, 1], \"1390\": [1, 2, 2, 3, 0, 0.0328167266016282, 0.0328167266016282, 0.07237884791167314, 2], \"1487\": [1, 3, 3, 8, 0, 1.3618033411115948, 1.3618033411115948, 3.0747819324865358, 2], \"1908\": [7, 9, 9, 28, 0.20368388041614544, 0.31732144188640793, 0.31732144188640793, 1.5292184563921445, 1], \"2774\": [3, 4, 4, 7, 2.762122130428218, 3.041139686606299, 3.3202283191284883, 4.4148164574968725, 1], \"2914\": [0, 1, 1, 2, 0, 0, 0, 1.0360919316867756, 4], \"3000\": [0, 1, 1, 0, 0, 0, 0, 0, 4], \"1278\": [2, 3, 3, 4, 0.065169635074581, 0.14107859825990554, 0.14107859825990554, 0.23851304864531114, 1], \"2347\": [14, 15, 15, 16, 2.534007410971919, 2.615753882563837, 2.672288568286728, 2.7929635704288334, 1], \"2859\": [1, 2, 2, 3, 0, 0.09860197680453955, 0.09860197680453955, 0.20958048476658914, 2], \"2212\": [2, 2, 2, 2, 0.4096756406445079, 0.4096756406445079, 0.4096756406445079, 0.4096756406445079, 1], \"3057\": [7, 7, 7, 8, 2.528507279246713, 2.482439185335385, 2.538973871058276, 2.787360039560094, 1], \"1153\": [3, 3, 3, 4, 0.039220713153281295, 0.039220713153281295, 0.039220713153281295, 0.06869653128623486, 1], \"1723\": [2, 2, 2, 4, 1.5989713206225373, 1.6094379124341003, 1.6094379124341003, 2.833213344056216, 1], \"3024\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3056\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"455\": [3, 3, 3, 10, 0.2115583769789802, 0.2115583769789802, 0.2115583769789802, 1.28586639572104, 1], \"2953\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"3158\": [5, 5, 5, 5, 1.6591901806155922, 1.6696567724271552, 1.6696567724271552, 1.6696567724271552, 1], \"3058\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"1275\": [2, 2, 2, 4, 0.3452699473247421, 0.3452699473247421, 0.3452699473247421, 0.9743651063918369, 1], \"3178\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"1509\": [2, 2, 2, 3, 0.01673679235552381, 0.01673679235552381, 0.01673679235552381, 0.03727139479723162, 1], \"3188\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3189\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"2221\": [4, 4, 4, 4, 1.349926716949016, 1.349926716949016, 1.349926716949016, 1.349926716949016, 1], \"3191\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"577\": [2, 2, 2, 3, 0.02272825107755612, 0.02272825107755612, 0.02272825107755612, 0.05043085362689191, 1], \"2059\": [2, 2, 2, 5, 0.5705448584676129, 0.5705448584676129, 0.5705448584676129, 1.7591832987934422, 1], \"2107\": [2, 2, 2, 5, 0.39730179746900346, 0.39730179746900346, 0.39730179746900346, 1.3984157216522355, 1], \"3222\": [0, 0, 0, 2, 0, 0, 0, 1.9042374526547454, 4], \"3212\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3062\": [2, 2, 2, 6, 0.056592185311170023, 0.056592185311170023, 0.056592185311170023, 0.4213499186481875, 1], \"3229\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"3241\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3218\": [3, 3, 3, 3, 1.1962507582320256, 1.1962507582320256, 1.1962507582320256, 1.1962507582320256, 1], \"3266\": [2, 2, 2, 4, 0.4096756406445079, 0.4096756406445079, 0.4096756406445079, 1.107015699464489, 1], \"3267\": [1, 1, 1, 0, 0, 0, 0, 0, 4], \"3240\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3277\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3278\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3298\": [0, 0, 0, 0, 0, 0, 0, 0, 4], \"3314\": [0, 0, 0, 0, 0, 0, 0, 0, 4]}"
}